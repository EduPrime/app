generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "cadastro", "modules", "pmieducar", "portal", "oldpublic", "relatorio", "softagon", "urbano"]
}

model User {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  role      roleType  @default(PUBLICO)
  tenantId  String?
  email     String?
  apiUserId String
  servers   Servers[]
  Teacher   Teacher[] @relation(map: "user_teacher_fkey")

  @@schema("public")
}

model AcademicYear {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  schoolId    String    @db.Uuid
  templateId  String    @db.Uuid
  refYear     Int
  metadata    Json?
  createdAt   DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime? @updatedAt @db.Timestamptz(6)
  updatedBy   String?   @db.Uuid
  tenantId    String?
  deletedAt   DateTime? @db.Timestamptz(6)
  userCreated String?   @db.Uuid

  @@map("academicYear")
  @@schema("public")
}

model AcademicYearTemplate {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  refYear     Int
  name        String    @unique @db.VarChar(100)
  stages      Json
  stageCount  Int?
  metadata    Json?
  createdAt   DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime? @updatedAt @db.Timestamptz(6)
  deletedAt   DateTime? @db.Timestamptz(6)
  userCreated String?   @db.Uuid
  updatedBy   String?   @db.Uuid
  tenantId    String?

  @@map("academicYearTemplate")
  @@schema("public")
}

model Classroom {
  id                String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  seriesId          String     @db.Uuid
  maxStudents       Int
  exceededStudents  Int        @default(0)
  totalStudents     Int        @default(0)
  pcdStudents       Int        @default(0)
  startTime         DateTime?  @db.Timestamp(6)
  startTimeInterval DateTime?  @db.Timestamp(6)
  endTimeInterval   DateTime?  @db.Timestamp(6)
  endTime           DateTime?  @db.Timestamp(6)
  dayofweek         dayofweek?
  name              String     @db.VarChar(100)
  period            period?    @default(MORNING)
  status            status?    @default(ACTIVE)
  abbreviation      String?    @db.VarChar(100)
  year              Int
  metadata          Json?
  userCreated       String?    @db.VarChar(255)
  createdAt         DateTime?  @default(now()) @db.Timestamp(6)
  deletedAt         DateTime?  @db.Timestamp(6)
  updatedAt         DateTime?  @updatedAt @db.Timestamp(6)
  schoolId          String?    @db.Uuid
  updatedBy         String?    @db.Uuid
  tenantId          String?

  school                                                            School?             @relation(fields: [schoolId], references: [id], onDelete: Restrict, map: "classroom_school_id_fkey")
  series                                                            Series              @relation(fields: [seriesId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "classroom_seriesid_fkey")
  enrollment                                                        Enrollment[]
  enrollmenthistory_enrollmenthistory_currentClassroomIdToclassroom EnrollmentHistory[] @relation("enrollmenthistory_currentClassroomIdToclassroom")
  enrollmenthistory_enrollmenthistory_formerClassroomIdToclassroom  EnrollmentHistory[] @relation("enrollmenthistory_formerClassroomIdToclassroom")
  Schedule                                                          Schedule[]          @relation(map: "schedule_classroom_id_fkey")
  Attendance                                                        Attendance[]        @relation(map: "faltacc_classroom_id_fkey")
  TeacherAttendance                                                 TeacherAttendance[] @relation(map: "faltaprof_classroom_id_fkey")
  Content                                                           Content[]

  @@map("classroom")
  @@schema("public")
}

model Course {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String           @db.VarChar(100)
  status         status?          @default(ACTIVE)
  metadata       Json?
  createdAt      DateTime?        @default(now()) @db.Timestamp(6)
  deletedAt      DateTime?        @db.Timestamp(6)
  updatedAt      DateTime?        @updatedAt @db.Timestamp(6)
  userCreated    String?          @db.VarChar(255)
  updatedBy      String?          @db.Uuid
  tenantId       String?
  courseStage    Int
  graduate       String?
  workload       Decimal?         @db.Decimal
  teachingType   String
  regimeType     String?
  courseModality String
  institutionId  String           @db.Uuid
  schoolId       String?          @db.Uuid
  institution    Institution      @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "course_institutionId_fkey")
  enrollment     Enrollment[]
  preenrollment  PreEnrollment[]
  series         Series[]
  School         School?          @relation(fields: [schoolId], references: [id])
  EvaluationRule EvaluationRule[] @relation(map: "rule_course_fkey")

  @@map("course")
  @@schema("public")
}

model Discipline {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String    @db.VarChar(100)
  status        status?   @default(ACTIVE)
  metadata      Json?
  userCreated   String?   @db.Uuid
  createdAt     DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt     DateTime? @db.Timestamptz(6)
  updatedAt     DateTime? @updatedAt @db.Timestamptz(6)
  workload      Decimal?  @db.Decimal
  updatedBy     String?   @db.Uuid
  tenantId      String?
  codDisciplina Int?

  DisciplineAttendance    DisciplineAttendance[]    @relation(map: "faltacc_discipline_id_fkey")
  ExamGrade               ExamGrade[]               @relation(map: "notaexame_discipline_id_fkey")
  DisciplineGrade         DisciplineGrade[]         @relation(map: "notadisciplina_discipline_id_fkey")
  DisciplineStageFeedback DisciplineStageFeedback[] @relation(map: "pareceretapadisciplina_discipline_id_fkey")
  Schedule                Schedule[]                @relation(map: "schedule_discipline_id_fkey")
  Attendance              Attendance[]              @relation(map: "faltacc_discipline_id_fkey")
  ContentDiscipline       ContentDiscipline[]
  Bncc                    Bncc[]
  TeacherAttendance       TeacherAttendance[]       @relation(map: "faltaprof_discipline_id_fkey")

  @@map("discipline")
  @@schema("public")
}

model Stage {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  numberStage   Int
  startDate     DateTime  @db.Timestamp(6)
  endDate       DateTime  @db.Timestamp(6)
  institutionId String    @db.Uuid
  createdAt     DateTime  @default(now()) @db.Timestamp(6)
  deletedAt     DateTime? @db.Timestamp(6)
  updatedAt     DateTime? @updatedAt @db.Timestamp(6)
  updatedBy     String?   @db.Uuid
  tenantId      String?
  userCreated   String?   @db.VarChar(255)

  institution             Institution               @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "stage_institutionid_fkey")
  DisciplineStageFeedback DisciplineStageFeedback[] @relation(map: "pareceretapadisciplina_stage_id_fkey")
  StudentStageFeedback    StudentStageFeedback[]    @relation(map: "pareceretapaaluno_stage_id_fkey")
  DisciplineGrade         DisciplineGrade[]         @relation(map: "notadisciplina_stage_id_fkey")
  ExamGrade               ExamGrade[]               @relation(map: "notaexame_stage_id_fkey")
  GeneralGrade            GeneralGrade[]            @relation(map: "notageral_stage_id_fkey")
  DisciplineAttendance    DisciplineAttendance[]    @relation(map: "faltacc_stage_id_fkey")
  GeneralAttendance       GeneralAttendance[]       @relation(map: "faltageral_stage_id_fkey")
  Attendance              Attendance[]              @relation(map: "faltacc_stage_id_fkey")
  TeacherAttendance       TeacherAttendance[]       @relation(map: "faltaprof_stage_id_fkey")

  @@map("stage")
  @@schema("public")
}

model Enrollment {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  schoolId        String        @db.Uuid
  studentId       String        @unique(map: "enrollment_studentid_key") @db.Uuid
  courseId        String        @db.Uuid
  classroomId     String        @db.Uuid
  seriesId        String        @db.Uuid
  name            String        @db.VarChar(100)
  createdAt       DateTime?     @default(now()) @db.Timestamp(6)
  deletedAt       DateTime?     @db.Timestamp(6)
  updatedAt       DateTime?     @updatedAt @db.Timestamp(6)
  updatedBy       String?       @db.Uuid
  tenantId        String?
  dateEnrollment  DateTime      @db.Timestamp(6)
  observations    String?       @db.VarChar(200)
  status          status?       @default(ACTIVE)
  situation       situationType
  enrollmentCode  String        @unique(map: "enrollment_enrollmentcode_key") @db.VarChar(100)
  institutionId   String?       @db.Uuid
  preenrollmentId String?       @unique(map: "enrollment_preenrollmentid_key") @db.Uuid

  classroom               Classroom                 @relation(fields: [classroomId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enrollment_classroomid_fkey")
  course                  Course                    @relation(fields: [courseId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enrollment_courseid_fkey")
  institution             Institution?              @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enrollment_institutionid_fkey")
  preenrollment           PreEnrollment?            @relation(fields: [preenrollmentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enrollment_preenrollmentid_fkey")
  school                  School                    @relation(fields: [schoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enrollment_schoolid_fkey")
  series                  Series                    @relation(fields: [seriesId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enrollment_seriesid_fkey")
  student                 Student                   @relation(fields: [studentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enrollment_studentid_fkey")
  enrollmenthistory       EnrollmentHistory[]
  StudentAttendance       StudentAttendance[]       @relation(map: "faltaaluno_enrollment_id_fkey")
  ExamGrade               ExamGrade[]               @relation(map: "notaexame_enrollment_id_fkey")
  DisciplineGrade         DisciplineGrade[]         @relation(map: "notadisciplina_enrollment_id_fkey")
  StudentFeedback         StudentFeedback[]         @relation(map: "feedbackaluno_enrollment_id_fkey")
  StudentStageFeedback    StudentStageFeedback[]    @relation(map: "feedbacketapaaluno_enrollment_id_fkey")
  DisciplineStageFeedback DisciplineStageFeedback[] @relation(map: "feedbacketapadisciplina_enrollment_id_fkey")
  Attendance              Attendance[]              @relation(map: "faltacc_enrollment_id_fkey")

  @@map("enrollment")
  @@schema("public")
}

model EnrollmentHistory {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  startedAt          DateTime  @db.Timestamp(6)
  endedAt            DateTime? @db.Timestamp(6)
  formerClassroomId  String    @db.Uuid
  currentClassroomId String    @db.Uuid
  enrollmentId       String    @db.Uuid
  updatedBy          String?   @db.Uuid
  tenantId           String?
  createdAt          DateTime? @default(now()) @db.Timestamp(6)
  deletedAt          DateTime? @db.Timestamp(6)
  updatedAt          DateTime? @updatedAt @db.Timestamp(6)

  classroom_enrollmenthistory_currentClassroomIdToclassroom Classroom  @relation("enrollmenthistory_currentClassroomIdToclassroom", fields: [currentClassroomId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enrollmenthistory_currentclassroomid_fkey")
  enrollment                                                Enrollment @relation(fields: [enrollmentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enrollmenthistory_enrollmentid_fkey")
  classroom_enrollmenthistory_formerClassroomIdToclassroom  Classroom  @relation("enrollmenthistory_formerClassroomIdToclassroom", fields: [formerClassroomId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "enrollmenthistory_formerclassroomid_fkey")

  @@map("enrollmenthistory")
  @@schema("public")
}

model StudentAttendance {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  enrollmentId String    @db.Uuid
  missType     Int
  schoolId     String    @db.Uuid
  updatedAt    DateTime? @updatedAt @db.Timestamp(6)
  updatedBy    String?   @db.Uuid
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  deletedAt    DateTime? @db.Timestamp(6)
  tenantId     String?

  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], map: "faltaaluno_enrollment_id_fkey")
  school     School     @relation(fields: [schoolId], references: [id], map: "faltaaluno_school_id_fkey")

  @@map("studentAttendance")
  @@schema("public")
}

model GeneralAttendance {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  studentId String    @db.Uuid
  numMissed Int
  stageId   String    @db.Uuid
  schoolId  String    @db.Uuid
  updatedAt DateTime? @updatedAt @db.Timestamp(6)
  updatedBy String?   @db.Uuid
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  tenantId  String?

  stage   Stage   @relation(fields: [stageId], references: [id], map: "faltageral_stage_id_fkey")
  student Student @relation(fields: [studentId], references: [id], map: "faltageral_student_id_fkey")
  school  School  @relation(fields: [schoolId], references: [id], map: "faltageral_school_id_fkey")

  @@map("generalAttendance")
  @@schema("public")
}

model DisciplineAttendance {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  studentId    String    @db.Uuid
  disciplineId String    @db.Uuid
  numMissed    Int
  stageId      String    @db.Uuid
  schoolId     String    @db.Uuid
  updatedAt    DateTime? @updatedAt @db.Timestamp(6)
  updatedBy    String?   @db.Uuid
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  deletedAt    DateTime? @db.Timestamp(6)
  tenantId     String?

  stage      Stage      @relation(fields: [stageId], references: [id], map: "faltacc_stage_id_fkey")
  student    Student    @relation(fields: [studentId], references: [id], map: "faltacc_student_id_fkey")
  discipline Discipline @relation(fields: [disciplineId], references: [id], map: "faltacc_discipline_id_fkey")
  school     School     @relation(fields: [schoolId], references: [id], map: "faltacc_school_id_fkey")

  @@map("disciplineAttendance")
  @@schema("public")
}

model TeacherAttendance {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date         DateTime       @db.Date
  totalClasses Int
  type         attendanceType
  teacherId    String         @db.Uuid
  classroomId  String         @db.Uuid
  disciplineId String?        @db.Uuid
  stageId      String         @db.Uuid
  schoolId     String         @db.Uuid
  updatedAt    DateTime?      @updatedAt @db.Timestamp(6)
  updatedBy    String?        @db.Uuid
  createdAt    DateTime       @default(now()) @db.Timestamp(6)
  deletedAt    DateTime?      @db.Timestamp(6)
  tenantId     String?
  teacher      Teacher        @relation(fields: [teacherId], references: [id], map: "faltaprof_teacher_id_fkey")
  classroom    Classroom      @relation(fields: [classroomId], references: [id], map: "faltaprof_classroom_id_fkey")
  discipline   Discipline?    @relation(fields: [disciplineId], references: [id], map: "faltaprof_discipline_id_fkey")
  stage        Stage          @relation(fields: [stageId], references: [id], map: "faltaprof_stage_id_fkey")
  school       School         @relation(fields: [schoolId], references: [id], map: "faltaprof_school_id_fkey")

  @@map("teacherAttendance")
  @@schema("public")
}

model Attendance {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date            DateTime       @db.Date
  presence        Boolean        @default(true)
  teacherId       String         @db.Uuid
  studentId       String         @db.Uuid
  classroomId     String         @db.Uuid
  enrollmentId    String         @db.Uuid
  disciplineId    String?        @db.Uuid
  justificationId String?        @db.Uuid
  stageId         String         @db.Uuid
  schoolId        String         @db.Uuid
  updatedAt       DateTime?      @updatedAt @db.Timestamp(6)
  updatedBy       String?        @db.Uuid
  createdAt       DateTime       @default(now()) @db.Timestamp(6)
  deletedAt       DateTime?      @db.Timestamp(6)
  tenantId        String?
  student         Student        @relation(fields: [studentId], references: [id], map: "faltacc_student_id_fkey")
  classroom       Classroom      @relation(fields: [classroomId], references: [id], map: "faltacc_classroom_id_fkey")
  enrollment      Enrollment     @relation(fields: [enrollmentId], references: [id], map: "faltacc_enrollment_id_fkey")
  discipline      Discipline?    @relation(fields: [disciplineId], references: [id], map: "faltacc_discipline_id_fkey")
  justification   Justification? @relation(fields: [justificationId], references: [id], map: "faltacc_justification_id_fkey")
  stage           Stage          @relation(fields: [stageId], references: [id], map: "faltacc_stage_id_fkey")
  school          School         @relation(fields: [schoolId], references: [id], map: "faltacc_school_id_fkey")
  teacher         Teacher        @relation(fields: [teacherId], references: [id], map: "faltacc_teacher_id_fkey")
  numMissed       NumMissed[]    @relation(map: "nummissed_attendance_id_fkey")

  @@map("attendance")
  @@schema("public")
}

model NumMissed {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String    @db.VarChar(100)
  attendanceId String    @db.Uuid
  absent       Boolean
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  deletedAt    DateTime? @db.Timestamp(6)
  updatedAt    DateTime? @updatedAt @db.Timestamp(6)
  updatedBy    String?   @db.Uuid
  tenantId     String?

  Attendance Attendance @relation(fields: [attendanceId], references: [id], map: "nummissed_attendance_id_fkey")

  @@unique([attendanceId, name])
  @@map("numMissed")
  @@schema("public")
}

model Justification {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String    @db.VarChar(100)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  updatedAt DateTime? @updatedAt @db.Timestamp(6)
  updatedBy String?   @db.Uuid
  tenantId  String?

  Attendance Attendance[]

  @@map("justification")
  @@schema("public")
}

model GeneralGrade {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  studentId    String    @db.Uuid
  schoolId     String    @db.Uuid
  grade        Decimal   @db.Decimal
  roundedGrade Decimal?  @db.Decimal
  stageId      String    @db.Uuid
  updatedAt    DateTime? @updatedAt @db.Timestamp(6)
  updatedBy    String?   @db.Uuid
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  deletedAt    DateTime? @db.Timestamp(6)
  tenantId     String?

  stage   Stage   @relation(fields: [stageId], references: [id], map: "notageral_stage_id_fkey")
  student Student @relation(fields: [studentId], references: [id], map: "notageral_student_id_fkey")
  school  School  @relation(fields: [schoolId], references: [id], map: "notageral_school_id_fkey")

  @@map("generalGrade")
  @@schema("public")
}

model ExamGrade {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  enrollmentId String    @db.Uuid
  disciplineId String    @db.Uuid
  grade        Decimal   @db.Decimal
  stageId      String    @db.Uuid
  schoolId     String    @db.Uuid
  updatedAt    DateTime? @updatedAt @db.Timestamp(6)
  updatedBy    String?   @db.Uuid
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  deletedAt    DateTime? @db.Timestamp(6)
  tenantId     String?

  stage      Stage      @relation(fields: [stageId], references: [id], map: "notaexame_stage_id_fkey")
  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], map: "notaexame_enrollment_id_fkey")
  discipline Discipline @relation(fields: [disciplineId], references: [id], map: "notaexame_discipline_id_fkey")
  school     School     @relation(fields: [schoolId], references: [id], map: "notaexame_school_id_fkey")

  @@map("examGrade")
  @@schema("public")
}

model DisciplineGrade {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  studentId    String    @db.Uuid
  enrollmentId String    @db.Uuid
  disciplineId String    @db.Uuid
  schoolId     String    @db.Uuid
  stageId      String    @db.Uuid
  at1          Decimal   @db.Decimal
  at2          Decimal   @db.Decimal
  at3          Decimal   @db.Decimal
  at4          Decimal   @db.Decimal
  eval         Decimal   @db.Decimal
  avg          Decimal   @db.Decimal
  updatedAt    DateTime? @updatedAt @db.Timestamp(6)
  updatedBy    String?   @db.Uuid
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  deletedAt    DateTime? @db.Timestamp(6)
  tenantId     String?

  stage      Stage      @relation(fields: [stageId], references: [id], map: "notadisciplina_stage_id_fkey")
  student    Student    @relation(fields: [studentId], references: [id], map: "notadisciplina_student_id_fkey")
  discipline Discipline @relation(fields: [disciplineId], references: [id], map: "notadisciplina_discipline_id_fkey")
  school     School     @relation(fields: [schoolId], references: [id], map: "notadisciplina_school_id_fkey")
  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], map: "notadisciplina_enrollment_id_fkey")

  @@map("disciplineGrade")
  @@schema("public")
}

model StudentFeedback {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  studentId    String    @db.Uuid
  enrollmentId String    @db.Uuid
  schoolId     String    @db.Uuid
  parecer      String    @db.VarChar(255)
  updatedAt    DateTime? @updatedAt @db.Timestamp(6)
  updatedBy    String?   @db.Uuid
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  deletedAt    DateTime? @db.Timestamp(6)
  tenantId     String?

  student    Student    @relation(fields: [studentId], references: [id], map: "pareceraluno_student_id_fkey")
  school     School     @relation(fields: [schoolId], references: [id], map: "pareceraluno_school_id_fkey")
  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], map: "pareceraluno_enrollment_id_fkey")

  @@map("studentFeedback")
  @@schema("public")
}

model StudentStageFeedback {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  studentId    String    @db.Uuid
  enrollmentId String    @db.Uuid
  schoolId     String    @db.Uuid
  stageId      String    @db.Uuid
  feedback     String    @db.VarChar(255)
  updatedAt    DateTime? @updatedAt @db.Timestamp(6)
  updatedBy    String?   @db.Uuid
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  deletedAt    DateTime? @db.Timestamp(6)
  tenantId     String?

  stage      Stage      @relation(fields: [stageId], references: [id], map: "pareceretapaaluno_stage_id_fkey")
  student    Student    @relation(fields: [studentId], references: [id], map: "pareceretapaaluno_student_id_fkey")
  school     School     @relation(fields: [schoolId], references: [id], map: "pareceretapaaluno_school_id_fkey")
  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], map: "pareceretapaaluno_enrollment_id_fkey")

  @@map("studentStageFeedback")
  @@schema("public")
}

model DisciplineStageFeedback {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  studentId    String    @db.Uuid
  enrollmentId String    @db.Uuid
  disciplineId String    @db.Uuid
  schoolId     String    @db.Uuid
  stageId      String    @db.Uuid
  feedback     String    @db.VarChar(255)
  updatedAt    DateTime? @updatedAt @db.Timestamp(6)
  updatedBy    String?   @db.Uuid
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  deletedAt    DateTime? @db.Timestamp(6)
  tenantId     String?

  stage      Stage      @relation(fields: [stageId], references: [id], map: "pareceretapadisciplina_stage_id_fkey")
  student    Student    @relation(fields: [studentId], references: [id], map: "pareceretapadisciplina_student_id_fkey")
  school     School     @relation(fields: [schoolId], references: [id], map: "pareceretapadisciplina_school_id_fkey")
  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], map: "pareceretapadisciplina_enrollment_id_fkey")
  discipline Discipline @relation(fields: [disciplineId], references: [id], map: "pareceretapadisciplina_discipline_id_fkey")

  @@map("disciplineStageFeedback")
  @@schema("public")
}

model Institution {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(100)
  address     String?   @db.VarChar(255)
  city        String?   @db.VarChar(100)
  state       String?   @db.Char(2)
  postalCode  String?   @db.Char(10)
  phone       String?   @db.VarChar(15)
  email       String?   @db.VarChar(255)
  metadata    Json?
  createdAt   DateTime? @default(now()) @db.Timestamp(6)
  deletedAt   DateTime? @db.Timestamp(6)
  updatedAt   DateTime? @updatedAt @db.Timestamp(6)
  updatedBy   String?   @db.Uuid
  tenantId    String?
  userCreated String?   @db.VarChar(255)
  singleton   Int?      @default(1)

  enrollment          Enrollment[]
  institutionsettings InstitutionSettings?
  preenrollment       PreEnrollment[]
  school              School[]
  school_settings     SchoolSettings[]
  series              Series[]
  course              Course[]
  servers             Servers[]
  Stage               Stage[]              @relation(map: "stage_institutionid_fkey")

  @@map("institution")
  @@schema("public")
}

model InstitutionSettings {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt     DateTime? @default(now()) @db.Timestamp(6)
  deletedAt     DateTime? @db.Timestamp(6)
  updatedAt     DateTime? @updatedAt @db.Timestamp(6)
  updatedBy     String?   @db.Uuid
  tenantId      String?
  institutionId String    @unique(map: "institutionsettings_institutionid_key") @db.Uuid
  dateOpening   DateTime? @db.Timestamp(6)
  dateClosing   DateTime? @db.Timestamp(6)
  schoolDays    Float?
  dateStart     DateTime? @db.Timestamp(6)
  dateEnd       DateTime? @db.Timestamp(6)

  institution Institution @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "institutionsettings_institutionid_fkey")

  @@map("institutionSettings")
  @@schema("public")
}

model PreEnrollment {
  id                String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  institutionId     String?        @db.Uuid
  schoolId          String         @db.Uuid
  studentId         String         @unique(map: "preenrollment_studentid_key") @db.Uuid
  courseId          String         @db.Uuid
  seriesId          String         @db.Uuid
  createdAt         DateTime?      @default(now()) @db.Timestamp(6)
  deletedAt         DateTime?      @db.Timestamp(6)
  updatedAt         DateTime?      @updatedAt @db.Timestamp(6)
  updatedBy         String?        @db.Uuid
  tenantId          String?
  datePreenrollment DateTime       @db.Timestamp(6)
  observations      String?        @db.VarChar(200)
  status            status?        @default(ACTIVE)
  preferShift       period?
  situation         situationType?
  preenrollmentcode String?        @unique @db.VarChar(100)

  enrollment  Enrollment?
  course      Course       @relation(fields: [courseId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "preenrollment_courseid_fkey")
  institution Institution? @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "preenrollment_institutionid_fkey")
  school      School       @relation(fields: [schoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "preenrollment_schoolid_fkey")
  series      Series       @relation(fields: [seriesId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "preenrollment_seriesid_fkey")
  student     Student      @relation(fields: [studentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "preenrollment_studentid_fkey")

  @@map("preenrollment")
  @@schema("public")
}

model Schedule {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  weekday      dayofweek
  start        DateTime  @db.Time
  end          DateTime  @db.Time
  classroomId  String    @db.Uuid
  schoolId     String    @db.Uuid
  disciplineId String    @db.Uuid
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  deletedAt    DateTime? @db.Timestamp(6)
  updatedAt    DateTime? @updatedAt @db.Timestamp(6)
  updatedBy    String?   @db.Uuid
  tenantId     String?   @db.Uuid
  userCreated  String?   @db.Uuid
  teacherId    String    @db.Uuid

  discipline Discipline @relation(fields: [disciplineId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "schedule_discipline_id_fkey")
  teacher    Teacher    @relation(fields: [teacherId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "schedule_teacher_id_fkey")
  classroom  Classroom  @relation(fields: [classroomId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "schedule_classroom_id_fkey")
  school     School     @relation(fields: [schoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "schedule_school_id_fkey")

  @@map("schedule")
  @@schema("public")
}

model Content {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date              DateTime            @db.Date
  description       String              @db.VarChar(360)
  classroomId       String?             @db.Uuid
  teacherId         String?             @db.Uuid
  createdAt         DateTime            @default(now()) @db.Timestamptz(6)
  deletedAt         DateTime?           @db.Timestamptz(6)
  updatedAt         DateTime?           @updatedAt @db.Timestamptz(6)
  updatedBy         String?             @db.Uuid
  tenantId          String?
  userCreated       String?             @db.Uuid
  classroom         Classroom?          @relation(fields: [classroomId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "content_classroom_id_fkey")
  teacher           Teacher?            @relation(fields: [teacherId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "content_teacher_id_fkey")
  ContentDiscipline ContentDiscipline[]
  ContentBncc       ContentBncc[]

  @@map("content")
  @@schema("public")
}

model Bncc {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code             String        @db.VarChar(30)
  objective        String        @db.VarChar(350)
  knowledgeArea    String?       @db.VarChar(100)
  languagePractice String?       @db.VarChar(100)
  fieldsOfAction   String?       @db.VarChar(100)
  knowledgeObjects String?       @db.VarChar(100)
  courseId         String        @db.Uuid
  disciplineId     String        @db.Uuid
  seriesId         String        @db.Uuid
  createdAt        DateTime      @default(now()) @db.Timestamptz(6)
  deletedAt        DateTime?     @db.Timestamptz(6)
  updatedAt        DateTime?     @updatedAt @db.Timestamptz(6)
  updatedBy        String?       @db.Uuid
  tenantId         String?
  userCreated      String?       @db.Uuid
  themathicUnit    String        @db.VarChar(100)
  discipline       Discipline    @relation(fields: [disciplineId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bncc_discipline_id_fkey")
  ContentBncc      ContentBncc[]

  @@map("bncc")
  @@schema("public")
}

model ContentDiscipline {
  contentId    String     @db.Uuid
  disciplineId String     @db.Uuid
  content      Content    @relation(fields: [contentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "contentdiscipline_content_id_fkey")
  discipline   Discipline @relation(fields: [disciplineId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "contentdiscipline_discipline_id_fkey")

  @@id([contentId, disciplineId])
  @@map("contentdiscipline")
  @@schema("public")
}

model ContentBncc {
  contentId String  @db.Uuid
  bnccId    String  @db.Uuid
  content   Content @relation(fields: [contentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "contentbncc_content_id_fkey")
  bncc      Bncc    @relation(fields: [bnccId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "contentbncc_bncc_id_fkey")

  @@id([contentId, bnccId])
  @@map("contentbncc")
  @@schema("public")
}

model School {
  id                       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  idpes                    Int?
  name                     String    @db.VarChar(100)
  cnpj                     Decimal?  @db.Decimal(14, 0)
  address                  String?   @db.VarChar(255)
  city                     String?   @db.VarChar(100)
  state                    String?   @db.Char(2)
  postalCode               String?   @db.Char(10)
  phone                    String?   @db.VarChar(15)
  institutionId            String    @db.Uuid
  active                   Boolean?  @default(true)
  abbreviation             String?   @db.VarChar(255)
  longitude                String?   @db.VarChar(255)
  latitude                 String?   @db.VarChar(255)
  totalArea                String?   @db.VarChar(255)
  builtArea                String?   @db.VarChar(255)
  availableArea            String?   @db.VarChar(255)
  acronym                  String?   @db.VarChar(255)
  blockDiaryEntries        Boolean?
  operationalStatus        Int?
  administrativeDependency Int?
  regulation               Int?
  logoUrl                  String?   @db.VarChar(255)
  access                   Int?
  managerid                String?   @db.Uuid
  managerPosition          String?   @db.VarChar(255)
  operationLocation        String?   @db.VarChar(255)
  condition                Int?
  sharedSchooLinePCode     Int?
  creationDecree           String?   @db.VarChar(255)
  numberOfFloors           Int?
  floorType                Int?
  energyMeter              Int?
  hasExternalArea          Boolean?
  metadata                 Json?
  createdAt                DateTime? @default(now()) @db.Timestamp(6)
  deletedAt                DateTime? @db.Timestamp(6)
  updatedAt                DateTime? @updatedAt @db.Timestamp(6)
  updatedBy                String?   @db.Uuid
  tenantId                 String?
  userCreated              String?   @db.VarChar(255)

  classroom               Classroom[]
  course                  Course[]
  enrollment              Enrollment[]
  preenrollment           PreEnrollment[]
  institution             Institution               @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "school_institutionid_fkey")
  schoolSettings          SchoolSettings[]
  series                  Series[]
  serverAllocations       ServerAllocations[]
  student                 Student[]
  teacher                 Teacher[]
  GeneralAttendance       GeneralAttendance[]       @relation(map: "faltageral_school_id_fkey")
  DisciplineAttendance    DisciplineAttendance[]    @relation(map: "faltacc_school_id_fkey")
  StudentAttendance       StudentAttendance[]       @relation(map: "faltaaluno_school_id_fkey")
  GeneralGrade            GeneralGrade[]            @relation(map: "notageral_school_id_fkey")
  ExamGrade               ExamGrade[]               @relation(map: "ExamGrade_school_id_fkey")
  DisciplineGrade         DisciplineGrade[]         @relation(map: "notadisciplina_school_id_fkey")
  StudentFeedback         StudentFeedback[]         @relation(map: "pareceraluno_school_id_fkey")
  StudentStageFeedback    StudentStageFeedback[]    @relation(map: "pareceretapaaluno_school_id_fkey")
  DisciplineStageFeedback DisciplineStageFeedback[] @relation(map: "pareceretapadisciplina_school_id_fkey")
  Schedule                Schedule[]                @relation(map: "schedule_school_id_fkey")
  Attendance              Attendance[]              @relation(map: "faltacc_school_id_fkey")
  TeacherAttendance       TeacherAttendance[]       @relation(map: "faltaprof_school_id_fkey")

  @@map("school")
  @@schema("public")
}

model SchoolSettings {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt     DateTime  @default(now()) @db.Timestamptz(6)
  dateOpening   DateTime? @db.Date
  dateClosing   DateTime? @db.Date
  schoolDays    Decimal?  @db.Decimal
  dateStart     DateTime? @db.Date
  dateEnd       DateTime? @db.Date
  institutionId String    @db.Uuid
  schoolId      String    @db.Uuid
  updatedAt     DateTime? @updatedAt @db.Timestamp(6)
  updatedBy     String?   @db.Uuid
  tenantId      String?
  userCreated   String?   @db.Uuid
  deletedAt     DateTime? @db.Timestamp(6)

  institution Institution @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "school_settings_institution_id_fkey")
  school      School      @relation(fields: [schoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "school_settings_school_id_fkey")

  @@map("schoolSettings")
  @@schema("public")
}

model Series {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String    @db.VarChar(100)
  courseId      String    @db.Uuid
  timetableId   String?   @db.Uuid
  metadata      Json?
  createdAt     DateTime? @default(now()) @db.Timestamp(6)
  deletedAt     DateTime? @db.Timestamp(6)
  updatedAt     DateTime? @updatedAt @db.Timestamp(6)
  updatedBy     String?   @db.Uuid
  tenantId      String?
  userCreated   String?   @db.VarChar(255)
  institutionId String    @db.Uuid
  courseStage   String
  graduate      String
  workload      Decimal?  @db.Decimal
  schoolDays    String

  classroom     Classroom[]
  enrollment    Enrollment[]
  preenrollment PreEnrollment[]
  course        Course          @relation(fields: [courseId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "series_courseid_fkey")
  institution   Institution?    @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "series_institution_fkey")
  School        School?         @relation(fields: [schoolId], references: [id])
  schoolId      String?         @db.Uuid

  @@map("series")
  @@schema("public")
}

model ServerAllocations {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  serverId    String    @db.Uuid
  schoolId    String    @db.Uuid
  anoLetivo   Int
  entryDate   DateTime  @db.Timestamp(6)
  exitDate    DateTime? @db.Timestamp(6)
  createdAt   DateTime? @default(now()) @db.Timestamp(6)
  deletedAt   DateTime? @db.Timestamp(6)
  updatedAt   DateTime? @updatedAt @db.Timestamp(6)
  updatedBy   String?   @db.Uuid
  tenantId    String?
  userCreated String?   @db.VarChar(255)
  workload    Decimal?  @db.Decimal

  school  School  @relation(fields: [schoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_school")
  servers Servers @relation(fields: [serverId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_server")

  @@unique([serverId, schoolId, anoLetivo], map: "uq_server_allocation")
  @@map("serverAllocations")
  @@schema("public")
}

model Servers {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String          @db.VarChar(100)
  email         String?         @unique @db.VarChar(255)
  phone         String?         @db.VarChar(15)
  cpf           String          @unique @db.VarChar(11)
  address       String?         @db.VarChar(255)
  position      String          @db.VarChar(255)
  schoolId      String?         @db.Uuid
  createdAt     DateTime?       @default(now()) @db.Timestamp(6)
  deletedAt     DateTime?       @db.Timestamp(6)
  updatedAt     DateTime?       @updatedAt @db.Timestamp(6)
  updatedBy     String?         @db.Uuid
  tenantId      String?
  userCreated   String?         @db.VarChar(255)
  userId        String?         @db.Uuid
  institutionId String          @db.Uuid
  codServidor   Int
  contract      contractType?   @default(INDETERMINADO)
  disability    disabilityType?

  institution        Institution         @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "server_institution_fkey")
  server_allocations ServerAllocations[]
  User               User?               @relation(fields: [userId], references: [id])

  @@map("servers")
  @@schema("public")
}

model Student {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String             @db.VarChar(100)
  birthdate        DateTime           @db.Timestamp(6)
  gender           String?            @db.Char(1)
  email            String?            @db.VarChar(255)
  phone            String?            @db.VarChar(15)
  address          String?            @db.VarChar(255)
  guardianName     String?            @db.VarChar(100)
  guardianPhone    String?            @db.VarChar(15)
  guardianCpf      String?            @db.VarChar(100)
  guardianEmail    String?            @db.VarChar(100)
  status           status?            @default(ACTIVE)
  disability       disabilityType[]
  photo            Bytes?
  metadata         Json?
  createdAt        DateTime?          @default(now()) @db.Timestamp(6)
  deletedAt        DateTime?          @db.Timestamp(6)
  updatedAt        DateTime?          @updatedAt @db.Timestamp(6)
  updatedBy        String?            @db.Uuid
  tenantId         String?
  userCreated      String?            @db.VarChar(255)
  schoolId         String?            @db.Uuid
  postalCode       String?            @db.VarChar(100)
  residenceZone    residenceZoneType? @default(URBANA)
  numberAddress    String?            @db.VarChar(100)
  cpf              String?            @unique @db.VarChar(100)
  neighborhood     String?            @db.VarChar(100)
  city             String?            @db.VarChar(100)
  complement       String?            @db.VarChar(100)
  fatherName       String?            @db.VarChar(100)
  fatherEmail      String?            @db.VarChar(100)
  fatherCpf        String?            @db.VarChar(100)
  fatherPhone      String?            @db.VarChar(100)
  motherName       String?            @db.VarChar(100)
  motherEmail      String?            @db.VarChar(100)
  motherCpf        String?            @db.VarChar(100)
  motherPhone      String?            @db.VarChar(100)
  rgNumber         String?            @unique @db.VarChar(100)
  rgState          String?            @db.Char(2)
  rgIssueDate      DateTime?          @db.Date
  rgIssuer         String?            @db.VarChar(100)
  birthCertificate String?            @db.VarChar(100)
  placeOfBirth     String?            @db.VarChar(100)
  docsType         String?            @db.VarChar(100)
  responsibleType  responsibleType?   @default(PAI)
  citystate        String?            @db.VarChar

  enrollment              Enrollment?
  preenrollment           PreEnrollment?
  school                  School?                   @relation(fields: [schoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "student_school")
  GeneralAttendance       GeneralAttendance[]       @relation(map: "faltageral_student_id_fkey")
  DisciplineAttendance    DisciplineAttendance[]    @relation(map: "faltacc_student_id_fkey")
  GeneralGrade            GeneralGrade[]            @relation(map: "notageral_student_id_fkey")
  DisciplineGrade         DisciplineGrade[]         @relation(map: "notadisciplina_student_id_fkey")
  StudentFeedback         StudentFeedback[]         @relation(map: "pareceraluno_student_id_fkey")
  StudentStageFeedback    StudentStageFeedback[]    @relation(map: "pareceretapaaluno_student_id_fkey")
  DisciplineStageFeedback DisciplineStageFeedback[] @relation(map: "pareceretapadisciplina_student_id_fkey")
  Attendance              Attendance[]              @relation(map: "student_attendance_fkey")

  @@map("student")
  @@schema("public")
}

model Teacher {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  schoolId       String    @db.Uuid
  name           String    @db.VarChar(100)
  birthdate      DateTime  @db.Date
  email          String?   @db.VarChar(255)
  phone          String?   @db.VarChar(15)
  address        String?   @db.VarChar(255)
  userId         String?   @db.Uuid
  qualifications Json?
  status         status?   @default(ACTIVE)
  metadata       Json?
  userCreated    String?   @db.Uuid
  createdAt      DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt      DateTime? @db.Timestamptz(6)
  updatedAt      DateTime? @updatedAt @db.Timestamptz(6)
  updatedBy      String?   @db.Uuid
  tenantId       String?   @db.Uuid
  showDetails    Boolean?

  user              User?               @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_teacher_fkey")
  school            School              @relation(fields: [schoolId], references: [id], map: "teacher_school_id_fkey")
  Schedule          Schedule[]          @relation(map: "schedule_teacher_id_fkey")
  Attendance        Attendance[]        @relation(map: "teacher_attendance_fkey")
  TeacherAttendance TeacherAttendance[] @relation(map: "teacher_teacher_attendance_fkey")
  Content           Content[]

  @@map("teacher")
  @@schema("public")
}

model EvaluationRule {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                 String    @db.VarChar(255)
  gradeType            String    @db.VarChar(100)
  progressionType      String    @db.VarChar(100)
  parallelMakeupExam   String    @db.VarChar(100)
  averageFormula       String    @db.VarChar(100)
  makeupFormula        String?   @db.VarChar(100)
  maximumGrade         Decimal   @default(10) @db.Decimal(3, 1) //@check("maximumGrade >= 0 AND maximumGrade <= 10")
  minimumGrade         Decimal   @default(0) @db.Decimal(3, 1) //@check("minimumGrade >= 0 AND minimumGrade <= 10")
  numberActivities     Int       @default(0) @db.Integer //@check("numberActivities >= 0 AND numberActivities <= 10")
  average              Decimal   @default(0) @db.Decimal(3, 1) //@check("average >= 0 AND average <= 10")
  frequencyType        String?   @db.VarChar(100)
  feedbackType         String?   @db.VarChar(100)
  attendancePercentage Decimal   @db.Decimal(5, 2)
  conceptualLabel      Json?     @db.JsonB
  frequencyReport      Json?     @db.JsonB
  createdAt            DateTime  @default(now()) @db.Timestamp(6)
  updatedAt            DateTime? @updatedAt @db.Timestamp(6)
  updatedBy            String?   @db.Uuid
  tenantId             String?   @db.Uuid
  courseId             String    @db.Uuid

  course Course @relation(fields: [courseId], references: [id], map: "rule_course_fkey")

  @@map("evaluationRule")
  @@schema("public")
}

enum attendancestatus {
  PRESENT
  ABSENT
  EXCUSED

  @@schema("public")
}

enum dayofweek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY

  @@schema("public")
}

enum genderType {
  MASCULINO
  FEMININO

  @@schema("public")
}

enum period {
  MORNING
  AFTERNOON
  EVENING

  @@schema("public")
}

enum position {
  PROFESSOR
  GESTOR
  COORDENADOR
  DIRETOR
  VIGIA

  @@schema("public")
}

enum residenceZoneType {
  URBANA
  RURAL

  @@schema("public")
}

enum responsibleType {
  PAI
  MAE   @map("MÃE")
  AMBOS
  OUTRO

  @@schema("public")
}

enum situationType {
  PENDENTE
  CURSANDO
  APROVADO
  APROVADO_PELO_CONSELHO
  APROVADO_COM_DEPENDENCIA
  REPROVADO
  TRANSFERIDO
  ABANDONO
  FALECIDO

  @@schema("public")
}

enum status {
  ACTIVE
  INACTIVE
  GRADUATED
  SUSPENDED
  TRANSFERRED

  @@schema("public")
}

enum roleType {
  ADMIN
  GESTORMUNICIPAL
  GESTORESCOLAR
  PROFESSOR
  PUBLICO

  @@schema("public")
}

enum contractType {
  INDETERMINADO
  CONTRATADO
  PERMUTA
  ESTAGIARIO
  COMISSIONADO
  EFETIVO

  @@schema("public")
}

enum disabilityType {
  TRANSTORNO_DO_ESPECTRO_AUTISTA
  TRANSTORNO_DESINTEGRATIVO_DA_INFANCIA_PSICOSE_INFANTIL
  TDAH
  SINDROME_DE_RETT
  SINDROME_DE_ASPERGER
  SURDOCEGUEIRA
  SURDEZ
  DEFICIENCIA_MULTIPLA
  DEFICIENCIA_MENTAL
  DEFICIENCIA_INTELECTUAL
  DEFICIENCIA_FISICA
  DEFICIENCIA_AUDITIVA
  CEGUEIRA
  BAIXA_VISAO
  AUTISMO_CLASSICO
  ALTAS_HABILIDADES_SUPERDOTACAO

  @@schema("public")
}

enum attendanceType {
  DISCIPLINA
  DIARIA

  @@schema("public")
}

/**
 * model codigo_cartorio_inep {
 * id            Int         @id(map: "pk_id") @default(autoincrement())
 * id_cartorio   Int
 * descricao     String?     @db.VarChar
 * cod_serventia Int?
 * cod_municipio Int?
 * ref_sigla_uf  String?     @db.VarChar(3)
 * documento     documento[]
 * @@schema("cadastro")
 * }
 * model deficiencia {
 * cod_deficiencia                 Int                  @id(map: "pk_cadastro_escolaridade") @default(autoincrement())
 * nm_deficiencia                  String               @db.VarChar(70)
 * deficiencia_educacenso          Int?                 @db.SmallInt
 * desconsidera_regra_diferenciada Boolean?             @default(false)
 * updated_at                      DateTime?            @default(now()) @db.Timestamp(6)
 * exigir_laudo_medico             Boolean              @default(true)
 * fisica_deficiencia              fisica_deficiencia[]
 * @@schema("cadastro")
 * }
 * model deficiencia_excluidos {
 * cod_deficiencia                 Int       @id
 * nm_deficiencia                  String    @db.VarChar(191)
 * deficiencia_educacenso          Int?
 * desconsidera_regra_diferenciada Boolean?
 * created_at                      DateTime? @db.Timestamp(0)
 * updated_at                      DateTime? @db.Timestamp(0)
 * deleted_at                      DateTime? @db.Timestamp(0)
 * @@schema("cadastro")
 * }
 * /// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * model documento {
 * idpes                              Int                   @id(map: "pk_documento")
 * rg                                 String?               @db.VarChar(25)
 * data_exp_rg                        DateTime?             @db.Date
 * sigla_uf_exp_rg                    String?               @db.Char(2)
 * tipo_cert_civil                    Decimal?              @db.Decimal(2, 0)
 * num_termo                          Decimal?              @db.Decimal(8, 0)
 * num_livro                          String?               @db.VarChar(8)
 * num_folha                          Decimal?              @db.Decimal(4, 0)
 * data_emissao_cert_civil            DateTime?             @db.Date
 * sigla_uf_cert_civil                String?               @db.Char(2)
 * cartorio_cert_civil                String?               @db.VarChar(200)
 * num_cart_trabalho                  Decimal?              @db.Decimal(9, 0)
 * serie_cart_trabalho                Decimal?              @db.Decimal(5, 0)
 * data_emissao_cart_trabalho         DateTime?             @db.Date
 * sigla_uf_cart_trabalho             String?               @db.Char(2)
 * num_tit_eleitor                    Decimal?              @db.Decimal(13, 0)
 * zona_tit_eleitor                   Decimal?              @db.Decimal(4, 0)
 * secao_tit_eleitor                  Decimal?              @db.Decimal(4, 0)
 * idorg_exp_rg                       Int?
 * idpes_rev                          Int?
 * data_rev                           DateTime?             @db.Timestamp(6)
 * origem_gravacao                    String                @db.Char(1)
 * idpes_cad                          Int?
 * data_cad                           DateTime              @db.Timestamp(6)
 * operacao                           String                @db.Char(1)
 * certidao_nascimento                String?               @db.VarChar(50)
 * cartorio_cert_civil_inep           Int?
 * certidao_casamento                 String?               @db.VarChar(50)
 * passaporte                         String?               @db.VarChar(20)
 * comprovante_residencia             String?               @db.VarChar(255)
 * declaracao_trabalho_autonomo       String?               @db.VarChar
 * codigo_cartorio_inep               codigo_cartorio_inep? @relation(fields: [cartorio_cert_civil_inep], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cadastro_documento_cartorio_cert_civil_inep_foreign")
 * orgao_emissor_rg                   orgao_emissor_rg?     @relation(fields: [idorg_exp_rg], references: [idorg_rg], onDelete: Restrict, onUpdate: NoAction, map: "cadastro_documento_idorg_exp_rg_foreign")
 * pessoa_documento_idpes_cadTopessoa pessoa?               @relation("documento_idpes_cadTopessoa", fields: [idpes_cad], references: [idpes], onUpdate: NoAction, map: "cadastro_documento_idpes_cad_foreign")
 * fisica                             fisica                @relation(fields: [idpes], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "cadastro_documento_idpes_foreign")
 * pessoa_documento_idpes_revTopessoa pessoa?               @relation("documento_idpes_revTopessoa", fields: [idpes_rev], references: [idpes], onUpdate: NoAction, map: "cadastro_documento_idpes_rev_foreign")
 * @@schema("cadastro")
 * }
 * model escolaridade {
 * idesco       Decimal    @id(map: "pk_escolaridade") @db.Decimal(2, 0)
 * descricao    String     @db.VarChar(60)
 * escolaridade Int?       @db.SmallInt
 * fisica       fisica[]
 * servidor     servidor[]
 * @@schema("cadastro")
 * }
 * model estado_civil {
 * ideciv    Decimal  @id(map: "pk_estado_civil") @db.Decimal(1, 0)
 * descricao String   @db.VarChar(15)
 * fisica    fisica[]
 * @@schema("cadastro")
 * }
 * /// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * model fisica {
 * idpes                                   Int                          @id(map: "pk_fisica")
 * data_nasc                               DateTime?                    @db.Date
 * sexo                                    String?                      @db.Char(1)
 * idpes_mae                               Int?
 * idpes_pai                               Int?
 * idpes_responsavel                       Int?
 * idesco                                  Decimal?                     @db.Decimal(2, 0)
 * ideciv                                  Decimal?                     @db.Decimal(1, 0)
 * idpes_con                               Int?
 * data_uniao                              DateTime?                    @db.Date
 * data_obito                              DateTime?                    @db.Date
 * nacionalidade                           Decimal?                     @db.Decimal(1, 0)
 * idpais_estrangeiro                      Decimal?                     @db.Decimal(3, 0)
 * data_chegada_brasil                     DateTime?                    @db.Date
 * idmun_nascimento                        Decimal?                     @db.Decimal(6, 0)
 * ultima_empresa                          String?                      @db.VarChar(150)
 * idocup                                  Decimal?                     @db.Decimal(6, 0)
 * nome_mae                                String?                      @db.VarChar(150)
 * nome_pai                                String?                      @db.VarChar(150)
 * nome_conjuge                            String?                      @db.VarChar(150)
 * nome_responsavel                        String?                      @db.VarChar(150)
 * justificativa_provisorio                String?                      @db.VarChar(150)
 * idpes_rev                               Int?
 * data_rev                                DateTime?                    @db.Timestamp(6)
 * origem_gravacao                         String                       @db.Char(1)
 * idpes_cad                               Int?
 * data_cad                                DateTime                     @db.Timestamp(6)
 * operacao                                String                       @db.Char(1)
 * ref_cod_sistema                         Int?
 * cpf                                     Decimal?                     @db.Decimal(11, 0)
 * ref_cod_religiao                        Int?
 * nis_pis_pasep                           Decimal?                     @db.Decimal(11, 0)
 * sus                                     String?                      @db.VarChar(20)
 * ocupacao                                String?                      @db.VarChar(255)
 * empresa                                 String?                      @db.VarChar(255)
 * pessoa_contato                          String?                      @db.VarChar(255)
 * renda_mensal                            Decimal?                     @db.Decimal(10, 2)
 * data_admissao                           DateTime?                    @db.Date
 * ddd_telefone_empresa                    Decimal?                     @db.Decimal(3, 0)
 * telefone_empresa                        Decimal?                     @db.Decimal(11, 0)
 * falecido                                Boolean?
 * ativo                                   Int?                         @default(1)
 * ref_usuario_exc                         Int?
 * data_exclusao                           DateTime?                    @db.Timestamp(6)
 * zona_localizacao_censo                  Int?
 * tipo_trabalho                           Int?
 * local_trabalho                          String?                      @db.VarChar
 * horario_inicial_trabalho                DateTime?                    @db.Time(6)
 * horario_final_trabalho                  DateTime?                    @db.Time(6)
 * nome_social                             String?                      @db.VarChar(150)
 * pais_residencia                         Int                          @default(76)
 * localizacao_diferenciada                Int?
 * observacao                              String?
 * documento                               documento?
 * estado_civil                            estado_civil?                @relation(fields: [ideciv], references: [ideciv], onDelete: NoAction, onUpdate: NoAction, map: "cadastro_fisica_ideciv_foreign")
 * escolaridade                            escolaridade?                @relation(fields: [idesco], references: [idesco], onDelete: NoAction, onUpdate: NoAction, map: "cadastro_fisica_idesco_foreign")
 * ocupacoes                               ocupacao?                    @relation(fields: [idocup], references: [idocup], onDelete: NoAction, onUpdate: NoAction, map: "cadastro_fisica_idocup_foreign")
 * pessoa_fisica_idpes_cadTopessoa         pessoa?                      @relation("fisica_idpes_cadTopessoa", fields: [idpes_cad], references: [idpes], onUpdate: NoAction, map: "cadastro_fisica_idpes_cad_foreign")
 * pessoa_fisica_idpes_conTopessoa         pessoa?                      @relation("fisica_idpes_conTopessoa", fields: [idpes_con], references: [idpes], onUpdate: NoAction, map: "cadastro_fisica_idpes_con_foreign")
 * pessoa_fisica_idpesTopessoa             pessoa                       @relation("fisica_idpesTopessoa", fields: [idpes], references: [idpes], onUpdate: NoAction, map: "cadastro_fisica_idpes_foreign")
 * pessoa_fisica_idpes_maeTopessoa         pessoa?                      @relation("fisica_idpes_maeTopessoa", fields: [idpes_mae], references: [idpes], onUpdate: NoAction, map: "cadastro_fisica_idpes_mae_foreign")
 * pessoa_fisica_idpes_paiTopessoa         pessoa?                      @relation("fisica_idpes_paiTopessoa", fields: [idpes_pai], references: [idpes], onUpdate: NoAction, map: "cadastro_fisica_idpes_pai_foreign")
 * pessoa_fisica_idpes_responsavelTopessoa pessoa?                      @relation("fisica_idpes_responsavelTopessoa", fields: [idpes_responsavel], references: [idpes], onUpdate: NoAction, map: "cadastro_fisica_idpes_responsavel_foreign")
 * pessoa_fisica_idpes_revTopessoa         pessoa?                      @relation("fisica_idpes_revTopessoa", fields: [idpes_rev], references: [idpes], onUpdate: NoAction, map: "cadastro_fisica_idpes_rev_foreign")
 * religiao                                pmieducar_religiao?          @relation(fields: [ref_cod_religiao], references: [cod_religiao], onDelete: NoAction, onUpdate: NoAction, map: "cadastro_fisica_ref_cod_religiao_foreign")
 * fisica_deficiencia                      fisica_deficiencia[]
 * fisica_raca                             fisica_raca?
 * religiao_religiao_idpes_cadTofisica     cadastro_religiao[]          @relation("religiao_idpes_cadTofisica")
 * religiao_religiao_idpes_excTofisica     cadastro_religiao[]          @relation("religiao_idpes_excTofisica")
 * empresa_transporte_escolar              empresa_transporte_escolar[]
 * motorista                               motorista[]
 * pessoa_transporte                       pessoa_transporte[]
 * aluno                                   aluno?
 * cliente                                 cliente[]
 * funcionario                             funcionario?
 * @@schema("cadastro")
 * }
 * model fisica_deficiencia {
 * ref_idpes           Int
 * ref_cod_deficiencia Int
 * deficiencia         deficiencia @relation(fields: [ref_cod_deficiencia], references: [cod_deficiencia], onUpdate: Restrict, map: "cadastro_fisica_deficiencia_ref_cod_deficiencia_foreign")
 * fisica              fisica      @relation(fields: [ref_idpes], references: [idpes], onUpdate: Restrict, map: "cadastro_fisica_deficiencia_ref_idpes_foreign")
 * @@id([ref_idpes, ref_cod_deficiencia], map: "pk_fisica_deficiencia")
 * @@schema("cadastro")
 * }
 * model fisica_foto {
 * idpes      Int       @id
 * caminho    String?   @db.VarChar(255)
 * updated_at DateTime? @default(now()) @db.Timestamp(6)
 * pessoa     pessoa    @relation(fields: [idpes], references: [idpes], onUpdate: Restrict, map: "cadastro_fisica_foto_idpes_foreign")
 * @@schema("cadastro")
 * }
 * model fisica_raca {
 * ref_idpes    Int    @unique
 * ref_cod_raca Int
 * raca         raca   @relation(fields: [ref_cod_raca], references: [cod_raca], onUpdate: Restrict, map: "cadastro_fisica_raca_ref_cod_raca_foreign")
 * fisica       fisica @relation(fields: [ref_idpes], references: [idpes], onUpdate: Restrict, map: "cadastro_fisica_raca_ref_idpes_foreign")
 * @@id([ref_idpes, ref_cod_raca], map: "pk_fisica_raca")
 * @@schema("cadastro")
 * }
 * /// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * model fone_pessoa {
 * idpes                                Int
 * tipo                                 Decimal   @db.Decimal(1, 0)
 * ddd                                  Decimal   @db.Decimal(3, 0)
 * fone                                 Decimal   @db.Decimal(11, 0)
 * idpes_rev                            Int?
 * data_rev                             DateTime? @db.Timestamp(6)
 * origem_gravacao                      String    @db.Char(1)
 * idpes_cad                            Int
 * data_cad                             DateTime  @db.Timestamp(6)
 * operacao                             String    @db.Char(1)
 * pessoa_fone_pessoa_idpes_cadTopessoa pessoa?   @relation("fone_pessoa_idpes_cadTopessoa", fields: [idpes_cad], references: [idpes], onUpdate: NoAction, map: "cadastro_fone_pessoa_idpes_cad_foreign")
 * pessoa_fone_pessoa_idpesTopessoa     pessoa    @relation("fone_pessoa_idpesTopessoa", fields: [idpes], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "cadastro_fone_pessoa_idpes_foreign")
 * pessoa_fone_pessoa_idpes_revTopessoa pessoa?   @relation("fone_pessoa_idpes_revTopessoa", fields: [idpes_rev], references: [idpes], onUpdate: NoAction, map: "cadastro_fone_pessoa_idpes_rev_foreign")
 * @@id([idpes, tipo], map: "pk_fone_pessoa")
 * @@schema("cadastro")
 * }
 * /// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * model juridica {
 * idpes                             Int                          @id(map: "pk_juridica")
 * cnpj                              Decimal?                     @unique(map: "un_juridica_cnpj") @db.Decimal(14, 0)
 * insc_estadual                     Decimal?                     @db.Decimal(20, 0)
 * idpes_rev                         Int?
 * data_rev                          DateTime?                    @db.Timestamp(6)
 * origem_gravacao                   String                       @db.Char(1)
 * idpes_cad                         Int?
 * data_cad                          DateTime                     @db.Timestamp(6)
 * operacao                          String                       @db.Char(1)
 * fantasia                          String                       @db.VarChar(255)
 * capital_social                    String?                      @db.VarChar(255)
 * pessoa_juridica_idpes_cadTopessoa pessoa?                      @relation("juridica_idpes_cadTopessoa", fields: [idpes_cad], references: [idpes], onUpdate: NoAction, map: "cadastro_juridica_idpes_cad_foreign")
 * pessoa_juridica_idpesTopessoa     pessoa                       @relation("juridica_idpesTopessoa", fields: [idpes], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "cadastro_juridica_idpes_foreign")
 * pessoa_juridica_idpes_revTopessoa pessoa?                      @relation("juridica_idpes_revTopessoa", fields: [idpes_rev], references: [idpes], onUpdate: NoAction, map: "cadastro_juridica_idpes_rev_foreign")
 * empresa_transporte_escolar        empresa_transporte_escolar[]
 * pessoa_transporte                 pessoa_transporte[]
 * rota_transporte_escolar           rota_transporte_escolar[]
 * escola                            escola[]
 * @@schema("cadastro")
 * }
 * model ocupacao {
 * idocup    Decimal  @id(map: "pk_ocupacao") @db.Decimal(6, 0)
 * descricao String   @db.VarChar(250)
 * fisica    fisica[]
 * @@schema("cadastro")
 * }
 * /// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * model orgao_emissor_rg {
 * idorg_rg          Int         @id(map: "pk_orgao_emissor_rg") @default(autoincrement())
 * sigla             String      @db.VarChar(20)
 * descricao         String      @db.VarChar(60)
 * situacao          String      @db.Char(1)
 * codigo_educacenso Int?
 * documento         documento[]
 * @@schema("cadastro")
 * }
 * /// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * model pessoa {
 * idpes                                              Int                      @id(map: "pk_pessoa") @default(dbgenerated("nextval(('cadastro.seq_pessoa'::text)::regclass)"))
 * nome                                               String                   @db.VarChar(150)
 * idpes_cad                                          Int?
 * data_cad                                           DateTime                 @db.Timestamp(6)
 * url                                                String?                  @db.VarChar(60)
 * tipo                                               String                   @db.Char(1)
 * idpes_rev                                          Int?
 * data_rev                                           DateTime?                @db.Timestamp(6)
 * email                                              String?                  @db.VarChar(100)
 * situacao                                           String                   @db.Char(1)
 * origem_gravacao                                    String                   @db.Char(1)
 * operacao                                           String                   @db.Char(1)
 * slug                                               String?                  @db.VarChar(191)
 * documento_documento_idpes_cadTopessoa              documento[]              @relation("documento_idpes_cadTopessoa")
 * documento_documento_idpes_revTopessoa              documento[]              @relation("documento_idpes_revTopessoa")
 * fisica_fisica_idpes_cadTopessoa                    fisica[]                 @relation("fisica_idpes_cadTopessoa")
 * fisica_fisica_idpes_conTopessoa                    fisica[]                 @relation("fisica_idpes_conTopessoa")
 * fisica_fisica_idpesTopessoa                        fisica?                  @relation("fisica_idpesTopessoa")
 * fisica_fisica_idpes_maeTopessoa                    fisica[]                 @relation("fisica_idpes_maeTopessoa")
 * fisica_fisica_idpes_paiTopessoa                    fisica[]                 @relation("fisica_idpes_paiTopessoa")
 * fisica_fisica_idpes_responsavelTopessoa            fisica[]                 @relation("fisica_idpes_responsavelTopessoa")
 * fisica_fisica_idpes_revTopessoa                    fisica[]                 @relation("fisica_idpes_revTopessoa")
 * fisica_foto                                        fisica_foto?
 * fone_pessoa_fone_pessoa_idpes_cadTopessoa          fone_pessoa[]            @relation("fone_pessoa_idpes_cadTopessoa")
 * fone_pessoa_fone_pessoa_idpesTopessoa              fone_pessoa[]            @relation("fone_pessoa_idpesTopessoa")
 * fone_pessoa_fone_pessoa_idpes_revTopessoa          fone_pessoa[]            @relation("fone_pessoa_idpes_revTopessoa")
 * juridica_juridica_idpes_cadTopessoa                juridica[]               @relation("juridica_idpes_cadTopessoa")
 * juridica_juridica_idpesTopessoa                    juridica?                @relation("juridica_idpesTopessoa")
 * juridica_juridica_idpes_revTopessoa                juridica[]               @relation("juridica_idpes_revTopessoa")
 * pessoa_pessoa_idpes_cadTopessoa                    pessoa?                  @relation("pessoa_idpes_cadTopessoa", fields: [idpes_cad], references: [idpes], onUpdate: NoAction, map: "cadastro_pessoa_idpes_cad_foreign")
 * other_pessoa_pessoa_idpes_cadTopessoa              pessoa[]                 @relation("pessoa_idpes_cadTopessoa")
 * pessoa_pessoa_idpes_revTopessoa                    pessoa?                  @relation("pessoa_idpes_revTopessoa", fields: [idpes_rev], references: [idpes], onUpdate: NoAction, map: "cadastro_pessoa_idpes_rev_foreign")
 * other_pessoa_pessoa_idpes_revTopessoa              pessoa[]                 @relation("pessoa_idpes_revTopessoa")
 * candidato_reserva_vaga                             candidato_reserva_vaga[]
 * escola_escola_ref_idpes_gestorTopessoa             escola[]                 @relation("escola_ref_idpes_gestorTopessoa")
 * escola_escola_ref_idpes_secretario_escolarTopessoa escola[]                 @relation("escola_ref_idpes_secretario_escolarTopessoa")
 * servidor                                           servidor[]
 * person_has_place                                   person_has_place[]
 * @@index([slug], map: "cadastro_pessoa_slug_index")
 * @@index([idpes], map: "idx_cadastro_pessoa_idpes")
 * @@schema("cadastro")
 * }
 * model raca {
 * cod_raca        Int           @id @default(autoincrement())
 * idpes_exc       Int?
 * idpes_cad       Int
 * nm_raca         String        @db.VarChar(50)
 * data_cadastro   DateTime      @db.Timestamp(6)
 * data_exclusao   DateTime?     @db.Timestamp(6)
 * ativo           Boolean?      @default(false)
 * raca_educacenso Int?          @db.SmallInt
 * fisica_raca     fisica_raca[]
 * @@schema("cadastro")
 * }
 * model cadastro_religiao {
 * cod_religiao                      Int       @id @default(autoincrement())
 * idpes_exc                         Int?
 * idpes_cad                         Int
 * nm_religiao                       String    @db.VarChar(50)
 * data_cadastro                     DateTime  @db.Timestamp(6)
 * data_exclusao                     DateTime? @db.Timestamp(6)
 * ativo                             Boolean?  @default(false)
 * fisica_religiao_idpes_cadTofisica fisica    @relation("religiao_idpes_cadTofisica", fields: [idpes_cad], references: [idpes], onUpdate: Restrict, map: "cadastro_religiao_idpes_cad_foreign")
 * fisica_religiao_idpes_excTofisica fisica?   @relation("religiao_idpes_excTofisica", fields: [idpes_exc], references: [idpes], onDelete: Restrict, onUpdate: Restrict, map: "cadastro_religiao_idpes_exc_foreign")
 * @@map("religiao")
 * @@schema("cadastro")
 * }
 * model area_conhecimento {
 * id                    Int                     @default(autoincrement())
 * instituicao_id        Int
 * nome                  String                  @db.VarChar(200)
 * secao                 String?                 @db.VarChar(50)
 * ordenamento_ac        Int?                    @default(99999)
 * updated_at            DateTime?               @default(now()) @db.Timestamp(6)
 * agrupar_descritores   Boolean                 @default(false)
 * componente_curricular componente_curricular[]
 * @@id([id, instituicao_id])
 * @@index([nome], map: "area_conhecimento_nome_key")
 * @@schema("modules")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model area_conhecimento_excluidos {
 * id                  Int
 * instituicao_id      Int
 * nome                String    @db.VarChar(191)
 * secao               String?   @db.VarChar(191)
 * ordenamento_ac      Int?
 * created_at          DateTime? @db.Timestamp(0)
 * updated_at          DateTime? @db.Timestamp(0)
 * deleted_at          DateTime? @db.Timestamp(0)
 * agrupar_descritores Boolean   @default(false)
 * @@ignore
 * @@schema("modules")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model auditoria {
 * usuario      String?   @db.VarChar(300)
 * operacao     Int?      @db.SmallInt
 * rotina       String?   @db.VarChar(300)
 * valor_antigo String?
 * valor_novo   String?
 * data_hora    DateTime? @db.Timestamp(6)
 * @@ignore
 * @@schema("modules")
 * }
 * model calendario_turma {
 * calendario_ano_letivo_id Int
 * ano                      Int
 * mes                      Int
 * dia                      Int
 * turma_id                 Int
 * calendario_dia           calendario_dia @relation(fields: [calendario_ano_letivo_id, mes, dia], references: [ref_cod_calendario_ano_letivo, mes, dia], onDelete: Cascade, onUpdate: NoAction, map: "modules_calendario_turma_calendario_ano_letivo_id_mes_dia_forei")
 * @@id([calendario_ano_letivo_id, ano, mes, dia, turma_id], map: "calendario_turma_pk")
 * @@schema("modules")
 * }
 * model componente_curricular {
 * id                                                                                 Int                                 @unique @default(autoincrement())
 * instituicao_id                                                                     Int
 * area_conhecimento_id                                                               Int
 * nome                                                                               String                              @db.VarChar(500)
 * abreviatura                                                                        String                              @db.VarChar(25)
 * tipo_base                                                                          Int                                 @db.SmallInt
 * codigo_educacenso                                                                  Int?                                @db.SmallInt
 * ordenamento                                                                        Int?                                @default(99999)
 * updated_at                                                                         DateTime?                           @default(now()) @db.Timestamp(6)
 * desconsidera_para_progressao                                                       Boolean                             @default(false)
 * area_conhecimento                                                                  area_conhecimento                   @relation(fields: [area_conhecimento_id, instituicao_id], references: [id, instituicao_id], onUpdate: Restrict, map: "modules_componente_curricular_area_conhecimento_id_instituicao_")
 * componente_curricular_ano_escolar                                                  componente_curricular_ano_escolar[]
 * componente_curricular_turma                                                        componente_curricular_turma[]
 * professor_turma_disciplina                                                         professor_turma_disciplina[]
 * escola_serie_disciplina                                                            escola_serie_disciplina[]
 * servidor_disciplina                                                                servidor_disciplina[]
 * turma                                                                              turma[]
 * migrated_disciplines_migrated_disciplines_new_discipline_idTocomponente_curricular migrated_disciplines[]              @relation("migrated_disciplines_new_discipline_idTocomponente_curricular")
 * migrated_disciplines_migrated_disciplines_old_discipline_idTocomponente_curricular migrated_disciplines[]              @relation("migrated_disciplines_old_discipline_idTocomponente_curricular")
 * @@id([id, instituicao_id])
 * @@index([area_conhecimento_id], map: "componente_curricular_area_conhecimento_key")
 * @@schema("modules")
 * }
 * model componente_curricular_ano_escolar {
 * componente_curricular_id Int
 * ano_escolar_id           Int
 * carga_horaria            Decimal?              @db.Decimal(7, 3)
 * tipo_nota                Int?
 * anos_letivos             Int[]                 @default([]) @db.SmallInt
 * updated_at               DateTime?             @default(now()) @db.Timestamp(6)
 * componente_curricular    componente_curricular @relation(fields: [componente_curricular_id], references: [id], onUpdate: Restrict, map: "modules_componente_curricular_ano_escolar_componente_curricular")
 * @@id([componente_curricular_id, ano_escolar_id])
 * @@schema("modules")
 * }
 * model componente_curricular_ano_escolar_excluidos {
 * id                       Int       @id @default(autoincrement())
 * componente_curricular_id Int
 * ano_escolar_id           Int
 * carga_horaria            Decimal?  @db.Decimal(7, 3)
 * tipo_nota                Int?
 * anos_letivos             Int[]     @default([]) @db.SmallInt
 * updated_at               DateTime? @db.Timestamp(0)
 * deleted_at               DateTime? @db.Timestamp(0)
 * @@schema("modules")
 * }
 * model componente_curricular_turma {
 * componente_curricular_id Int
 * ano_escolar_id           Int
 * escola_id                Int
 * turma_id                 Int
 * carga_horaria            Decimal?              @db.Decimal(7, 3)
 * docente_vinculado        Int?                  @db.SmallInt
 * etapas_especificas       Int?                  @db.SmallInt
 * etapas_utilizadas        String?               @db.VarChar
 * updated_at               DateTime              @default(now()) @db.Timestamp(6)
 * componente_curricular    componente_curricular @relation(fields: [componente_curricular_id], references: [id], onUpdate: NoAction, map: "modules_componente_curricular_turma_componente_curricular_id_fo")
 * turma                    turma                 @relation(fields: [turma_id], references: [cod_turma], onDelete: Cascade, onUpdate: NoAction, map: "modules_componente_curricular_turma_turma_id_foreign")
 * @@id([componente_curricular_id, turma_id])
 * @@index([turma_id], map: "componente_curricular_turma_turma_idx")
 * @@schema("modules")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model componente_curricular_turma_excluidos {
 * componente_curricular_id Int
 * ano_escolar_id           Int
 * escola_id                Int
 * turma_id                 Int
 * carga_horaria            Float?
 * docente_vinculado        Int?
 * etapas_especificas       Int?
 * etapas_utilizadas        String?   @db.VarChar(191)
 * created_at               DateTime? @db.Timestamp(0)
 * updated_at               DateTime? @db.Timestamp(0)
 * deleted_at               DateTime? @db.Timestamp(0)
 * @@ignore
 * @@schema("modules")
 * }
 * model config_movimento_geral {
 * id            Int   @id(map: "cod_config_movimento_geral_pkey") @default(autoincrement())
 * ref_cod_serie Int
 * coluna        Int
 * serie         serie @relation(fields: [ref_cod_serie], references: [cod_serie], onDelete: NoAction, onUpdate: NoAction, map: "modules_config_movimento_geral_ref_cod_serie_foreign")
 * @@schema("modules")
 * }
 * model docente_licenciatura {
 * id             Int             @id(map: "docente_licenciatura_pk") @default(autoincrement())
 * servidor_id    Int
 * licenciatura   Int
 * curso_id       Int?
 * ano_conclusao  Int
 * ies_id         Int?
 * user_id        Int
 * created_at     DateTime        @db.Timestamp(6)
 * updated_at     DateTime?       @db.Timestamp(6)
 * educacenso_ies educacenso_ies? @relation(fields: [ies_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "modules_docente_licenciatura_ies_id_foreign")
 * @@unique([servidor_id, curso_id, ies_id], map: "docente_licenciatura_curso_unique")
 * @@index([ies_id], map: "docente_licenciatura_ies_idx")
 * @@schema("modules")
 * }
 * model educacenso_cod_aluno {
 * cod_aluno      Int
 * cod_aluno_inep BigInt
 * nome_inep      String?   @db.VarChar(255)
 * fonte          String?   @db.VarChar(255)
 * created_at     DateTime  @db.Timestamp(6)
 * updated_at     DateTime? @db.Timestamp(6)
 * @@id([cod_aluno, cod_aluno_inep], map: "educacenso_cod_aluno_pk")
 * @@schema("modules")
 * }
 * model educacenso_cod_docente {
 * cod_servidor     Int
 * cod_docente_inep BigInt
 * nome_inep        String?   @db.VarChar(255)
 * fonte            String?   @db.VarChar(255)
 * created_at       DateTime  @db.Timestamp(6)
 * updated_at       DateTime? @db.Timestamp(6)
 * @@id([cod_servidor, cod_docente_inep], map: "educacenso_cod_docente_pk")
 * @@schema("modules")
 * }
 * model educacenso_cod_escola {
 * cod_escola      Int
 * cod_escola_inep BigInt
 * nome_inep       String?   @db.VarChar(255)
 * fonte           String?   @db.VarChar(255)
 * created_at      DateTime  @db.Timestamp(6)
 * updated_at      DateTime? @db.Timestamp(6)
 * escola          escola    @relation(fields: [cod_escola], references: [cod_escola], onDelete: Cascade, onUpdate: NoAction, map: "modules_educacenso_cod_escola_cod_escola_foreign")
 * @@id([cod_escola, cod_escola_inep], map: "educacenso_cod_escola_pk")
 * @@schema("modules")
 * }
 * model educacenso_cod_turma {
 * cod_turma      Int
 * cod_turma_inep BigInt
 * nome_inep      String?   @db.VarChar(255)
 * fonte          String?   @db.VarChar(255)
 * created_at     DateTime  @db.Timestamp(6)
 * updated_at     DateTime? @db.Timestamp(6)
 * turma          turma     @relation(fields: [cod_turma], references: [cod_turma], onDelete: Cascade, onUpdate: NoAction, map: "modules_educacenso_cod_turma_cod_turma_foreign")
 * @@id([cod_turma, cod_turma_inep], map: "educacenso_cod_turma_pk")
 * @@schema("modules")
 * }
 * model educacenso_curso_superior {
 * id                                                                   Int                    @id(map: "educacenso_curso_superior_pk") @default(autoincrement())
 * curso_id                                                             String                 @db.VarChar(100)
 * nome                                                                 String                 @db.VarChar(255)
 * classe_id                                                            Int
 * user_id                                                              Int
 * created_at                                                           DateTime               @db.Timestamp(6)
 * updated_at                                                           DateTime?              @db.Timestamp(6)
 * grau_academico                                                       Int?                   @db.SmallInt
 * servidor_servidor_codigo_curso_superior_1Toeducacenso_curso_superior servidor[]             @relation("servidor_codigo_curso_superior_1Toeducacenso_curso_superior")
 * servidor_servidor_codigo_curso_superior_2Toeducacenso_curso_superior servidor[]             @relation("servidor_codigo_curso_superior_2Toeducacenso_curso_superior")
 * servidor_servidor_codigo_curso_superior_3Toeducacenso_curso_superior servidor[]             @relation("servidor_codigo_curso_superior_3Toeducacenso_curso_superior")
 * employee_graduations                                                 employee_graduations[]
 * @@schema("modules")
 * }
 * model educacenso_ies {
 * id                                                             Int                    @id(map: "educacenso_ies_pk") @default(autoincrement())
 * ies_id                                                         Int
 * nome                                                           String                 @db.VarChar(255)
 * dependencia_administrativa_id                                  Int
 * tipo_instituicao_id                                            Int
 * uf                                                             String?                @db.Char(2)
 * user_id                                                        Int
 * created_at                                                     DateTime               @db.Timestamp(6)
 * updated_at                                                     DateTime?              @db.Timestamp(6)
 * docente_licenciatura                                           docente_licenciatura[]
 * escola                                                         escola[]
 * servidor_servidor_instituicao_curso_superior_1Toeducacenso_ies servidor[]             @relation("servidor_instituicao_curso_superior_1Toeducacenso_ies")
 * servidor_servidor_instituicao_curso_superior_2Toeducacenso_ies servidor[]             @relation("servidor_instituicao_curso_superior_2Toeducacenso_ies")
 * servidor_servidor_instituicao_curso_superior_3Toeducacenso_ies servidor[]             @relation("servidor_instituicao_curso_superior_3Toeducacenso_ies")
 * employee_graduations                                           employee_graduations[]
 * @@index([ies_id], map: "idx_educacenso_ies_ies_id")
 * @@schema("modules")
 * }
 * model educacenso_orgao_regional {
 * sigla_uf String @db.VarChar(2)
 * codigo   String @db.VarChar(5)
 * @@id([sigla_uf, codigo], map: "pk_educacenso_orgao_regional")
 * @@schema("modules")
 * }
 * model empresa_transporte_escolar {
 * cod_empresa_transporte_escolar Int                       @id(map: "empresa_transporte_escolar_cod_empresa_transporte_escolar_pkey") @default(autoincrement())
 * ref_idpes                      Int
 * ref_resp_idpes                 Int
 * observacao                     String?                   @db.VarChar(255)
 * juridica                       juridica                  @relation(fields: [ref_idpes], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "modules_empresa_transporte_escolar_ref_idpes_foreign")
 * fisica                         fisica                    @relation(fields: [ref_resp_idpes], references: [idpes], onUpdate: Restrict, map: "modules_empresa_transporte_escolar_ref_resp_idpes_foreign")
 * motorista                      motorista[]
 * rota_transporte_escolar        rota_transporte_escolar[]
 * veiculo                        veiculo[]
 * @@schema("modules")
 * }
 * model etapas_curso_educacenso {
 * etapa_id          Int
 * curso_id          Int
 * curso             curso             @relation(fields: [curso_id], references: [cod_curso], onDelete: NoAction, onUpdate: NoAction, map: "modules_etapas_curso_educacenso_curso_id_foreign")
 * etapas_educacenso etapas_educacenso @relation(fields: [etapa_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "modules_etapas_curso_educacenso_etapa_id_foreign")
 * @@id([etapa_id, curso_id], map: "etapas_curso_educacenso_pk")
 * @@schema("modules")
 * }
 * model etapas_educacenso {
 * id                      Int                       @id(map: "etapas_educacenso_pk")
 * nome                    String?                   @db.VarChar(255)
 * etapas_curso_educacenso etapas_curso_educacenso[]
 * @@schema("modules")
 * }
 * model modules_falta_aluno {
 * id                          Int                           @id @default(autoincrement())
 * matricula_id                Int                           @unique(map: "modules_falta_aluno_matricula_id_unique")
 * tipo_falta                  Int                           @db.SmallInt
 * falta_componente_curricular falta_componente_curricular[]
 * falta_geral                 falta_geral[]
 * @@index([matricula_id], map: "idx_falta_aluno_matricula_id")
 * @@index([matricula_id, tipo_falta], map: "idx_falta_aluno_matricula_id_tipo")
 * @@map("falta_aluno")
 * @@schema("modules")
 * }
 * model falta_componente_curricular {
 * id                       Int                 @default(autoincrement())
 * falta_aluno_id           Int
 * componente_curricular_id Int
 * quantidade               Int?                @default(0)
 * etapa                    String              @db.VarChar(2)
 * falta_aluno              modules_falta_aluno @relation(fields: [falta_aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "modules_falta_componente_curricular_falta_aluno_id_foreign")
 * @@id([falta_aluno_id, componente_curricular_id, etapa])
 * @@index([falta_aluno_id, componente_curricular_id, etapa], map: "idx_falta_componente_curricular_id1")
 * @@index([id], map: "modules_falta_componente_curricular_id_index")
 * @@schema("modules")
 * }
 * model falta_geral {
 * id             Int                 @default(autoincrement())
 * falta_aluno_id Int
 * quantidade     Int?                @default(0)
 * etapa          String              @db.VarChar(2)
 * falta_aluno    modules_falta_aluno @relation(fields: [falta_aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "modules_falta_geral_falta_aluno_id_foreign")
 * @@id([falta_aluno_id, etapa])
 * @@index([falta_aluno_id], map: "idx_falta_geral_falta_aluno_id")
 * @@index([id], map: "modules_falta_geral_id_index")
 * @@schema("modules")
 * }
 * model ficha_medica_aluno {
 * ref_cod_aluno                   Int     @id(map: "ficha_medica_cod_aluno_pkey")
 * altura                          String? @db.VarChar(4)
 * peso                            String? @db.VarChar(7)
 * grupo_sanguineo                 String? @db.VarChar(2)
 * fator_rh                        String? @db.VarChar(1)
 * alergia_medicamento             String? @db.Char(1)
 * desc_alergia_medicamento        String? @db.VarChar(100)
 * alergia_alimento                String? @db.Char(1)
 * desc_alergia_alimento           String? @db.VarChar(100)
 * doenca_congenita                String? @db.Char(1)
 * desc_doenca_congenita           String? @db.VarChar(100)
 * fumante                         String? @db.Char(1)
 * doenca_caxumba                  String? @db.Char(1)
 * doenca_sarampo                  String? @db.Char(1)
 * doenca_rubeola                  String? @db.Char(1)
 * doenca_catapora                 String? @db.Char(1)
 * doenca_escarlatina              String? @db.Char(1)
 * doenca_coqueluche               String? @db.Char(1)
 * doenca_outras                   String? @db.VarChar(100)
 * epiletico                       String? @db.Char(1)
 * epiletico_tratamento            String? @db.Char(1)
 * hemofilico                      String? @db.Char(1)
 * hipertenso                      String? @db.Char(1)
 * asmatico                        String? @db.Char(1)
 * diabetico                       String? @db.Char(1)
 * insulina                        String? @db.Char(1)
 * tratamento_medico               String? @db.Char(1)
 * desc_tratamento_medico          String? @db.VarChar(100)
 * medicacao_especifica            String? @db.Char(1)
 * desc_medicacao_especifica       String? @db.VarChar(100)
 * acomp_medico_psicologico        String? @db.Char(1)
 * desc_acomp_medico_psicologico   String? @db.VarChar(100)
 * restricao_atividade_fisica      String? @db.Char(1)
 * desc_restricao_atividade_fisica String? @db.VarChar(100)
 * fratura_trauma                  String? @db.Char(1)
 * desc_fratura_trauma             String? @db.VarChar(100)
 * plano_saude                     String? @db.Char(1)
 * desc_plano_saude                String? @db.VarChar(50)
 * responsavel                     String? @db.VarChar(50)
 * responsavel_parentesco          String? @db.VarChar(20)
 * responsavel_parentesco_telefone String? @db.VarChar(20)
 * responsavel_parentesco_celular  String? @db.VarChar(20)
 * observacao                      String? @db.VarChar(255)
 * aceita_hospital_proximo         String? @db.Char(1)
 * desc_aceita_hospital_proximo    String? @db.VarChar(191)
 * @@schema("modules")
 * }
 * model formula_media {
 * id                                                                                   Int               @default(autoincrement())
 * instituicao_id                                                                       Int
 * nome                                                                                 String            @db.VarChar(50)
 * formula_media                                                                        String            @db.VarChar(200)
 * tipo_formula                                                                         Int?              @default(1) @db.SmallInt
 * substitui_menor_nota_rc                                                              Int               @default(0) @db.SmallInt
 * regra_avaliacao_regra_avaliacao_formula_media_id_instituicao_idToformula_media       regra_avaliacao[] @relation("regra_avaliacao_formula_media_id_instituicao_idToformula_media")
 * regra_avaliacao_regra_avaliacao_formula_recuperacao_id_instituicao_idToformula_media regra_avaliacao[] @relation("regra_avaliacao_formula_recuperacao_id_instituicao_idToformula_media")
 * @@id([id, instituicao_id])
 * @@schema("modules")
 * }
 * model itinerario_transporte_escolar {
 * cod_itinerario_transporte_escolar Int                     @id(map: "itinerario_transporte_escolar_cod_itinerario_transporte_escolar") @default(autoincrement())
 * ref_cod_rota_transporte_escolar   Int
 * seq                               Int
 * ref_cod_ponto_transporte_escolar  Int
 * ref_cod_veiculo                   Int?
 * hora                              DateTime?               @db.Time(6)
 * tipo                              String                  @db.Char(1)
 * rota_transporte_escolar           rota_transporte_escolar @relation(fields: [ref_cod_rota_transporte_escolar], references: [cod_rota_transporte_escolar], onDelete: NoAction, onUpdate: NoAction, map: "modules_itinerario_transporte_escolar_ref_cod_rota_transporte_e")
 * veiculo                           veiculo?                @relation(fields: [ref_cod_veiculo], references: [cod_veiculo], onDelete: Restrict, onUpdate: Restrict, map: "modules_itinerario_transporte_escolar_ref_cod_veiculo_foreign")
 * @@schema("modules")
 * }
 * model lingua_indigena_educacenso {
 * id     Int     @id(map: "lingua_indigena_educacenso_pk")
 * lingua String? @db.VarChar(255)
 * @@schema("modules")
 * }
 * model media_geral {
 * nota_aluno_id     Int
 * media             Decimal?           @default(0) @db.Decimal(8, 4)
 * media_arredondada String?            @default(dbgenerated("0")) @db.VarChar(10)
 * etapa             String             @db.VarChar(2)
 * nota_aluno        modules_nota_aluno @relation(fields: [nota_aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "modules_media_geral_nota_aluno_id_foreign")
 * @@id([nota_aluno_id, etapa])
 * @@schema("modules")
 * }
 * model moradia_aluno {
 * ref_cod_aluno         Int     @id(map: "moradia_aluno_pkei")
 * moradia               String? @db.Char(1)
 * material              String? @default("A") @db.Char(1)
 * casa_outra            String? @db.VarChar(20)
 * moradia_situacao      Int?
 * quartos               Int?
 * sala                  Int?
 * copa                  Int?
 * banheiro              Int?
 * garagem               Int?
 * empregada_domestica   String? @db.Char(1)
 * automovel             String? @db.Char(1)
 * motocicleta           String? @db.Char(1)
 * geladeira             String? @db.Char(1)
 * fogao                 String? @db.Char(1)
 * maquina_lavar         String? @db.Char(1)
 * microondas            String? @db.Char(1)
 * video_dvd             String? @db.Char(1)
 * televisao             String? @db.Char(1)
 * telefone              String? @db.Char(1)
 * quant_pessoas         Int?
 * renda                 Float?
 * agua_encanada         String? @db.Char(1)
 * poco                  String? @db.Char(1)
 * energia               String? @db.Char(1)
 * esgoto                String? @db.Char(1)
 * fossa                 String? @db.Char(1)
 * lixo                  String? @db.Char(1)
 * recursos_tecnologicos Json?   @db.Json
 * @@schema("modules")
 * }
 * model motorista {
 * cod_motorista                      Int                        @id @default(autoincrement())
 * ref_idpes                          Int
 * cnh                                String?                    @db.VarChar(15)
 * tipo_cnh                           String?                    @db.VarChar(2)
 * dt_habilitacao                     DateTime?                  @db.Date
 * vencimento_cnh                     DateTime?                  @db.Date
 * ref_cod_empresa_transporte_escolar Int
 * observacao                         String?                    @db.VarChar(255)
 * empresa_transporte_escolar         empresa_transporte_escolar @relation(fields: [ref_cod_empresa_transporte_escolar], references: [cod_empresa_transporte_escolar], onUpdate: Restrict, map: "modules_motorista_ref_cod_empresa_transporte_escolar_foreign")
 * fisica                             fisica                     @relation(fields: [ref_idpes], references: [idpes], onUpdate: Restrict, map: "modules_motorista_ref_idpes_foreign")
 * @@schema("modules")
 * }
 * model modules_nota_aluno {
 * id                               Int                                @id @default(autoincrement())
 * matricula_id                     Int                                @unique(map: "modules_nota_aluno_matricula_id_unique")
 * media_geral                      media_geral[]
 * nota_componente_curricular       nota_componente_curricular[]
 * nota_componente_curricular_media nota_componente_curricular_media[]
 * nota_geral                       nota_geral[]
 * @@index([matricula_id], map: "idx_nota_aluno_matricula")
 * @@index([id, matricula_id], map: "idx_nota_aluno_matricula_id")
 * @@map("nota_aluno")
 * @@schema("modules")
 * }
 * model nota_componente_curricular {
 * id                          Int                @default(autoincrement())
 * nota_aluno_id               Int
 * componente_curricular_id    Int
 * nota                        Decimal?           @default(0) @db.Decimal(8, 4)
 * nota_arredondada            String?            @default(dbgenerated("0")) @db.VarChar(10)
 * etapa                       String             @db.VarChar(2)
 * nota_recuperacao            String?            @db.VarChar(10)
 * nota_original               String?            @db.VarChar(10)
 * nota_recuperacao_especifica String?            @db.VarChar(10)
 * nota_aluno                  modules_nota_aluno @relation(fields: [nota_aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "modules_nota_componente_curricular_nota_aluno_id_foreign")
 * @@id([nota_aluno_id, componente_curricular_id, etapa])
 * @@index([nota_aluno_id, componente_curricular_id, etapa], map: "idx_nota_componente_curricular_etapa")
 * @@index([componente_curricular_id, etapa], map: "idx_nota_componente_curricular_etp")
 * @@index([componente_curricular_id], map: "idx_nota_componente_curricular_id")
 * @@index([id], map: "modules_nota_componente_curricular_id_index")
 * @@schema("modules")
 * }
 * model nota_componente_curricular_media {
 * nota_aluno_id            Int
 * componente_curricular_id Int
 * media                    Decimal?           @default(0) @db.Decimal(8, 4)
 * media_arredondada        String?            @default(dbgenerated("0")) @db.VarChar(10)
 * etapa                    String             @db.VarChar(2)
 * situacao                 Int?
 * bloqueada                Boolean            @default(false)
 * nota_aluno               modules_nota_aluno @relation(fields: [nota_aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "modules_nota_componente_curricular_media_nota_aluno_id_foreign")
 * @@id([nota_aluno_id, componente_curricular_id])
 * @@index([componente_curricular_id], map: "modules_nota_componente_curricular_media_componente_curricular_")
 * @@index([etapa], map: "modules_nota_componente_curricular_media_etapa_index")
 * @@index([nota_aluno_id], map: "modules_nota_componente_curricular_media_nota_aluno_id_index")
 * @@schema("modules")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model nota_exame {
 * ref_cod_matricula             Int
 * ref_cod_componente_curricular Int
 * nota_exame                    Decimal?  @db.Decimal(6, 3)
 * matricula                     matricula @relation(fields: [ref_cod_matricula], references: [cod_matricula], onUpdate: Restrict, map: "modules_nota_exame_ref_cod_matricula_foreign")
 * @@index([ref_cod_componente_curricular], map: "modules_nota_exame_ref_cod_componente_curricular_index")
 * @@index([ref_cod_matricula], map: "modules_nota_exame_ref_cod_matricula_index")
 * @@ignore
 * @@schema("modules")
 * }
 * model nota_geral {
 * id               Int                @id @default(autoincrement())
 * nota_aluno_id    Int
 * nota             Decimal?           @default(0) @db.Decimal(8, 4)
 * nota_arredondada String?            @default(dbgenerated("0")) @db.VarChar(10)
 * etapa            String             @db.VarChar(2)
 * nota_aluno       modules_nota_aluno @relation(fields: [nota_aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "modules_nota_geral_nota_aluno_id_foreign")
 * @@index([etapa], map: "modules_nota_geral_etapa_index")
 * @@index([nota_aluno_id], map: "modules_nota_geral_nota_aluno_id_index")
 * @@schema("modules")
 * }
 * model parecer_aluno {
 * id                            Int                             @id @default(autoincrement())
 * matricula_id                  Int                             @unique(map: "modules_parecer_aluno_matricula_id_unique")
 * parecer_descritivo            Int                             @db.SmallInt
 * parecer_componente_curricular parecer_componente_curricular[]
 * parecer_geral                 parecer_geral[]
 * @@index([matricula_id], map: "idx_parecer_aluno_matricula_id")
 * @@schema("modules")
 * }
 * model parecer_componente_curricular {
 * id                       Int           @default(autoincrement())
 * parecer_aluno_id         Int
 * componente_curricular_id Int
 * parecer                  String?
 * etapa                    String        @db.VarChar(2)
 * parecer_aluno            parecer_aluno @relation(fields: [parecer_aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "modules_parecer_componente_curricular_parecer_aluno_id_foreign")
 * @@id([parecer_aluno_id, componente_curricular_id, etapa])
 * @@unique([parecer_aluno_id, componente_curricular_id, etapa], map: "alunocomponenteetapa")
 * @@index([id], map: "modules_parecer_componente_curricular_id_index")
 * @@schema("modules")
 * }
 * model parecer_geral {
 * id               Int           @default(autoincrement())
 * parecer_aluno_id Int
 * parecer          String?
 * etapa            String        @db.VarChar(2)
 * parecer_aluno    parecer_aluno @relation(fields: [parecer_aluno_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "modules_parecer_geral_parecer_aluno_id_foreign")
 * @@id([parecer_aluno_id, etapa])
 * @@index([parecer_aluno_id, etapa], map: "idx_parecer_geral_parecer_aluno_etp")
 * @@index([id], map: "modules_parecer_geral_id_index")
 * @@schema("modules")
 * }
 * model pessoa_transporte {
 * cod_pessoa_transporte            Int                       @id(map: "pessoa_transporte_cod_pessoa_transporte_pkey") @default(autoincrement())
 * ref_idpes                        Int
 * ref_cod_rota_transporte_escolar  Int
 * ref_cod_ponto_transporte_escolar Int?
 * ref_idpes_destino                Int?
 * observacao                       String?                   @db.VarChar(255)
 * turno                            String?                   @db.VarChar(255)
 * ponto_transporte_escolar         ponto_transporte_escolar? @relation(fields: [ref_cod_ponto_transporte_escolar], references: [cod_ponto_transporte_escolar], onDelete: NoAction, onUpdate: NoAction, map: "modules_pessoa_transporte_ref_cod_ponto_transporte_escolar_fore")
 * rota_transporte_escolar          rota_transporte_escolar   @relation(fields: [ref_cod_rota_transporte_escolar], references: [cod_rota_transporte_escolar], onDelete: NoAction, onUpdate: NoAction, map: "modules_pessoa_transporte_ref_cod_rota_transporte_escolar_forei")
 * juridica                         juridica?                 @relation(fields: [ref_idpes_destino], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "modules_pessoa_transporte_ref_idpes_destino_foreign")
 * fisica                           fisica                    @relation(fields: [ref_idpes], references: [idpes], onUpdate: Restrict, map: "modules_pessoa_transporte_ref_idpes_foreign")
 * @@schema("modules")
 * }
 * model ponto_transporte_escolar {
 * cod_ponto_transporte_escolar Int                 @id(map: "ponto_transporte_escolar_cod_ponto_transporte_escolar_pkey") @default(autoincrement())
 * descricao                    String              @db.VarChar(70)
 * cep                          Decimal?            @db.Decimal(8, 0)
 * idlog                        Decimal?            @db.Decimal(6, 0)
 * idbai                        Decimal?            @db.Decimal(6, 0)
 * numero                       Decimal?            @db.Decimal(6, 0)
 * complemento                  String?             @db.VarChar(20)
 * latitude                     String?             @db.VarChar(20)
 * longitude                    String?             @db.VarChar(20)
 * pessoa_transporte            pessoa_transporte[]
 * @@schema("modules")
 * }
 * model professor_turma {
 * id                               Int                          @id(map: "professor_turma_id_pk") @default(autoincrement())
 * ano                              Int                          @db.SmallInt
 * instituicao_id                   Int
 * turma_id                         Int
 * servidor_id                      Int
 * funcao_exercida                  Int                          @db.SmallInt
 * tipo_vinculo                     Int?                         @db.SmallInt
 * permite_lancar_faltas_componente Int?                         @default(0)
 * updated_at                       DateTime?                    @db.Timestamp(6)
 * turno_id                         Int?
 * unidades_curriculares            Int[]                        @db.SmallInt
 * servidor                         servidor                     @relation(fields: [servidor_id, instituicao_id], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "modules_professor_turma_servidor_id_instituicao_id_foreign")
 * turma                            turma                        @relation(fields: [turma_id], references: [cod_turma], onUpdate: Restrict, map: "modules_professor_turma_turma_id_foreign")
 * turma_turno                      turma_turno?                 @relation(fields: [turno_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "modules_professor_turma_turno_id_foreign")
 * professor_turma_disciplina       professor_turma_disciplina[]
 * @@schema("modules")
 * }
 * model professor_turma_disciplina {
 * professor_turma_id       Int
 * componente_curricular_id Int
 * componente_curricular    componente_curricular @relation(fields: [componente_curricular_id], references: [id], onUpdate: Restrict, map: "modules_professor_turma_disciplina_componente_curricular_id_for")
 * professor_turma          professor_turma       @relation(fields: [professor_turma_id], references: [id], onUpdate: Restrict, map: "modules_professor_turma_disciplina_professor_turma_id_foreign")
 * @@id([professor_turma_id, componente_curricular_id], map: "professor_turma_disciplina_pk")
 * @@schema("modules")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model professor_turma_excluidos {
 * id                               Int
 * ano                              Int
 * instituicao_id                   Int
 * turma_id                         Int
 * servidor_id                      Int
 * funcao_exercida                  Int
 * tipo_vinculo                     Int?
 * permite_lancar_faltas_componente Int?
 * turno_id                         Int?
 * created_at                       DateTime? @db.Timestamp(0)
 * updated_at                       DateTime? @db.Timestamp(0)
 * deleted_at                       DateTime? @db.Timestamp(0)
 * @@ignore
 * @@schema("modules")
 * }
 * model regra_avaliacao {
 * id                                                                                                   Int                           @unique @default(autoincrement())
 * instituicao_id                                                                                       Int
 * formula_media_id                                                                                     Int?
 * formula_recuperacao_id                                                                               Int?
 * tabela_arredondamento_id                                                                             Int?
 * nome                                                                                                 String                        @db.VarChar(50)
 * tipo_nota                                                                                            Int                           @db.SmallInt
 * tipo_progressao                                                                                      Int                           @db.SmallInt
 * media                                                                                                Decimal?                      @default(0.000) @db.Decimal(6, 3)
 * porcentagem_presenca                                                                                 Decimal?                      @default(0.000) @db.Decimal(6, 3)
 * parecer_descritivo                                                                                   Int?                          @default(0) @db.SmallInt
 * tipo_presenca                                                                                        Int                           @db.SmallInt
 * media_recuperacao                                                                                    Decimal?                      @default(0.000) @db.Decimal(6, 3)
 * tipo_recuperacao_paralela                                                                            Int?                          @default(0) @db.SmallInt
 * media_recuperacao_paralela                                                                           Decimal?                      @db.Decimal(5, 3)
 * nota_maxima_geral                                                                                    Int                           @default(10)
 * nota_maxima_exame_final                                                                              Int                           @default(10)
 * qtd_casas_decimais                                                                                   Int                           @default(2)
 * nota_geral_por_etapa                                                                                 Int?                          @default(0) @db.SmallInt
 * qtd_disciplinas_dependencia                                                                          Int                           @default(0) @db.SmallInt
 * aprova_media_disciplina                                                                              Int?                          @default(0) @db.SmallInt
 * reprovacao_automatica                                                                                Int?                          @default(0) @db.SmallInt
 * definir_componente_etapa                                                                             Int?                          @db.SmallInt
 * qtd_matriculas_dependencia                                                                           Int                           @default(0) @db.SmallInt
 * nota_minima_geral                                                                                    Int?                          @default(0)
 * tabela_arredondamento_id_conceitual                                                                  Int?
 * regra_diferenciada_id                                                                                Int?
 * updated_at                                                                                           DateTime?                     @default(now()) @db.Timestamp(6)
 * calcula_media_rec_paralela                                                                           Int                           @default(0) @db.SmallInt
 * tipo_calculo_recuperacao_paralela                                                                    Int                           @default(1)
 * disciplinas_aglutinadas                                                                              String?                       @db.VarChar(191)
 * desconsiderar_lancamento_frequencia                                                                  Boolean                       @default(false)
 * falta_minima_geral                                                                                   Int                           @default(0)
 * falta_maxima_geral                                                                                   Int                           @default(100)
 * formula_media_regra_avaliacao_formula_media_id_instituicao_idToformula_media                         formula_media?                @relation("regra_avaliacao_formula_media_id_instituicao_idToformula_media", fields: [formula_media_id, instituicao_id], references: [id, instituicao_id], onUpdate: Restrict, map: "modules_regra_avaliacao_formula_media_id_instituicao_id_foreign")
 * formula_media_regra_avaliacao_formula_recuperacao_id_instituicao_idToformula_media                   formula_media?                @relation("regra_avaliacao_formula_recuperacao_id_instituicao_idToformula_media", fields: [formula_recuperacao_id, instituicao_id], references: [id, instituicao_id], onUpdate: Restrict, map: "modules_regra_avaliacao_formula_recuperacao_id_instituicao_id_f")
 * regra_avaliacao                                                                                      regra_avaliacao?              @relation("regra_avaliacaoToregra_avaliacao", fields: [regra_diferenciada_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "modules_regra_avaliacao_regra_diferenciada_id_foreign")
 * other_regra_avaliacao                                                                                regra_avaliacao[]             @relation("regra_avaliacaoToregra_avaliacao")
 * tabela_arredondamento                                                                                tabela_arredondamento?        @relation(fields: [tabela_arredondamento_id, instituicao_id], references: [id, instituicao_id], onUpdate: Restrict, map: "modules_regra_avaliacao_tabela_arredondamento_id_instituicao_id")
 * regra_avaliacao_recuperacao                                                                          regra_avaliacao_recuperacao[]
 * regra_avaliacao_serie_ano_regra_avaliacao_serie_ano_regra_avaliacao_diferenciada_idToregra_avaliacao regra_avaliacao_serie_ano[]   @relation("regra_avaliacao_serie_ano_regra_avaliacao_diferenciada_idToregra_avaliacao")
 * regra_avaliacao_serie_ano_regra_avaliacao_serie_ano_regra_avaliacao_idToregra_avaliacao              regra_avaliacao_serie_ano[]   @relation("regra_avaliacao_serie_ano_regra_avaliacao_idToregra_avaliacao")
 * serie_serie_regra_avaliacao_diferenciada_idToregra_avaliacao                                         serie[]                       @relation("serie_regra_avaliacao_diferenciada_idToregra_avaliacao")
 * serie_serie_regra_avaliacao_idToregra_avaliacao                                                      serie[]                       @relation("serie_regra_avaliacao_idToregra_avaliacao")
 * @@id([id, instituicao_id])
 * @@schema("modules")
 * }
 * model regra_avaliacao_recuperacao {
 * id                   Int             @id @default(autoincrement())
 * regra_avaliacao_id   Int
 * descricao            String          @db.VarChar(25)
 * etapas_recuperadas   String          @db.VarChar(25)
 * substitui_menor_nota Boolean?
 * media                Decimal         @db.Decimal(8, 4)
 * nota_maxima          Decimal         @db.Decimal(8, 4)
 * updated_at           DateTime?       @default(now()) @db.Timestamp(6)
 * regra_avaliacao      regra_avaliacao @relation(fields: [regra_avaliacao_id], references: [id], onUpdate: Restrict, map: "modules_regra_avaliacao_recuperacao_regra_avaliacao_id_foreign")
 * @@schema("modules")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model regra_avaliacao_recuperacao_excluidos {
 * id                   Int
 * regra_avaliacao_id   Int
 * descricao            String    @db.VarChar(191)
 * etapas_recuperadas   String    @db.VarChar(191)
 * substitui_menor_nota Boolean?
 * media                Float
 * nota_maxima          Float
 * created_at           DateTime? @db.Timestamp(0)
 * updated_at           DateTime? @db.Timestamp(0)
 * deleted_at           DateTime? @db.Timestamp(0)
 * @@ignore
 * @@schema("modules")
 * }
 * model regra_avaliacao_serie_ano {
 * serie_id                                                                                   Int
 * regra_avaliacao_id                                                                         Int
 * regra_avaliacao_diferenciada_id                                                            Int?
 * ano_letivo                                                                                 Int              @db.SmallInt
 * updated_at                                                                                 DateTime         @default(now()) @db.Timestamp(6)
 * regra_avaliacao_regra_avaliacao_serie_ano_regra_avaliacao_diferenciada_idToregra_avaliacao regra_avaliacao? @relation("regra_avaliacao_serie_ano_regra_avaliacao_diferenciada_idToregra_avaliacao", fields: [regra_avaliacao_diferenciada_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "modules_regra_avaliacao_serie_ano_regra_avaliacao_diferenciada_")
 * regra_avaliacao_regra_avaliacao_serie_ano_regra_avaliacao_idToregra_avaliacao              regra_avaliacao  @relation("regra_avaliacao_serie_ano_regra_avaliacao_idToregra_avaliacao", fields: [regra_avaliacao_id], references: [id], onUpdate: Restrict, map: "modules_regra_avaliacao_serie_ano_regra_avaliacao_id_foreign")
 * serie                                                                                      serie            @relation(fields: [serie_id], references: [cod_serie], onUpdate: Restrict, map: "modules_regra_avaliacao_serie_ano_serie_id_foreign")
 * @@id([serie_id, ano_letivo])
 * @@schema("modules")
 * }
 * model regra_avaliacao_serie_ano_excluidos {
 * id                              Int       @id @default(autoincrement())
 * serie_id                        Int
 * regra_avaliacao_id              Int
 * regra_avaliacao_diferenciada_id Int?
 * ano_letivo                      Int
 * created_at                      DateTime? @db.Timestamp(0)
 * updated_at                      DateTime? @db.Timestamp(0)
 * deleted_at                      DateTime? @db.Timestamp(0)
 * @@schema("modules")
 * }
 * model rota_transporte_escolar {
 * cod_rota_transporte_escolar        Int                             @id(map: "rota_transporte_escolar_cod_rota_transporte_escolar_pkey") @default(autoincrement())
 * ref_idpes_destino                  Int
 * descricao                          String                          @db.VarChar(50)
 * ano                                Int
 * tipo_rota                          String                          @db.Char(1)
 * km_pav                             Float?
 * km_npav                            Float?
 * ref_cod_empresa_transporte_escolar Int?
 * tercerizado                        String                          @db.Char(1)
 * itinerario_transporte_escolar      itinerario_transporte_escolar[]
 * pessoa_transporte                  pessoa_transporte[]
 * empresa_transporte_escolar         empresa_transporte_escolar?     @relation(fields: [ref_cod_empresa_transporte_escolar], references: [cod_empresa_transporte_escolar], onDelete: Restrict, onUpdate: Restrict, map: "modules_rota_transporte_escolar_ref_cod_empresa_transporte_esco")
 * juridica                           juridica                        @relation(fields: [ref_idpes_destino], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "modules_rota_transporte_escolar_ref_idpes_destino_foreign")
 * @@schema("modules")
 * }
 * model tabela_arredondamento {
 * id                          Int                           @unique @default(autoincrement())
 * instituicao_id              Int
 * nome                        String                        @db.VarChar(50)
 * tipo_nota                   Int                           @default(1) @db.SmallInt
 * updated_at                  DateTime?                     @default(now()) @db.Timestamp(6)
 * arredondar_nota             Int                           @default(0) @db.SmallInt
 * regra_avaliacao             regra_avaliacao[]
 * tabela_arredondamento_valor tabela_arredondamento_valor[]
 * @@id([id, instituicao_id])
 * @@schema("modules")
 * }
 * model tabela_arredondamento_valor {
 * id                       Int                   @id @default(autoincrement())
 * tabela_arredondamento_id Int
 * nome                     String                @db.VarChar(5)
 * descricao                String?               @db.VarChar(50)
 * valor_minimo             Decimal?              @db.Decimal(5, 3)
 * valor_maximo             Decimal?              @db.Decimal(5, 3)
 * casa_decimal_exata       Int?                  @db.SmallInt
 * acao                     Int?                  @db.SmallInt
 * observacao               String?               @db.VarChar(191)
 * tabela_arredondamento    tabela_arredondamento @relation(fields: [tabela_arredondamento_id], references: [id], onUpdate: Restrict, map: "modules_tabela_arredondamento_valor_tabela_arredondamento_id_fo")
 * @@index([tabela_arredondamento_id], map: "idx_tabela_arredondamento_valor_tabela_id")
 * @@schema("modules")
 * }
 * model tipo_veiculo {
 * cod_tipo_veiculo Int       @id @default(autoincrement())
 * descricao        String?   @db.VarChar(60)
 * veiculo          veiculo[]
 * @@schema("modules")
 * }
 * model transporte_aluno {
 * aluno_id    Int       @id(map: "transporte_aluno_pk")
 * responsavel Int
 * user_id     Int
 * created_at  DateTime  @db.Timestamp(6)
 * updated_at  DateTime? @db.Timestamp(6)
 * @@schema("modules")
 * }
 * model uniforme_aluno {
 * ref_cod_aluno            Int     @id
 * recebeu_uniforme         String? @db.Char(1)
 * quantidade_camiseta      Int?
 * tamanho_camiseta         String? @db.Char(2)
 * quantidade_blusa_jaqueta Int?
 * tamanho_blusa_jaqueta    String? @db.Char(2)
 * quantidade_bermuda       Int?
 * tamanho_bermuda          String? @db.Char(2)
 * quantidade_calca         Int?
 * tamanho_calca            String? @db.Char(2)
 * quantidade_saia          Int?
 * tamanho_saia             String? @db.Char(2)
 * quantidade_calcado       Int?
 * tamanho_calcado          String? @db.Char(2)
 * quantidade_meia          Int?
 * tamanho_meia             String? @db.Char(2)
 * aluno                    aluno   @relation(fields: [ref_cod_aluno], references: [cod_aluno], onUpdate: Restrict, map: "modules_uniforme_aluno_ref_cod_aluno_foreign")
 * @@schema("modules")
 * }
 * model veiculo {
 * cod_veiculo                        Int                             @id @default(autoincrement())
 * descricao                          String                          @db.VarChar(255)
 * placa                              String?                         @db.VarChar(10)
 * renavam                            String                          @db.VarChar(15)
 * chassi                             String?                         @db.VarChar(30)
 * marca                              String?                         @db.VarChar(50)
 * ano_fabricacao                     Int?
 * ano_modelo                         Int?
 * passageiros                        Int
 * malha                              String                          @db.Char(1)
 * ref_cod_tipo_veiculo               Int
 * exclusivo_transporte_escolar       String                          @db.Char(1)
 * adaptado_necessidades_especiais    String                          @db.Char(1)
 * ativo                              String?                         @db.Char(1)
 * descricao_inativo                  String?                         @db.Char(155)
 * ref_cod_empresa_transporte_escolar Int
 * ref_cod_motorista                  Int?
 * observacao                         String?                         @db.VarChar(255)
 * itinerario_transporte_escolar      itinerario_transporte_escolar[]
 * empresa_transporte_escolar         empresa_transporte_escolar      @relation(fields: [ref_cod_empresa_transporte_escolar], references: [cod_empresa_transporte_escolar], onDelete: NoAction, onUpdate: NoAction, map: "modules_veiculo_ref_cod_empresa_transporte_escolar_foreign")
 * tipo_veiculo                       tipo_veiculo                    @relation(fields: [ref_cod_tipo_veiculo], references: [cod_tipo_veiculo], onUpdate: Restrict, map: "modules_veiculo_ref_cod_tipo_veiculo_foreign")
 * @@schema("modules")
 * }
 * model abandono_tipo {
 * cod_abandono_tipo   Int         @id(map: "pk_cod_abandono_tipo") @default(autoincrement())
 * ref_cod_instituicao Int
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int?
 * nome                String      @db.VarChar(255)
 * data_cadastro       DateTime?   @db.Timestamp(6)
 * data_exclusao       DateTime?   @db.Timestamp(6)
 * ativo               Int?
 * instituicao         instituicao @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_abandono_tipo_ref_cod_instituicao_foreign")
 * matricula           matricula[]
 * @@schema("pmieducar")
 * }
 * model acervo {
 * cod_acervo               Int                        @id @default(autoincrement())
 * ref_cod_exemplar_tipo    Int
 * ref_cod_acervo           Int?
 * ref_usuario_exc          Int?
 * ref_usuario_cad          Int
 * ref_cod_acervo_colecao   Int?
 * ref_cod_acervo_idioma    Int
 * ref_cod_acervo_editora   Int
 * titulo                   String                     @db.VarChar(255)
 * sub_titulo               String?                    @db.VarChar(255)
 * cdu                      String?                    @db.VarChar(20)
 * cutter                   String?                    @db.VarChar(20)
 * volume                   Int?
 * num_edicao               Int?
 * ano                      String?                    @db.VarChar(25)
 * num_paginas              Int?
 * data_cadastro            DateTime                   @db.Timestamp(6)
 * data_exclusao            DateTime?                  @db.Timestamp(6)
 * ativo                    Int                        @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca       Int
 * isbn                     String?                    @db.VarChar(255)
 * cdd                      String?                    @db.VarChar(20)
 * estante                  String?                    @db.VarChar(20)
 * dimencao                 String?                    @db.VarChar(255)
 * material_ilustrativo     String?                    @db.VarChar(255)
 * dimencao_ilustrativo     String?                    @db.VarChar(255)
 * local                    String?                    @db.VarChar(255)
 * ref_cod_tipo_autor       Int?
 * tipo_autor               String?                    @db.VarChar(255)
 * acervo_colecao           acervo_colecao?            @relation(fields: [ref_cod_acervo_colecao], references: [cod_acervo_colecao], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_acervo_ref_cod_acervo_colecao_foreign")
 * acervo_editora           acervo_editora             @relation(fields: [ref_cod_acervo_editora], references: [cod_acervo_editora], onUpdate: Restrict, map: "pmieducar_acervo_ref_cod_acervo_editora_foreign")
 * acervo                   acervo?                    @relation("acervoToacervo", fields: [ref_cod_acervo], references: [cod_acervo], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_acervo_ref_cod_acervo_foreign")
 * other_acervo             acervo[]                   @relation("acervoToacervo")
 * acervo_idioma            acervo_idioma              @relation(fields: [ref_cod_acervo_idioma], references: [cod_acervo_idioma], onUpdate: Restrict, map: "pmieducar_acervo_ref_cod_acervo_idioma_foreign")
 * biblioteca               biblioteca                 @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onUpdate: Restrict, map: "pmieducar_acervo_ref_cod_biblioteca_foreign")
 * exemplar_tipo            exemplar_tipo              @relation(fields: [ref_cod_exemplar_tipo], references: [cod_exemplar_tipo], onUpdate: Restrict, map: "pmieducar_acervo_ref_cod_exemplar_tipo_foreign")
 * acervo_acervo_assunto    acervo_acervo_assunto[]
 * acervo_acervo_autor      acervo_acervo_autor[]
 * exemplar                 exemplar[]
 * relacao_categoria_acervo relacao_categoria_acervo[] @ignore
 * @@schema("pmieducar")
 * }
 * model acervo_acervo_assunto {
 * ref_cod_acervo         Int
 * ref_cod_acervo_assunto Int
 * acervo_assunto         acervo_assunto @relation(fields: [ref_cod_acervo_assunto], references: [cod_acervo_assunto], onUpdate: Restrict, map: "pmieducar_acervo_acervo_assunto_ref_cod_acervo_assunto_foreign")
 * acervo                 acervo         @relation(fields: [ref_cod_acervo], references: [cod_acervo], onUpdate: Restrict, map: "pmieducar_acervo_acervo_assunto_ref_cod_acervo_foreign")
 * @@id([ref_cod_acervo, ref_cod_acervo_assunto])
 * @@schema("pmieducar")
 * }
 * model acervo_acervo_autor {
 * ref_cod_acervo_autor Int
 * ref_cod_acervo       Int
 * principal            Int          @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * acervo_autor         acervo_autor @relation(fields: [ref_cod_acervo_autor], references: [cod_acervo_autor], onUpdate: Restrict, map: "pmieducar_acervo_acervo_autor_ref_cod_acervo_autor_foreign")
 * acervo               acervo       @relation(fields: [ref_cod_acervo], references: [cod_acervo], onUpdate: Restrict, map: "pmieducar_acervo_acervo_autor_ref_cod_acervo_foreign")
 * @@id([ref_cod_acervo_autor, ref_cod_acervo])
 * @@schema("pmieducar")
 * }
 * model acervo_assunto {
 * cod_acervo_assunto    Int                     @id @default(autoincrement())
 * ref_usuario_exc       Int?
 * ref_usuario_cad       Int
 * nm_assunto            String                  @db.VarChar(255)
 * descricao             String?
 * data_cadastro         DateTime                @db.Timestamp(6)
 * data_exclusao         DateTime?               @db.Timestamp(6)
 * ativo                 Int                     @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca    Int?
 * acervo_acervo_assunto acervo_acervo_assunto[]
 * biblioteca            biblioteca?             @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_acervo_assunto_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model acervo_autor {
 * cod_acervo_autor    Int                   @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nm_autor            String                @db.VarChar(255)
 * descricao           String?
 * data_cadastro       DateTime              @db.Timestamp(6)
 * data_exclusao       DateTime?             @db.Timestamp(6)
 * ativo               Int                   @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca  Int
 * acervo_acervo_autor acervo_acervo_autor[]
 * biblioteca          biblioteca            @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onUpdate: Restrict, map: "pmieducar_acervo_autor_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model acervo_colecao {
 * cod_acervo_colecao Int         @id @default(autoincrement())
 * ref_usuario_exc    Int?
 * ref_usuario_cad    Int
 * nm_colecao         String      @db.VarChar(255)
 * descricao          String?
 * data_cadastro      DateTime    @db.Timestamp(6)
 * data_exclusao      DateTime?   @db.Timestamp(6)
 * ativo              Int         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca Int?
 * acervo             acervo[]
 * biblioteca         biblioteca? @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_acervo_colecao_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model acervo_editora {
 * cod_acervo_editora Int         @id @default(autoincrement())
 * ref_usuario_cad    Int
 * ref_usuario_exc    Int?
 * ref_idtlog         String?     @db.VarChar(20)
 * ref_sigla_uf       String?     @db.Char(2)
 * nm_editora         String      @db.VarChar(255)
 * cep                Decimal?    @db.Decimal(8, 0)
 * cidade             String?     @db.VarChar(60)
 * bairro             String?     @db.VarChar(60)
 * logradouro         String?     @db.VarChar(255)
 * numero             Decimal?    @db.Decimal(6, 0)
 * telefone           Int?
 * ddd_telefone       Decimal?    @db.Decimal(3, 0)
 * data_cadastro      DateTime    @db.Timestamp(6)
 * data_exclusao      DateTime?   @db.Timestamp(6)
 * ativo              Int         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca Int?
 * acervo             acervo[]
 * biblioteca         biblioteca? @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_acervo_editora_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model acervo_idioma {
 * cod_acervo_idioma  Int         @id @default(autoincrement())
 * ref_usuario_exc    Int?
 * ref_usuario_cad    Int
 * nm_idioma          String      @db.VarChar(255)
 * data_cadastro      DateTime    @db.Timestamp(6)
 * data_exclusao      DateTime?   @db.Timestamp(6)
 * ativo              Int         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca Int?
 * acervo             acervo[]
 * biblioteca         biblioteca? @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_acervo_idioma_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model aluno {
 * cod_aluno                            Int                           @id @default(autoincrement())
 * ref_cod_religiao                     Int?
 * ref_usuario_exc                      Int?
 * ref_usuario_cad                      Int?
 * ref_idpes                            Int?                          @unique(map: "aluno_ref_idpes_un")
 * data_cadastro                        DateTime                      @db.Timestamp(6)
 * data_exclusao                        DateTime?                     @db.Timestamp(6)
 * ativo                                Int                           @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * caminho_foto                         String?                       @db.VarChar(255)
 * analfabeto                           Int?                          @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * nm_pai                               String?                       @db.VarChar(255)
 * nm_mae                               String?                       @db.VarChar(255)
 * tipo_responsavel                     String?                       @db.Char(1)
 * aluno_estado_id                      String?                       @db.VarChar(25)
 * justificativa_falta_documentacao     Int?                          @db.SmallInt
 * url_laudo_medico                     Json?                         @db.Json
 * codigo_sistema                       String?                       @db.VarChar(30)
 * veiculo_transporte_escolar           Int[]
 * autorizado_um                        String?                       @db.VarChar(150)
 * parentesco_um                        String?                       @db.VarChar(150)
 * autorizado_dois                      String?                       @db.VarChar(150)
 * parentesco_dois                      String?                       @db.VarChar(150)
 * autorizado_tres                      String?                       @db.VarChar(150)
 * parentesco_tres                      String?                       @db.VarChar(150)
 * autorizado_quatro                    String?                       @db.VarChar(150)
 * parentesco_quatro                    String?                       @db.VarChar(150)
 * autorizado_cinco                     String?                       @db.VarChar(150)
 * parentesco_cinco                     String?                       @db.VarChar(150)
 * url_documento                        Json?                         @db.Json
 * recebe_escolarizacao_em_outro_espaco Int                           @default(1) @db.SmallInt
 * recursos_prova_inep                  Int[]
 * updated_at                           DateTime?                     @default(now()) @db.Timestamp(6)
 * emancipado                           Boolean                       @default(false)
 * uniforme_aluno                       uniforme_aluno?
 * fisica                               fisica?                       @relation(fields: [ref_idpes], references: [idpes], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_aluno_ref_idpes_foreign")
 * aluno_aluno_beneficio                aluno_aluno_beneficio[]
 * aluno_historico_altura_peso          aluno_historico_altura_peso[] @ignore
 * candidato_reserva_vaga               candidato_reserva_vaga[]
 * distribuicao_uniforme                distribuicao_uniforme[]
 * historico_escolar                    historico_escolar[]
 * projeto_aluno                        projeto_aluno[]
 * reserva_vaga                         reserva_vaga[]
 * @@index([ativo], map: "i_aluno_ativo")
 * @@index([ref_cod_religiao], map: "i_aluno_ref_cod_religiao")
 * @@index([ref_idpes], map: "i_aluno_ref_idpes")
 * @@index([ref_usuario_cad], map: "i_aluno_ref_usuario_cad")
 * @@index([cod_aluno], map: "idx_pmieducar_aluno_cod_aluno")
 * @@schema("pmieducar")
 * }
 * model aluno_aluno_beneficio {
 * aluno_id           Int
 * aluno_beneficio_id Int
 * id                 BigInt          @id @default(autoincrement())
 * aluno_beneficio    aluno_beneficio @relation(fields: [aluno_beneficio_id], references: [cod_aluno_beneficio], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_aluno_aluno_beneficio_aluno_beneficio_id_foreign")
 * aluno              aluno           @relation(fields: [aluno_id], references: [cod_aluno], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_aluno_aluno_beneficio_aluno_id_foreign")
 * @@unique([aluno_id, aluno_beneficio_id], map: "aluno_aluno_beneficio_aluno_id_aluno_beneficio_id_unique")
 * @@schema("pmieducar")
 * }
 * model aluno_beneficio {
 * cod_aluno_beneficio   Int                     @id @default(autoincrement())
 * ref_usuario_exc       Int?
 * ref_usuario_cad       Int
 * nm_beneficio          String                  @db.VarChar(255)
 * desc_beneficio        String?
 * data_cadastro         DateTime                @db.Timestamp(6)
 * data_exclusao         DateTime?               @db.Timestamp(6)
 * ativo                 Int                     @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * aluno_aluno_beneficio aluno_aluno_beneficio[]
 * @@index([ativo], map: "i_aluno_beneficio_ativo")
 * @@index([nm_beneficio], map: "i_aluno_beneficio_nm_beneficio")
 * @@index([ref_usuario_cad], map: "i_aluno_beneficio_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model aluno_excluidos {
 * cod_aluno  Int       @id
 * ref_idpes  Int?
 * created_at DateTime? @db.Timestamp(0)
 * updated_at DateTime? @db.Timestamp(0)
 * deleted_at DateTime? @db.Timestamp(0)
 * @@index([ref_idpes], map: "pmieducar_aluno_excluidos_ref_idpes_index")
 * @@schema("pmieducar")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model aluno_historico_altura_peso {
 * ref_cod_aluno  Int
 * data_historico DateTime @db.Date
 * altura         Decimal  @db.Decimal(12, 2)
 * peso           Decimal  @db.Decimal(12, 2)
 * aluno          aluno    @relation(fields: [ref_cod_aluno], references: [cod_aluno], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_aluno_historico_altura_peso_ref_cod_aluno_foreign")
 * @@ignore
 * @@schema("pmieducar")
 * }
 * model ano_letivo_modulo {
 * ref_ano            Int
 * ref_ref_cod_escola Int
 * sequencial         Int
 * ref_cod_modulo     Int
 * data_inicio        DateTime          @db.Date
 * data_fim           DateTime          @db.Date
 * dias_letivos       Decimal?          @db.Decimal(5, 0)
 * modulo             modulo            @relation(fields: [ref_cod_modulo], references: [cod_modulo], onUpdate: Restrict, map: "pmieducar_ano_letivo_modulo_ref_cod_modulo_foreign")
 * escola_ano_letivo  escola_ano_letivo @relation(fields: [ref_ref_cod_escola, ref_ano], references: [ref_cod_escola, ano], onUpdate: Restrict, map: "pmieducar_ano_letivo_modulo_ref_ref_cod_escola_ref_ano_foreign")
 * @@id([ref_ano, ref_ref_cod_escola, sequencial, ref_cod_modulo])
 * @@schema("pmieducar")
 * }
 * model avaliacao_desempenho {
 * sequencial              Int
 * ref_cod_servidor        Int
 * ref_ref_cod_instituicao Int
 * ref_usuario_exc         Int?
 * ref_usuario_cad         Int
 * descricao               String
 * data_cadastro           DateTime  @db.Timestamp(6)
 * data_exclusao           DateTime? @db.Timestamp(6)
 * ativo                   Int       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * titulo_avaliacao        String    @db.VarChar(255)
 * servidor                servidor  @relation(fields: [ref_cod_servidor, ref_ref_cod_instituicao], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_avaliacao_desempenho_ref_cod_servidor_ref_ref_cod_ins")
 * @@id([sequencial, ref_cod_servidor, ref_ref_cod_instituicao])
 * @@schema("pmieducar")
 * }
 * model backup {
 * id          Int       @id @default(autoincrement())
 * caminho     String    @db.VarChar(255)
 * data_backup DateTime? @db.Timestamp(6)
 * @@schema("pmieducar")
 * }
 * model biblioteca {
 * cod_biblioteca                Int                    @id @default(autoincrement())
 * ref_cod_instituicao           Int?
 * ref_cod_escola                Int?
 * nm_biblioteca                 String                 @db.VarChar(255)
 * valor_multa                   Float?
 * max_emprestimo                Int?
 * valor_maximo_multa            Float?
 * data_cadastro                 DateTime               @db.Timestamp(6)
 * data_exclusao                 DateTime?              @db.Timestamp(6)
 * requisita_senha               Int                    @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * ativo                         Int                    @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * dias_espera                   Decimal?               @db.Decimal(2, 0)
 * tombo_automatico              Boolean?               @default(true)
 * bloqueia_emprestimo_em_atraso Boolean?
 * acervo                        acervo[]
 * acervo_assunto                acervo_assunto[]
 * acervo_autor                  acervo_autor[]
 * acervo_colecao                acervo_colecao[]
 * acervo_editora                acervo_editora[]
 * acervo_idioma                 acervo_idioma[]
 * escola                        escola?                @relation(fields: [ref_cod_escola], references: [cod_escola], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_biblioteca_ref_cod_escola_foreign")
 * instituicao                   instituicao?           @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_biblioteca_ref_cod_instituicao_foreign")
 * biblioteca_dia                biblioteca_dia[]
 * biblioteca_feriados           biblioteca_feriados[]
 * biblioteca_usuario            biblioteca_usuario[]
 * cliente_tipo                  cliente_tipo[]
 * cliente_tipo_cliente          cliente_tipo_cliente[]
 * exemplar_tipo                 exemplar_tipo[]
 * fonte                         fonte[]
 * motivo_baixa                  motivo_baixa[]
 * motivo_suspensao              motivo_suspensao[]
 * pagamento_multa               pagamento_multa[]
 * situacao                      situacao[]
 * @@schema("pmieducar")
 * }
 * model biblioteca_dia {
 * ref_cod_biblioteca Int
 * dia                Decimal    @db.Decimal(1, 0)
 * biblioteca         biblioteca @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onUpdate: Restrict, map: "pmieducar_biblioteca_dia_ref_cod_biblioteca_foreign")
 * @@id([ref_cod_biblioteca, dia])
 * @@schema("pmieducar")
 * }
 * model biblioteca_feriados {
 * cod_feriado        Int        @id @default(autoincrement())
 * ref_cod_biblioteca Int
 * nm_feriado         String     @db.VarChar(255)
 * descricao          String?
 * data_cadastro      DateTime   @db.Timestamp(6)
 * data_exclusao      DateTime?  @db.Timestamp(6)
 * ativo              Int        @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * data_feriado       DateTime   @db.Date
 * biblioteca         biblioteca @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onUpdate: Restrict, map: "pmieducar_biblioteca_feriados_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model biblioteca_usuario {
 * ref_cod_biblioteca Int
 * ref_cod_usuario    Int
 * biblioteca         biblioteca @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onUpdate: Restrict, map: "pmieducar_biblioteca_usuario_ref_cod_biblioteca_foreign")
 * @@id([ref_cod_biblioteca, ref_cod_usuario])
 * @@index([ref_cod_biblioteca], map: "fki_biblioteca_usuario_ref_cod_biblioteca_fk")
 * @@schema("pmieducar")
 * }
 * model bloqueio_ano_letivo {
 * ref_cod_instituicao Int
 * ref_ano             Int
 * data_inicio         DateTime    @db.Date
 * data_fim            DateTime    @db.Date
 * instituicao         instituicao @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_bloqueio_ano_letivo_ref_cod_instituicao_foreign")
 * @@id([ref_cod_instituicao, ref_ano], map: "pmieducar_bloqueio_ano_letivo_pkey")
 * @@schema("pmieducar")
 * }
 * model bloqueio_lancamento_faltas_notas {
 * cod_bloqueio   Int      @id(map: "fk_bloqueio_lancamento_faltas_notas") @default(autoincrement())
 * ano            Int
 * ref_cod_escola Int
 * etapa          Int
 * data_inicio    DateTime @db.Date
 * data_fim       DateTime @db.Date
 * escola         escola   @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_bloqueio_lancamento_faltas_notas_ref_cod_escola_forei")
 * @@schema("pmieducar")
 * }
 * model busca_ativa {
 * id                    BigInt    @id @default(autoincrement())
 * ref_cod_matricula     Int
 * data_inicio           DateTime  @db.Date
 * data_fim              DateTime? @db.Date
 * resultado_busca_ativa Int       @default(2) @db.SmallInt
 * observacoes           String?
 * created_at            DateTime? @db.Timestamp(0)
 * updated_at            DateTime? @db.Timestamp(0)
 * deleted_at            DateTime? @db.Timestamp(0)
 * matricula             matricula @relation(fields: [ref_cod_matricula], references: [cod_matricula], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_busca_ativa_ref_cod_matricula_foreign")
 * @@schema("pmieducar")
 * }
 * model calendario_ano_letivo {
 * cod_calendario_ano_letivo Int              @id @default(autoincrement())
 * ref_cod_escola            Int
 * ref_usuario_exc           Int?
 * ref_usuario_cad           Int
 * ano                       Int
 * data_cadastra             DateTime         @db.Timestamp(6)
 * data_exclusao             DateTime?        @db.Timestamp(6)
 * ativo                     Int              @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * escola                    escola           @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_calendario_ano_letivo_ref_cod_escola_foreign")
 * calendario_dia            calendario_dia[]
 * @@index([ano], map: "i_calendario_ano_letivo_ano")
 * @@index([ativo], map: "i_calendario_ano_letivo_ativo")
 * @@index([ref_cod_escola], map: "i_calendario_ano_letivo_ref_cod_escola")
 * @@index([ref_usuario_cad], map: "i_calendario_ano_letivo_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model calendario_anotacao {
 * cod_calendario_anotacao Int                       @id @default(autoincrement())
 * ref_usuario_exc         Int?
 * ref_usuario_cad         Int
 * nm_anotacao             String                    @db.VarChar(255)
 * descricao               String?
 * data_cadastro           DateTime                  @db.Timestamp(6)
 * data_exclusao           DateTime?                 @db.Timestamp(6)
 * ativo                   Int                       @db.SmallInt
 * calendario_dia_anotacao calendario_dia_anotacao[]
 * @@schema("pmieducar")
 * }
 * model calendario_dia {
 * ref_cod_calendario_ano_letivo Int
 * mes                           Int
 * dia                           Int
 * ref_usuario_exc               Int?
 * ref_usuario_cad               Int
 * ref_cod_calendario_dia_motivo Int?
 * data_cadastro                 DateTime                  @db.Timestamp(6)
 * data_exclusao                 DateTime?                 @db.Timestamp(6)
 * ativo                         Int                       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * descricao                     String?
 * calendario_turma              calendario_turma[]
 * calendario_ano_letivo         calendario_ano_letivo     @relation(fields: [ref_cod_calendario_ano_letivo], references: [cod_calendario_ano_letivo], onUpdate: Restrict, map: "pmieducar_calendario_dia_ref_cod_calendario_ano_letivo_foreign")
 * calendario_dia_motivo         calendario_dia_motivo?    @relation(fields: [ref_cod_calendario_dia_motivo], references: [cod_calendario_dia_motivo], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_calendario_dia_ref_cod_calendario_dia_motivo_foreign")
 * calendario_dia_anotacao       calendario_dia_anotacao[]
 * @@id([ref_cod_calendario_ano_letivo, mes, dia])
 * @@index([ativo], map: "i_calendario_dia_ativo")
 * @@index([dia], map: "i_calendario_dia_dia")
 * @@index([mes], map: "i_calendario_dia_mes")
 * @@index([ref_cod_calendario_dia_motivo], map: "i_calendario_dia_ref_cod_calendario_dia_motivo")
 * @@index([ref_usuario_cad], map: "i_calendario_dia_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model calendario_dia_anotacao {
 * ref_dia                           Int
 * ref_mes                           Int
 * ref_ref_cod_calendario_ano_letivo Int
 * ref_cod_calendario_anotacao       Int
 * calendario_anotacao               calendario_anotacao @relation(fields: [ref_cod_calendario_anotacao], references: [cod_calendario_anotacao], onUpdate: Restrict, map: "pmieducar_calendario_dia_anotacao_ref_cod_calendario_anotacao_f")
 * calendario_dia                    calendario_dia      @relation(fields: [ref_ref_cod_calendario_ano_letivo, ref_mes, ref_dia], references: [ref_cod_calendario_ano_letivo, mes, dia], onUpdate: Restrict, map: "pmieducar_calendario_dia_anotacao_ref_ref_cod_calendario_ano_le")
 * @@id([ref_dia, ref_mes, ref_ref_cod_calendario_ano_letivo, ref_cod_calendario_anotacao])
 * @@schema("pmieducar")
 * }
 * model calendario_dia_motivo {
 * cod_calendario_dia_motivo Int              @id @default(autoincrement())
 * ref_cod_escola            Int
 * ref_usuario_exc           Int?
 * ref_usuario_cad           Int
 * sigla                     String           @db.VarChar(15)
 * descricao                 String?
 * tipo                      String           @db.Char(1)
 * data_cadastro             DateTime         @db.Timestamp(6)
 * data_exclusao             DateTime?        @db.Timestamp(6)
 * ativo                     Int              @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * nm_motivo                 String           @db.VarChar(255)
 * calendario_dia            calendario_dia[]
 * escola                    escola           @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_calendario_dia_motivo_ref_cod_escola_foreign")
 * @@index([ativo], map: "i_calendario_dia_motivo_ativo")
 * @@index([ref_cod_escola], map: "i_calendario_dia_motivo_ref_cod_escola")
 * @@index([ref_usuario_cad], map: "i_calendario_dia_motivo_ref_usuario_cad")
 * @@index([sigla], map: "i_calendario_dia_motivo_sigla")
 * @@index([tipo], map: "i_calendario_dia_motivo_tipo")
 * @@schema("pmieducar")
 * }
 * model candidato_reserva_vaga {
 * cod_candidato_reserva_vaga Int          @id(map: "cod_candidato_reserva_vaga_pkey") @default(autoincrement())
 * ano_letivo                 Int
 * data_solicitacao           DateTime     @db.Date
 * ref_cod_aluno              Int
 * ref_cod_serie              Int
 * ref_cod_turno              Int?
 * ref_cod_pessoa_cad         Int
 * data_cad                   DateTime     @default(now()) @db.Timestamp(6)
 * data_update                DateTime     @default(now()) @db.Timestamp(6)
 * ref_cod_matricula          Int?
 * situacao                   String?      @db.Char(1)
 * data_situacao              DateTime?    @db.Date
 * motivo                     String?      @db.VarChar(255)
 * ref_cod_escola             Int?
 * quantidade_membros         Int?         @db.SmallInt
 * mae_fez_pre_natal          Boolean?     @default(false)
 * membros_trabalham          Int?         @db.SmallInt
 * hora_solicitacao           DateTime?    @db.Time(6)
 * historico                  Json?        @db.Json
 * aluno                      aluno        @relation(fields: [ref_cod_aluno], references: [cod_aluno], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_candidato_reserva_vaga_ref_cod_aluno_foreign")
 * escola                     escola?      @relation(fields: [ref_cod_escola], references: [cod_escola], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_candidato_reserva_vaga_ref_cod_escola_foreign")
 * pessoa                     pessoa       @relation(fields: [ref_cod_pessoa_cad], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_candidato_reserva_vaga_ref_cod_pessoa_cad_foreign")
 * serie                      serie        @relation(fields: [ref_cod_serie], references: [cod_serie], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_candidato_reserva_vaga_ref_cod_serie_foreign")
 * turma_turno                turma_turno? @relation(fields: [ref_cod_turno], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_candidato_reserva_vaga_ref_cod_turno_foreign")
 * @@schema("pmieducar")
 * }
 * model categoria_nivel {
 * cod_categoria_nivel Int       @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nm_categoria_nivel  String    @db.VarChar(100)
 * data_cadastro       DateTime  @db.Timestamp(6)
 * data_exclusao       DateTime? @db.Timestamp(6)
 * ativo               Boolean   @default(true)
 * nivel               nivel[]
 * @@schema("pmieducar")
 * }
 * model categoria_obra {
 * id                       Int                        @id @default(autoincrement())
 * descricao                String                     @db.VarChar(100)
 * observacoes              String?                    @db.VarChar(300)
 * relacao_categoria_acervo relacao_categoria_acervo[] @ignore
 * @@schema("pmieducar")
 * }
 * model cliente {
 * cod_cliente          Int                    @id @default(autoincrement())
 * ref_usuario_exc      Int?
 * ref_usuario_cad      Int
 * ref_idpes            Int
 * login                Int?                   @unique(map: "cliente_login_ukey")
 * senha                String?                @db.VarChar(255)
 * data_cadastro        DateTime               @db.Timestamp(6)
 * data_exclusao        DateTime?              @db.Timestamp(6)
 * ativo                Int                    @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * observacoes          String?
 * fisica               fisica                 @relation(fields: [ref_idpes], references: [idpes], onUpdate: Restrict, map: "pmieducar_cliente_ref_idpes_foreign")
 * cliente_suspensao    cliente_suspensao[]
 * cliente_tipo_cliente cliente_tipo_cliente[]
 * exemplar_emprestimo  exemplar_emprestimo[]
 * pagamento_multa      pagamento_multa[]
 * reservas             reservas[]
 * @@schema("pmieducar")
 * }
 * model cliente_suspensao {
 * sequencial               Int
 * ref_cod_cliente          Int
 * ref_cod_motivo_suspensao Int
 * ref_usuario_libera       Int?
 * ref_usuario_suspende     Int
 * dias                     Int
 * data_suspensao           DateTime         @db.Timestamp(6)
 * data_liberacao           DateTime?        @db.Timestamp(6)
 * cliente                  cliente          @relation(fields: [ref_cod_cliente], references: [cod_cliente], onUpdate: Restrict, map: "pmieducar_cliente_suspensao_ref_cod_cliente_foreign")
 * motivo_suspensao         motivo_suspensao @relation(fields: [ref_cod_motivo_suspensao], references: [cod_motivo_suspensao], onUpdate: Restrict, map: "pmieducar_cliente_suspensao_ref_cod_motivo_suspensao_foreign")
 * @@id([sequencial, ref_cod_cliente, ref_cod_motivo_suspensao])
 * @@schema("pmieducar")
 * }
 * model cliente_tipo {
 * cod_cliente_tipo           Int                          @id @default(autoincrement())
 * ref_cod_biblioteca         Int
 * ref_usuario_exc            Int?
 * ref_usuario_cad            Int
 * nm_tipo                    String                       @db.VarChar(255)
 * descricao                  String?
 * data_cadastro              DateTime                     @db.Timestamp(6)
 * data_exclusao              DateTime?                    @db.Timestamp(6)
 * ativo                      Int                          @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * biblioteca                 biblioteca                   @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onUpdate: Restrict, map: "pmieducar_cliente_tipo_ref_cod_biblioteca_foreign")
 * cliente_tipo_cliente       cliente_tipo_cliente[]
 * cliente_tipo_exemplar_tipo cliente_tipo_exemplar_tipo[]
 * @@schema("pmieducar")
 * }
 * model cliente_tipo_cliente {
 * ref_cod_cliente_tipo Int
 * ref_cod_cliente      Int
 * data_cadastro        DateTime     @db.Timestamp(6)
 * data_exclusao        DateTime?    @db.Timestamp(6)
 * ref_usuario_cad      Int
 * ref_usuario_exc      Int?
 * ativo                Int?         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca   Int?
 * biblioteca           biblioteca?  @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_cliente_tipo_cliente_ref_cod_biblioteca_foreign")
 * cliente              cliente      @relation(fields: [ref_cod_cliente], references: [cod_cliente], onUpdate: Restrict, map: "pmieducar_cliente_tipo_cliente_ref_cod_cliente_foreign")
 * cliente_tipo         cliente_tipo @relation(fields: [ref_cod_cliente_tipo], references: [cod_cliente_tipo], onUpdate: Restrict, map: "pmieducar_cliente_tipo_cliente_ref_cod_cliente_tipo_foreign")
 * @@id([ref_cod_cliente_tipo, ref_cod_cliente], map: "cliente_tipo_cliente_pk")
 * @@schema("pmieducar")
 * }
 * model cliente_tipo_exemplar_tipo {
 * ref_cod_cliente_tipo  Int
 * ref_cod_exemplar_tipo Int
 * dias_emprestimo       Decimal?      @db.Decimal(3, 0)
 * cliente_tipo          cliente_tipo  @relation(fields: [ref_cod_cliente_tipo], references: [cod_cliente_tipo], onUpdate: Restrict, map: "pmieducar_cliente_tipo_exemplar_tipo_ref_cod_cliente_tipo_forei")
 * exemplar_tipo         exemplar_tipo @relation(fields: [ref_cod_exemplar_tipo], references: [cod_exemplar_tipo], onUpdate: Restrict, map: "pmieducar_cliente_tipo_exemplar_tipo_ref_cod_exemplar_tipo_fore")
 * @@id([ref_cod_cliente_tipo, ref_cod_exemplar_tipo])
 * @@schema("pmieducar")
 * }
 * model configuracoes_gerais {
 * ref_cod_instituicao                          Int     @id
 * permite_relacionamento_posvendas             Int     @default(1)
 * url_novo_educacao                            String? @db.VarChar(100)
 * mostrar_codigo_inep_aluno                    Int?    @default(1) @db.SmallInt
 * justificativa_falta_documentacao_obrigatorio Int?    @default(1) @db.SmallInt
 * tamanho_min_rede_estadual                    Int?
 * modelo_boletim_professor                     Int?    @default(1)
 * custom_labels                                Json?   @db.Json
 * url_cadastro_usuario                         String? @db.VarChar(255)
 * active_on_ieducar                            Int?    @default(1) @db.SmallInt
 * ieducar_image                                String? @db.VarChar(255)
 * ieducar_entity_name                          String? @db.VarChar(255)
 * ieducar_login_footer                         String? @default("<p>Comunidade i-Educar - <a class=\"light\" href=\"https://forum.ieducar.org/\" target=\"_blank\"> Obter Suporte </a></p>")
 * ieducar_external_footer                      String? @default("<p>Conheça mais sobre o i-Educar, acesse nosso <a href=\"https://ieducar.org/blog/\">blog</a>.</p>")
 * ieducar_internal_footer                      String? @default("<p>Conheça mais sobre o i-Educar, acesse nosso <a href=\"https://ieducar.org/blog/\">blog</a>.</p>")
 * facebook_url                                 String? @default("https://www.facebook.com/portabilis") @db.VarChar(255)
 * twitter_url                                  String? @default("https://twitter.com/portabilis") @db.VarChar(255)
 * linkedin_url                                 String? @default("https://www.linkedin.com/company/portabilis-tecnologia") @db.VarChar(255)
 * ieducar_suspension_message                   String?
 * bloquear_cadastro_aluno                      Boolean @default(false)
 * token_novo_educacao                          String? @db.VarChar(191)
 * situacoes_especificas_atestados              Boolean @default(false)
 * emitir_ato_autorizativo                      Boolean @default(false)
 * emitir_ato_criacao_credenciamento            Boolean @default(false)
 * @@schema("pmieducar")
 * }
 * model curso {
 * cod_curso                    Int                       @id @default(autoincrement())
 * ref_usuario_cad              Int
 * ref_cod_tipo_regime          Int?
 * ref_cod_nivel_ensino         Int
 * ref_cod_tipo_ensino          Int
 * nm_curso                     String                    @db.VarChar(255)
 * sgl_curso                    String                    @db.VarChar(15)
 * qtd_etapas                   Int                       @db.SmallInt
 * carga_horaria                Float
 * ato_poder_publico            String?                   @db.VarChar(255)
 * objetivo_curso               String?
 * publico_alvo                 String?
 * data_cadastro                DateTime                  @db.Timestamp(6)
 * data_exclusao                DateTime?                 @db.Timestamp(6)
 * ativo                        Int                       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_usuario_exc              Int?
 * ref_cod_instituicao          Int
 * padrao_ano_escolar           Int                       @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * hora_falta                   Float                     @default(0.00)
 * multi_seriado                Int?
 * modalidade_curso             Int?
 * updated_at                   DateTime?                 @default(now()) @db.Timestamp(6)
 * importar_curso_pre_matricula Boolean                   @default(false)
 * descricao                    String?                   @db.VarChar(50)
 * etapas_curso_educacenso      etapas_curso_educacenso[]
 * instituicao                  instituicao               @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_curso_ref_cod_instituicao_foreign")
 * nivel_ensino                 nivel_ensino              @relation(fields: [ref_cod_nivel_ensino], references: [cod_nivel_ensino], onUpdate: Restrict, map: "pmieducar_curso_ref_cod_nivel_ensino_foreign")
 * tipo_ensino                  tipo_ensino               @relation(fields: [ref_cod_tipo_ensino], references: [cod_tipo_ensino], onUpdate: Restrict, map: "pmieducar_curso_ref_cod_tipo_ensino_foreign")
 * tipo_regime                  tipo_regime?              @relation(fields: [ref_cod_tipo_regime], references: [cod_tipo_regime], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_curso_ref_cod_tipo_regime_foreign")
 * escola_curso                 escola_curso[]
 * habilitacao_curso            habilitacao_curso[]
 * matricula                    matricula[]
 * serie                        serie[]
 * serie_vaga                   serie_vaga[]
 * servidor_curso_ministra      servidor_curso_ministra[]
 * turma                        turma[]
 * @@index([ativo], map: "i_curso_ativo")
 * @@index([ato_poder_publico], map: "i_curso_ato_poder_publico")
 * @@index([carga_horaria], map: "i_curso_carga_horaria")
 * @@index([nm_curso], map: "i_curso_nm_curso")
 * @@index([objetivo_curso], map: "i_curso_objetivo_curso")
 * @@index([qtd_etapas], map: "i_curso_qtd_etapas")
 * @@index([ref_cod_nivel_ensino], map: "i_curso_ref_cod_nivel_ensino")
 * @@index([ref_cod_tipo_ensino], map: "i_curso_ref_cod_tipo_ensino")
 * @@index([ref_cod_tipo_regime], map: "i_curso_ref_cod_tipo_regime")
 * @@index([ref_usuario_cad], map: "i_curso_ref_usuario_cad")
 * @@index([sgl_curso], map: "i_curso_sgl_curso")
 * @@index([cod_curso], map: "idx_pmieducar_curso_cod_curso")
 * @@schema("pmieducar")
 * }
 * model disciplina_dependencia {
 * ref_cod_matricula          Int
 * ref_cod_disciplina         Int
 * ref_cod_escola             Int
 * ref_cod_serie              Int
 * observacao                 String?
 * cod_disciplina_dependencia Int                     @id(map: "cod_disciplina_dependencia_pkey")
 * updated_at                 DateTime?               @default(now()) @db.Timestamp(6)
 * matricula                  matricula               @relation(fields: [ref_cod_matricula], references: [cod_matricula], onUpdate: Restrict, map: "pmieducar_disciplina_dependencia_ref_cod_matricula_foreign")
 * escola_serie_disciplina    escola_serie_disciplina @relation(fields: [ref_cod_serie, ref_cod_escola, ref_cod_disciplina], references: [ref_ref_cod_serie, ref_ref_cod_escola, ref_cod_disciplina], onUpdate: Restrict, map: "pmieducar_disciplina_dependencia_ref_cod_serie_ref_cod_escola_r")
 * @@schema("pmieducar")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model disciplina_dependencia_excluidos {
 * cod_disciplina_dependencia Int
 * ref_cod_matricula          Int
 * ref_cod_disciplina         Int
 * ref_cod_escola             Int
 * ref_cod_serie              Int
 * observacao                 String?
 * created_at                 DateTime? @db.Timestamp(0)
 * updated_at                 DateTime? @db.Timestamp(0)
 * deleted_at                 DateTime? @db.Timestamp(0)
 * @@ignore
 * @@schema("pmieducar")
 * }
 * model disciplina_serie {
 * ref_cod_disciplina Int
 * ref_cod_serie      Int
 * ativo              Int   @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * serie              serie @relation(fields: [ref_cod_serie], references: [cod_serie], onUpdate: Restrict, map: "pmieducar_disciplina_serie_ref_cod_serie_foreign")
 * @@id([ref_cod_disciplina, ref_cod_serie])
 * @@schema("pmieducar")
 * }
 * model disciplina_topico {
 * cod_disciplina_topico Int       @id @default(autoincrement())
 * ref_usuario_exc       Int?
 * ref_usuario_cad       Int
 * nm_topico             String    @db.VarChar(255)
 * desc_topico           String?
 * data_cadastro         DateTime  @db.Timestamp(6)
 * data_exclusao         DateTime? @db.Timestamp(6)
 * ativo                 Int       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * @@index([ativo], map: "i_disciplina_topico_ativo")
 * @@index([nm_topico], map: "i_disciplina_topico_nm_topico")
 * @@index([ref_usuario_cad], map: "i_disciplina_topico_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model dispensa_disciplina {
 * ref_cod_matricula     Int
 * ref_cod_disciplina    Int
 * ref_cod_escola        Int
 * ref_cod_serie         Int
 * ref_usuario_exc       Int?
 * ref_usuario_cad       Int
 * ref_cod_tipo_dispensa Int
 * data_cadastro         DateTime         @db.Timestamp(6)
 * data_exclusao         DateTime?        @db.Timestamp(6)
 * ativo                 Int              @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * observacao            String?
 * cod_dispensa          Int              @id(map: "cod_dispensa_pkey") @default(autoincrement())
 * updated_at            DateTime?        @default(now()) @db.Timestamp(6)
 * batch                 Boolean          @default(false)
 * matricula             matricula        @relation(fields: [ref_cod_matricula], references: [cod_matricula], onUpdate: Restrict, map: "pmieducar_dispensa_disciplina_ref_cod_matricula_foreign")
 * tipo_dispensa         tipo_dispensa    @relation(fields: [ref_cod_tipo_dispensa], references: [cod_tipo_dispensa], onUpdate: Restrict, map: "pmieducar_dispensa_disciplina_ref_cod_tipo_dispensa_foreign")
 * dispensa_etapa        dispensa_etapa[] @ignore
 * @@index([ref_cod_matricula], map: "i_dispensa_disciplina_ref_cod_matricula")
 * @@schema("pmieducar")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model dispensa_disciplina_excluidos {
 * cod_dispensa          Int
 * ref_cod_matricula     Int
 * ref_cod_disciplina    Int
 * ref_cod_escola        Int
 * ref_cod_serie         Int
 * ref_usuario_exc       Int?
 * ref_usuario_cad       Int
 * ref_cod_tipo_dispensa Int
 * data_cadastro         DateTime  @db.Timestamp(0)
 * data_exclusao         DateTime? @db.Timestamp(0)
 * ativo                 Int
 * observacao            String?
 * created_at            DateTime? @db.Timestamp(0)
 * updated_at            DateTime? @db.Timestamp(0)
 * deleted_at            DateTime? @db.Timestamp(0)
 * @@index([cod_dispensa], map: "pmieducar_dispensa_disciplina_excluidos_cod_dispensa_index")
 * @@ignore
 * @@schema("pmieducar")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model dispensa_etapa {
 * ref_cod_dispensa    Int?
 * etapa               Int?
 * dispensa_disciplina dispensa_disciplina? @relation(fields: [ref_cod_dispensa], references: [cod_dispensa], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_dispensa_etapa_ref_cod_dispensa_foreign")
 * @@ignore
 * @@schema("pmieducar")
 * }
 * model distribuicao_uniforme {
 * cod_distribuicao_uniforme Int       @id(map: "distribuicao_uniforme_cod_distribuicao_uniforme_pkey") @default(autoincrement())
 * ref_cod_aluno             Int
 * ano                       Int
 * kit_completo              Boolean?
 * agasalho_qtd              Int?      @db.SmallInt
 * camiseta_curta_qtd        Int?      @db.SmallInt
 * camiseta_longa_qtd        Int?      @db.SmallInt
 * meias_qtd                 Int?      @db.SmallInt
 * bermudas_tectels_qtd      Int?      @db.SmallInt
 * bermudas_coton_qtd        Int?      @db.SmallInt
 * tenis_qtd                 Int?      @db.SmallInt
 * data                      DateTime? @db.Date
 * agasalho_tm               String?   @db.VarChar(20)
 * camiseta_curta_tm         String?   @db.VarChar(20)
 * camiseta_longa_tm         String?   @db.VarChar(20)
 * meias_tm                  String?   @db.VarChar(20)
 * bermudas_tectels_tm       String?   @db.VarChar(20)
 * bermudas_coton_tm         String?   @db.VarChar(20)
 * tenis_tm                  String?   @db.VarChar(20)
 * ref_cod_escola            Int?
 * camiseta_infantil_qtd     Int?      @db.SmallInt
 * camiseta_infantil_tm      String?   @db.VarChar(20)
 * calca_jeans_qtd           Int?
 * calca_jeans_tm            String?   @db.VarChar(191)
 * saia_qtd                  Int?      @db.SmallInt
 * saia_tm                   String?   @db.VarChar(20)
 * aluno                     aluno     @relation(fields: [ref_cod_aluno], references: [cod_aluno], onUpdate: Restrict, map: "pmieducar_distribuicao_uniforme_ref_cod_aluno_foreign")
 * escola                    escola?   @relation(fields: [ref_cod_escola], references: [cod_escola], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_distribuicao_uniforme_ref_cod_escola_foreign")
 * @@schema("pmieducar")
 * }
 * model escola {
 * cod_escola                                                     Int                                @id @default(autoincrement())
 * ref_usuario_cad                                                Int
 * ref_usuario_exc                                                Int?
 * ref_cod_instituicao                                            Int
 * ref_cod_escola_rede_ensino                                     Int
 * ref_idpes                                                      Int?
 * sigla                                                          String                             @db.VarChar(20)
 * data_cadastro                                                  DateTime                           @db.Timestamp(6)
 * data_exclusao                                                  DateTime?                          @db.Timestamp(6)
 * ativo                                                          Int                                @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * bloquear_lancamento_diario_anos_letivos_encerrados             Int?
 * situacao_funcionamento                                         Int?                               @default(1)
 * dependencia_administrativa                                     Int?                               @default(3)
 * regulamentacao                                                 Int?                               @default(1)
 * longitude                                                      String?                            @db.VarChar(20)
 * latitude                                                       String?                            @db.VarChar(20)
 * acesso                                                         Int?
 * ref_idpes_gestor                                               Int?
 * cargo_gestor                                                   Int?
 * local_funcionamento                                            Int[]
 * condicao                                                       Int?                               @default(1)
 * codigo_inep_escola_compartilhada                               Int?
 * decreto_criacao                                                String?                            @db.VarChar(50)
 * area_terreno_total                                             String?                            @db.VarChar(10)
 * area_construida                                                String?                            @db.VarChar(10)
 * area_disponivel                                                String?                            @db.VarChar(10)
 * num_pavimentos                                                 Int?
 * tipo_piso                                                      Int?
 * medidor_energia                                                Int?
 * agua_consumida                                                 Int?
 * dependencia_sala_diretoria                                     Int?
 * dependencia_sala_professores                                   Int?
 * dependencia_sala_secretaria                                    Int?
 * dependencia_laboratorio_informatica                            Int?
 * dependencia_laboratorio_ciencias                               Int?
 * dependencia_sala_aee                                           Int?
 * dependencia_quadra_coberta                                     Int?
 * dependencia_quadra_descoberta                                  Int?
 * dependencia_cozinha                                            Int?
 * dependencia_biblioteca                                         Int?
 * dependencia_sala_leitura                                       Int?
 * dependencia_parque_infantil                                    Int?
 * dependencia_bercario                                           Int?
 * dependencia_banheiro_fora                                      Int?
 * dependencia_banheiro_dentro                                    Int?
 * dependencia_banheiro_infantil                                  Int?
 * dependencia_banheiro_deficiente                                Int?
 * dependencia_banheiro_chuveiro                                  Int?
 * dependencia_refeitorio                                         Int?
 * dependencia_dispensa                                           Int?
 * dependencia_aumoxarifado                                       Int?
 * dependencia_auditorio                                          Int?
 * dependencia_patio_coberto                                      Int?
 * dependencia_patio_descoberto                                   Int?
 * dependencia_alojamento_aluno                                   Int?
 * dependencia_alojamento_professor                               Int?
 * dependencia_area_verde                                         Int?
 * dependencia_lavanderia                                         Int?
 * dependencia_unidade_climatizada                                Int?
 * dependencia_quantidade_ambiente_climatizado                    Int?
 * dependencia_nenhuma_relacionada                                Int?
 * dependencia_numero_salas_existente                             Int?
 * dependencia_numero_salas_utilizadas                            Int?
 * porte_quadra_descoberta                                        Int?
 * porte_quadra_coberta                                           Int?
 * tipo_cobertura_patio                                           Int?
 * total_funcionario                                              Int?
 * atendimento_aee                                                Int?                               @default(0)
 * atividade_complementar                                         Int?                               @default(0)
 * fundamental_ciclo                                              Int?
 * localizacao_diferenciada                                       Int?                               @default(7)
 * didatico_nao_utiliza                                           Int?
 * didatico_quilombola                                            Int?
 * didatico_indigena                                              Int?
 * educacao_indigena                                              Int?
 * lingua_ministrada                                              Int?
 * espaco_brasil_aprendizado                                      Int?
 * abre_final_semana                                              Int?
 * codigo_lingua_indigena                                         Int[]
 * proposta_pedagogica                                            Int?
 * televisoes                                                     Int?                               @db.SmallInt
 * videocassetes                                                  Int?                               @db.SmallInt
 * dvds                                                           Int?                               @db.SmallInt
 * antenas_parabolicas                                            Int?                               @db.SmallInt
 * copiadoras                                                     Int?                               @db.SmallInt
 * retroprojetores                                                Int?                               @db.SmallInt
 * impressoras                                                    Int?                               @db.SmallInt
 * aparelhos_de_som                                               Int?                               @db.SmallInt
 * projetores_digitais                                            Int?                               @db.SmallInt
 * faxs                                                           Int?                               @db.SmallInt
 * maquinas_fotograficas                                          Int?                               @db.SmallInt
 * computadores                                                   Int?                               @db.SmallInt
 * computadores_administrativo                                    Int?                               @db.SmallInt
 * computadores_alunos                                            Int?                               @db.SmallInt
 * acesso_internet                                                Int?                               @db.SmallInt
 * ato_criacao                                                    String?                            @db.VarChar(255)
 * dependencia_vias_deficiente                                    Int?                               @db.SmallInt
 * utiliza_regra_diferenciada                                     Boolean?
 * ato_autorizativo                                               String?                            @db.VarChar(255)
 * ref_idpes_secretario_escolar                                   Int?
 * impressoras_multifuncionais                                    Int?                               @db.SmallInt
 * categoria_escola_privada                                       Int?
 * conveniada_com_poder_publico                                   Int?
 * cnpj_mantenedora_principal                                     Decimal?                           @db.Decimal(14, 0)
 * mantenedora_escola_privada                                     Int[]
 * materiais_didaticos_especificos                                Int?
 * abastecimento_agua                                             Int[]
 * abastecimento_energia                                          Int[]
 * esgoto_sanitario                                               Int[]
 * destinacao_lixo                                                Int[]
 * email_gestor                                                   String?                            @db.VarChar(255)
 * zona_localizacao                                               Int?                               @db.SmallInt
 * codigo_inep_escola_compartilhada2                              Int?
 * codigo_inep_escola_compartilhada3                              Int?
 * codigo_inep_escola_compartilhada4                              Int?
 * codigo_inep_escola_compartilhada5                              Int?
 * codigo_inep_escola_compartilhada6                              Int?
 * orgao_vinculado_escola                                         Int[]
 * esfera_administrativa                                          Int?
 * unidade_vinculada_outra_instituicao                            Int?
 * inep_escola_sede                                               Int?
 * codigo_ies                                                     Int?
 * predio_compartilhado_outra_escola                              Int?
 * agua_potavel_consumo                                           Int?
 * tratamento_lixo                                                Int[]
 * salas_gerais                                                   Int[]
 * salas_funcionais                                               Int[]
 * banheiros                                                      Int[]
 * laboratorios                                                   Int[]
 * salas_atividades                                               Int[]
 * dormitorios                                                    Int[]
 * areas_externas                                                 Int[]
 * recursos_acessibilidade                                        Int[]
 * possui_dependencias                                            Int?
 * numero_salas_utilizadas_dentro_predio                          Int?
 * numero_salas_utilizadas_fora_predio                            Int?
 * numero_salas_climatizadas                                      Int?
 * numero_salas_acessibilidade                                    Int?
 * qtd_secretario_escolar                                         Int?
 * qtd_auxiliar_administrativo                                    Int?
 * qtd_apoio_pedagogico                                           Int?
 * qtd_coordenador_turno                                          Int?
 * qtd_tecnicos                                                   Int?
 * qtd_bibliotecarios                                             Int?
 * qtd_segurancas                                                 Int?
 * qtd_auxiliar_servicos_gerais                                   Int?
 * qtd_nutricionistas                                             Int?
 * qtd_profissionais_preparacao                                   Int?
 * qtd_bombeiro                                                   Int?
 * qtd_psicologo                                                  Int?
 * qtd_fonoaudiologo                                              Int?
 * alimentacao_escolar_alunos                                     Int?
 * compartilha_espacos_atividades_integracao                      Int?
 * usa_espacos_equipamentos_atividades_regulares                  Int?
 * equipamentos                                                   Int[]
 * uso_internet                                                   Int[]
 * rede_local                                                     Int[]
 * equipamentos_acesso_internet                                   Int[]
 * quantidade_computadores_alunos_mesa                            Int?
 * quantidade_computadores_alunos_portateis                       Int?
 * quantidade_computadores_alunos_tablets                         Int?
 * lousas_digitais                                                Int?
 * organizacao_ensino                                             Int[]
 * instrumentos_pedagogicos                                       Int[]
 * orgaos_colegiados                                              Int[]
 * exame_selecao_ingresso                                         Int?
 * reserva_vagas_cotas                                            Int[]
 * projeto_politico_pedagogico                                    Int?
 * updated_at                                                     DateTime?                          @default(now()) @db.Timestamp(6)
 * iddis                                                          Int?
 * qtd_vice_diretor                                               Int?
 * qtd_orientador_comunitario                                     Int?
 * poder_publico_parceria_convenio                                Int[]                              @db.SmallInt
 * formas_contratacao_adm_publica_e_outras_instituicoes           Int[]                              @db.SmallInt
 * nao_ha_funcionarios_para_funcoes                               Boolean                            @default(false)
 * qtd_matriculas_atividade_complementar                          Int?
 * qtd_atendimento_educacional_especializado                      Int?
 * qtd_ensino_regular_creche_par                                  Int?
 * qtd_ensino_regular_creche_int                                  Int?
 * qtd_ensino_regular_pre_escola_par                              Int?
 * qtd_ensino_regular_pre_escola_int                              Int?
 * qtd_ensino_regular_ensino_fund_anos_iniciais_par               Int?
 * qtd_ensino_regular_ensino_fund_anos_iniciais_int               Int?
 * qtd_ensino_regular_ensino_fund_anos_finais_par                 Int?
 * qtd_ensino_regular_ensino_fund_anos_finais_int                 Int?
 * qtd_ensino_regular_ensino_med_anos_iniciais_par                Int?
 * qtd_ensino_regular_ensino_med_anos_iniciais_int                Int?
 * qtd_edu_especial_classe_especial_par                           Int?
 * qtd_edu_especial_classe_especial_int                           Int?
 * qtd_edu_eja_ensino_fund                                        Int?
 * qtd_edu_eja_ensino_med                                         Int?
 * qtd_edu_prof_quali_prof_inte_edu_eja_no_ensino_fund_par        Int?
 * qtd_edu_prof_quali_prof_inte_edu_eja_no_ensino_fund_int        Int?
 * qtd_edu_prof_quali_prof_tec_inte_edu_eja_nivel_med_par         Int?
 * qtd_edu_prof_quali_prof_tec_inte_edu_eja_nivel_med_int         Int?
 * qtd_edu_prof_quali_prof_tec_conc_edu_eja_nivel_med_par         Int?
 * qtd_edu_prof_quali_prof_tec_conc_edu_eja_nivel_med_int         Int?
 * qtd_edu_prof_quali_prof_tec_conc_inter_edu_eja_nivel_med_par   Int?
 * qtd_edu_prof_quali_prof_tec_conc_inter_edu_eja_nivel_med_int   Int?
 * qtd_edu_prof_quali_prof_tec_inte_ensino_med_par                Int?
 * qtd_edu_prof_quali_prof_tecinte_ensino_med_int                 Int?
 * qtd_edu_prof_quali_prof_tec_conc_ensino_med_par                Int?
 * qtd_edu_prof_quali_prof_tec_conc_ensino_med_int                Int?
 * qtd_edu_prof_quali_prof_tec_conc_inter_ensino_med_par          Int?
 * qtd_edu_prof_quali_prof_tec_conc_inter_ensino_med_int          Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_inte_edu_eja_nivel_med_par Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_inte_edu_eja_nivel_med_int Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_conc_edu_eja_nivel_med_par Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_conc_edu_eja_nivel_med_int Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_conc_inter_edu_eja_med_par Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_conc_inter_edu_eja_med_int Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_inte_ensino_med_par        Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_inte_ensino_med_int        Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_conc_ensino_med_par        Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_subsequente_ensino_med     Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_conc_ensino_med_int        Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_conc_inter_ensino_med_par  Int?
 * qtd_edu_prof_edu_prof_tec_nivel_med_conc_inter_ensino_med_int  Int?
 * educacenso_cod_escola                                          educacenso_cod_escola[]
 * biblioteca                                                     biblioteca[]
 * bloqueio_lancamento_faltas_notas                               bloqueio_lancamento_faltas_notas[]
 * calendario_ano_letivo                                          calendario_ano_letivo[]
 * calendario_dia_motivo                                          calendario_dia_motivo[]
 * candidato_reserva_vaga                                         candidato_reserva_vaga[]
 * distribuicao_uniforme                                          distribuicao_uniforme[]
 * educacenso_ies                                                 educacenso_ies?                    @relation(fields: [codigo_ies], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_escola_codigo_ies_foreign")
 * escola_rede_ensino                                             escola_rede_ensino                 @relation(fields: [ref_cod_escola_rede_ensino], references: [cod_escola_rede_ensino], onUpdate: Restrict, map: "pmieducar_escola_ref_cod_escola_rede_ensino_foreign")
 * instituicao                                                    instituicao                        @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_escola_ref_cod_instituicao_foreign")
 * juridica                                                       juridica?                          @relation(fields: [ref_idpes], references: [idpes], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_escola_ref_idpes_foreign")
 * pessoa_escola_ref_idpes_gestorTopessoa                         pessoa?                            @relation("escola_ref_idpes_gestorTopessoa", fields: [ref_idpes_gestor], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_escola_ref_idpes_gestor_foreign")
 * pessoa_escola_ref_idpes_secretario_escolarTopessoa             pessoa?                            @relation("escola_ref_idpes_secretario_escolarTopessoa", fields: [ref_idpes_secretario_escolar], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_escola_ref_idpes_secretario_escolar_foreign")
 * escola_ano_letivo                                              escola_ano_letivo[]
 * escola_curso                                                   escola_curso[]
 * escola_serie                                                   escola_serie[]
 * escola_usuario                                                 escola_usuario[]
 * falta_atraso                                                   falta_atraso[]
 * falta_atraso_compensado                                        falta_atraso_compensado[]
 * historico_escolar                                              historico_escolar[]
 * infra_comodo_funcao                                            infra_comodo_funcao[]
 * infra_predio                                                   infra_predio[]
 * matricula                                                      matricula[]
 * serie_vaga                                                     serie_vaga[]
 * servidor_alocacao                                              servidor_alocacao[]
 * school_managers                                                school_managers[]
 * @@index([ativo], map: "i_escola_ativo")
 * @@index([ref_cod_escola_rede_ensino], map: "i_escola_ref_cod_escola_rede_ensino")
 * @@index([ref_cod_instituicao], map: "i_escola_ref_cod_instituicao")
 * @@index([ref_idpes], map: "i_escola_ref_idpes")
 * @@index([ref_usuario_cad], map: "i_escola_ref_usuario_cad")
 * @@index([sigla], map: "i_escola_sigla")
 * @@schema("pmieducar")
 * }
 * model escola_ano_letivo {
 * ref_cod_escola    Int
 * ano               Int
 * ref_usuario_cad   Int
 * ref_usuario_exc   Int?
 * andamento         Int                 @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * data_cadastro     DateTime            @db.Timestamp(6)
 * data_exclusao     DateTime?           @db.Timestamp(6)
 * ativo             Int                 @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * turmas_por_ano    Int?                @db.SmallInt
 * ano_letivo_modulo ano_letivo_modulo[]
 * escola            escola              @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_escola_ano_letivo_ref_cod_escola_foreign")
 * @@id([ref_cod_escola, ano])
 * @@schema("pmieducar")
 * }
 * model escola_complemento {
 * ref_cod_escola  Int       @id
 * ref_usuario_exc Int?
 * ref_usuario_cad Int
 * cep             Decimal   @db.Decimal(8, 0)
 * numero          Decimal?  @db.Decimal(10, 0)
 * complemento     String?   @db.VarChar(50)
 * email           String?   @db.VarChar(50)
 * nm_escola       String    @db.VarChar(255)
 * municipio       String    @db.VarChar(60)
 * bairro          String    @db.VarChar(40)
 * logradouro      String    @db.VarChar(150)
 * ddd_telefone    Decimal?  @db.Decimal(2, 0)
 * telefone        Decimal?  @db.Decimal(11, 0)
 * ddd_fax         Decimal?  @db.Decimal(2, 0)
 * fax             Decimal?  @db.Decimal(11, 0)
 * data_cadastro   DateTime  @db.Timestamp(6)
 * data_exclusao   DateTime? @db.Timestamp(6)
 * ativo           Int       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * @@index([ativo], map: "i_escola_complemento_ativo")
 * @@index([bairro], map: "i_escola_complemento_bairro")
 * @@index([cep], map: "i_escola_complemento_cep")
 * @@index([complemento], map: "i_escola_complemento_complemento")
 * @@index([email], map: "i_escola_complemento_email")
 * @@index([logradouro], map: "i_escola_complemento_logradouro")
 * @@index([municipio], map: "i_escola_complemento_municipio")
 * @@index([nm_escola], map: "i_escola_complemento_nm_escola")
 * @@index([numero], map: "i_escola_complemento_numero")
 * @@index([ref_usuario_cad], map: "i_escola_complemento_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model escola_curso {
 * ref_cod_escola  Int
 * ref_cod_curso   Int
 * ref_usuario_exc Int?
 * ref_usuario_cad Int
 * data_cadastro   DateTime  @db.Timestamp(6)
 * data_exclusao   DateTime? @db.Timestamp(6)
 * ativo           Int       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * autorizacao     String?   @db.VarChar(255)
 * anos_letivos    Int[]     @default([]) @db.SmallInt
 * updated_at      DateTime? @default(now()) @db.Timestamp(6)
 * curso           curso     @relation(fields: [ref_cod_curso], references: [cod_curso], onUpdate: Restrict, map: "pmieducar_escola_curso_ref_cod_curso_foreign")
 * escola          escola    @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_escola_curso_ref_cod_escola_foreign")
 * @@id([ref_cod_escola, ref_cod_curso])
 * @@index([ativo], map: "i_escola_curso_ativo")
 * @@index([ref_usuario_cad], map: "i_escola_curso_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model escola_localizacao {
 * cod_escola_localizacao Int         @id @default(autoincrement())
 * ref_usuario_exc        Int?
 * ref_usuario_cad        Int
 * nm_localizacao         String      @db.VarChar(255)
 * data_cadastro          DateTime    @db.Timestamp(6)
 * data_exclusao          DateTime?   @db.Timestamp(6)
 * ativo                  Int         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao    Int
 * instituicao            instituicao @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_escola_localizacao_ref_cod_instituicao_foreign")
 * @@index([ativo], map: "i_escola_localizacao_ativo")
 * @@index([nm_localizacao], map: "i_escola_localizacao_nm_localizacao")
 * @@index([ref_usuario_cad], map: "i_escola_localizacao_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model escola_rede_ensino {
 * cod_escola_rede_ensino Int         @id @default(autoincrement())
 * ref_usuario_exc        Int?
 * ref_usuario_cad        Int
 * nm_rede                String      @db.VarChar(255)
 * data_cadastro          DateTime    @db.Timestamp(6)
 * data_exclusao          DateTime?   @db.Timestamp(6)
 * ativo                  Int         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao    Int
 * escola                 escola[]
 * instituicao            instituicao @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_escola_rede_ensino_ref_cod_instituicao_foreign")
 * @@index([ativo], map: "i_escola_rede_ensino_ativo")
 * @@index([nm_rede], map: "i_escola_rede_ensino_nm_rede")
 * @@index([ref_usuario_cad], map: "i_escola_rede_ensino_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model escola_serie {
 * ref_cod_escola                                                           Int
 * ref_cod_serie                                                            Int
 * ref_usuario_exc                                                          Int?
 * ref_usuario_cad                                                          Int
 * hora_inicial                                                             DateTime?                 @db.Time(6)
 * hora_final                                                               DateTime?                 @db.Time(6)
 * data_cadastro                                                            DateTime                  @db.Timestamp(6)
 * data_exclusao                                                            DateTime?                 @db.Timestamp(6)
 * ativo                                                                    Int                       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * hora_inicio_intervalo                                                    DateTime?                 @db.Time(6)
 * hora_fim_intervalo                                                       DateTime?                 @db.Time(6)
 * bloquear_enturmacao_sem_vagas                                            Int?
 * bloquear_cadastro_turma_para_serie_com_vagas                             Int?
 * anos_letivos                                                             Int[]                     @default([]) @db.SmallInt
 * updated_at                                                               DateTime?                 @default(now()) @db.Timestamp(6)
 * escola                                                                   escola                    @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_escola_serie_ref_cod_escola_foreign")
 * serie                                                                    serie                     @relation(fields: [ref_cod_serie], references: [cod_serie], onUpdate: Restrict, map: "pmieducar_escola_serie_ref_cod_serie_foreign")
 * escola_serie_disciplina                                                  escola_serie_disciplina[]
 * reserva_vaga                                                             reserva_vaga[]
 * turma_turma_ref_ref_cod_escola_ref_ref_cod_serieToescola_serie           turma[]                   @relation("turma_ref_ref_cod_escola_ref_ref_cod_serieToescola_serie")
 * turma_turma_ref_ref_cod_serie_mult_ref_ref_cod_escola_multToescola_serie turma[]                   @relation("turma_ref_ref_cod_serie_mult_ref_ref_cod_escola_multToescola_serie")
 * turma_serie                                                              turma_serie[]
 * @@id([ref_cod_escola, ref_cod_serie])
 * @@unique([ref_cod_serie, ref_cod_escola])
 * @@index([ativo], map: "i_escola_serie_ensino_ativo")
 * @@index([hora_final], map: "i_escola_serie_hora_final")
 * @@index([hora_inicial], map: "i_escola_serie_hora_inicial")
 * @@index([ref_usuario_cad], map: "i_escola_serie_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model escola_serie_disciplina {
 * id                          Int                           @id @default(autoincrement())
 * ref_ref_cod_serie           Int
 * ref_ref_cod_escola          Int
 * ref_cod_disciplina          Int
 * ativo                       Int                           @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * carga_horaria               Decimal?                      @db.Decimal(7, 3)
 * etapas_especificas          Int?                          @db.SmallInt
 * etapas_utilizadas           String?                       @db.VarChar
 * updated_at                  DateTime                      @default(now()) @db.Timestamp(6)
 * anos_letivos                Int[]                         @default([]) @db.SmallInt
 * disciplina_dependencia      disciplina_dependencia[]
 * componente_curricular       componente_curricular         @relation(fields: [ref_cod_disciplina], references: [id], onUpdate: Restrict, map: "pmieducar_escola_serie_disciplina_ref_cod_disciplina_foreign")
 * escola_serie                escola_serie                  @relation(fields: [ref_ref_cod_escola, ref_ref_cod_serie], references: [ref_cod_escola, ref_cod_serie], onUpdate: Restrict, map: "pmieducar_escola_serie_disciplina_ref_ref_cod_escola_ref_ref_co")
 * falta_aluno                 pmieducar_falta_aluno[]
 * matricula_excessao          matricula_excessao[]
 * nota_aluno                  pmieducar_nota_aluno[]
 * quadro_horario_horarios_aux quadro_horario_horarios_aux[]
 * @@unique([ref_ref_cod_serie, ref_ref_cod_escola, ref_cod_disciplina], map: "pmieducar_escola_serie_disciplina_ref_ref_cod_serie_ref_ref_cod")
 * @@index([ref_ref_cod_serie], map: "idx_pmieducar_escola_serie_disciplina_ref_ref_cod_serie")
 * @@schema("pmieducar")
 * }
 * model escola_serie_disciplina_excluidos {
 * id                 Int       @id @default(autoincrement())
 * ref_ref_cod_serie  Int
 * ref_ref_cod_escola Int
 * ref_cod_disciplina Int
 * ativo              Int
 * carga_horaria      Int?
 * etapas_especificas Int?
 * etapas_utilizadas  String?   @db.VarChar(191)
 * created_at         DateTime? @db.Timestamp(0)
 * updated_at         DateTime? @db.Timestamp(0)
 * deleted_at         DateTime? @db.Timestamp(0)
 * anos_letivos       Int[]     @default([]) @db.SmallInt
 * @@schema("pmieducar")
 * }
 * model escola_usuario {
 * id              Int     @id @default(autoincrement())
 * ref_cod_usuario Int
 * ref_cod_escola  Int
 * escola_atual    Int?
 * escola          escola  @relation(fields: [ref_cod_escola], references: [cod_escola], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_escola_usuario_ref_cod_escola_foreign")
 * usuario         usuario @relation(fields: [ref_cod_usuario], references: [cod_usuario], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_escola_usuario_ref_cod_usuario_foreign")
 * @@schema("pmieducar")
 * }
 * model exemplar {
 * cod_exemplar         Int                   @id @default(autoincrement())
 * ref_cod_fonte        Int
 * ref_cod_motivo_baixa Int?
 * ref_cod_acervo       Int
 * ref_cod_situacao     Int
 * ref_usuario_exc      Int?
 * ref_usuario_cad      Int
 * permite_emprestimo   Int                   @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * preco                Float
 * data_cadastro        DateTime              @db.Timestamp(6)
 * data_exclusao        DateTime?             @db.Timestamp(6)
 * ativo                Int                   @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * data_aquisicao       DateTime?             @db.Timestamp(6)
 * tombo                Int?
 * sequencial           Int?
 * data_baixa_exemplar  DateTime?             @db.Date
 * acervo               acervo                @relation(fields: [ref_cod_acervo], references: [cod_acervo], onUpdate: Restrict, map: "pmieducar_exemplar_ref_cod_acervo_foreign")
 * fonte                fonte                 @relation(fields: [ref_cod_fonte], references: [cod_fonte], onUpdate: Restrict, map: "pmieducar_exemplar_ref_cod_fonte_foreign")
 * motivo_baixa         motivo_baixa?         @relation(fields: [ref_cod_motivo_baixa], references: [cod_motivo_baixa], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_exemplar_ref_cod_motivo_baixa_foreign")
 * situacao             situacao              @relation(fields: [ref_cod_situacao], references: [cod_situacao], onUpdate: Restrict, map: "pmieducar_exemplar_ref_cod_situacao_foreign")
 * exemplar_emprestimo  exemplar_emprestimo[]
 * reservas             reservas[]
 * @@index([tombo])
 * @@schema("pmieducar")
 * }
 * model exemplar_emprestimo {
 * cod_emprestimo        Int       @id @default(autoincrement())
 * ref_usuario_devolucao Int?
 * ref_usuario_cad       Int
 * ref_cod_cliente       Int
 * ref_cod_exemplar      Int
 * data_retirada         DateTime  @db.Timestamp(6)
 * data_devolucao        DateTime? @db.Timestamp(6)
 * valor_multa           Float?
 * cliente               cliente   @relation(fields: [ref_cod_cliente], references: [cod_cliente], onUpdate: Restrict, map: "pmieducar_exemplar_emprestimo_ref_cod_cliente_foreign")
 * exemplar              exemplar  @relation(fields: [ref_cod_exemplar], references: [cod_exemplar], onUpdate: Restrict, map: "pmieducar_exemplar_emprestimo_ref_cod_exemplar_foreign")
 * @@schema("pmieducar")
 * }
 * model exemplar_tipo {
 * cod_exemplar_tipo          Int                          @id @default(autoincrement())
 * ref_cod_biblioteca         Int
 * ref_usuario_exc            Int?
 * ref_usuario_cad            Int
 * nm_tipo                    String                       @db.VarChar(255)
 * descricao                  String?
 * data_cadastro              DateTime                     @db.Timestamp(6)
 * data_exclusao              DateTime?                    @db.Timestamp(6)
 * ativo                      Int                          @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * acervo                     acervo[]
 * cliente_tipo_exemplar_tipo cliente_tipo_exemplar_tipo[]
 * biblioteca                 biblioteca                   @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onUpdate: Restrict, map: "pmieducar_exemplar_tipo_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model pmieducar_falta_aluno {
 * cod_falta_aluno          Int                      @id @default(autoincrement())
 * ref_cod_disciplina       Int?
 * ref_cod_escola           Int?
 * ref_cod_serie            Int?
 * ref_cod_matricula        Int
 * ref_usuario_exc          Int?
 * ref_usuario_cad          Int
 * faltas                   Int
 * data_cadastro            DateTime                 @db.Timestamp(6)
 * data_exclusao            DateTime?                @db.Timestamp(6)
 * ativo                    Int                      @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * modulo                   Int                      @db.SmallInt
 * ref_cod_curso_disciplina Int?
 * escola_serie_disciplina  escola_serie_disciplina? @relation(fields: [ref_cod_serie, ref_cod_escola, ref_cod_disciplina], references: [ref_ref_cod_serie, ref_ref_cod_escola, ref_cod_disciplina], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_falta_aluno_ref_cod_serie_ref_cod_escola_ref_cod_disc")
 * @@map("falta_aluno")
 * @@schema("pmieducar")
 * }
 * model falta_atraso {
 * cod_falta_atraso        Int              @id @default(autoincrement())
 * ref_cod_escola          Int
 * ref_ref_cod_instituicao Int
 * ref_usuario_exc         Int?
 * ref_usuario_cad         Int
 * ref_cod_servidor        Int
 * tipo                    Int              @db.SmallInt
 * data_falta_atraso       DateTime         @db.Timestamp(6)
 * qtd_horas               Int?
 * qtd_min                 Int?
 * justificada             Int              @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * data_cadastro           DateTime         @db.Timestamp(6)
 * data_exclusao           DateTime?        @db.Timestamp(6)
 * ativo                   Int              @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_servidor_funcao Int?
 * escola                  escola           @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_falta_atraso_ref_cod_escola_foreign")
 * servidor_funcao         servidor_funcao? @relation(fields: [ref_cod_servidor_funcao], references: [cod_servidor_funcao], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_falta_atraso_ref_cod_servidor_funcao_foreign")
 * servidor                servidor         @relation(fields: [ref_cod_servidor, ref_ref_cod_instituicao], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_falta_atraso_ref_cod_servidor_ref_ref_cod_instituicao")
 * @@schema("pmieducar")
 * }
 * model falta_atraso_compensado {
 * cod_compensado          Int       @id @default(autoincrement())
 * ref_cod_escola          Int
 * ref_ref_cod_instituicao Int
 * ref_cod_servidor        Int
 * ref_usuario_exc         Int?
 * ref_usuario_cad         Int
 * data_inicio             DateTime  @db.Timestamp(6)
 * data_fim                DateTime  @db.Timestamp(6)
 * data_cadastro           DateTime  @db.Timestamp(6)
 * data_exclusao           DateTime? @db.Timestamp(6)
 * ativo                   Int       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * escola                  escola    @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_falta_atraso_compensado_ref_cod_escola_foreign")
 * servidor                servidor  @relation(fields: [ref_cod_servidor, ref_ref_cod_instituicao], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_falta_atraso_compensado_ref_cod_servidor_ref_ref_cod_")
 * @@schema("pmieducar")
 * }
 * model faltas {
 * ref_cod_matricula Int
 * sequencial        Int       @default(autoincrement())
 * ref_usuario_cad   Int
 * falta             Int
 * data_cadastro     DateTime  @db.Timestamp(6)
 * matricula         matricula @relation(fields: [ref_cod_matricula], references: [cod_matricula], onUpdate: Restrict, map: "pmieducar_faltas_ref_cod_matricula_foreign")
 * @@id([ref_cod_matricula, sequencial])
 * @@schema("pmieducar")
 * }
 * model fonte {
 * cod_fonte          Int         @id @default(autoincrement())
 * ref_usuario_exc    Int?
 * ref_usuario_cad    Int
 * nm_fonte           String      @db.VarChar(255)
 * descricao          String?
 * data_cadastro      DateTime    @db.Timestamp(6)
 * data_exclusao      DateTime?   @db.Timestamp(6)
 * ativo              Int         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca Int?
 * exemplar           exemplar[]
 * biblioteca         biblioteca? @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_fonte_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model funcao {
 * cod_funcao          Int               @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nm_funcao           String            @db.VarChar(255)
 * abreviatura         String            @db.VarChar(30)
 * professor           Int               @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * data_cadastro       DateTime          @db.Timestamp(6)
 * data_exclusao       DateTime?         @db.Timestamp(6)
 * ativo               Int               @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao Int
 * instituicao         instituicao       @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_funcao_ref_cod_instituicao_foreign")
 * servidor_funcao     servidor_funcao[]
 * @@index([abreviatura], map: "i_funcao_abreviatura")
 * @@index([ativo], map: "i_funcao_ativo")
 * @@index([nm_funcao], map: "i_funcao_nm_funcao")
 * @@index([professor], map: "i_funcao_professor")
 * @@index([ref_usuario_cad], map: "i_funcao_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model habilitacao {
 * cod_habilitacao     Int                 @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nm_tipo             String              @db.VarChar(255)
 * descricao           String?
 * data_cadastro       DateTime            @db.Timestamp(6)
 * data_exclusao       DateTime?           @db.Timestamp(6)
 * ativo               Int                 @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao Int
 * instituicao         instituicao         @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_habilitacao_ref_cod_instituicao_foreign")
 * habilitacao_curso   habilitacao_curso[]
 * @@index([ativo], map: "i_habilitacao_ativo")
 * @@index([nm_tipo], map: "i_habilitacao_nm_tipo")
 * @@index([ref_usuario_cad], map: "i_habilitacao_ref_usuario_cad")
 * @@schema("pmieducar")
 * }
 * model habilitacao_curso {
 * ref_cod_habilitacao Int
 * ref_cod_curso       Int
 * curso               curso       @relation(fields: [ref_cod_curso], references: [cod_curso], onUpdate: Restrict, map: "pmieducar_habilitacao_curso_ref_cod_curso_foreign")
 * habilitacao         habilitacao @relation(fields: [ref_cod_habilitacao], references: [cod_habilitacao], onUpdate: Restrict, map: "pmieducar_habilitacao_curso_ref_cod_habilitacao_foreign")
 * @@id([ref_cod_habilitacao, ref_cod_curso])
 * @@schema("pmieducar")
 * }
 * model historico_disciplinas {
 * id                       Int               @id @default(autoincrement())
 * sequencial               Int
 * ref_ref_cod_aluno        Int
 * ref_sequencial           Int
 * nm_disciplina            String
 * nota                     String            @db.VarChar(255)
 * faltas                   Int?
 * import                   Decimal?          @db.Decimal(1, 0)
 * ordenamento              Int?
 * carga_horaria_disciplina Int?
 * dependencia              Boolean?          @default(false)
 * tipo_base                Int               @default(1)
 * historico_escolar        historico_escolar @relation(fields: [ref_ref_cod_aluno, ref_sequencial], references: [ref_cod_aluno, sequencial], onDelete: Cascade, map: "pmieducar_historico_disciplinas_ref_ref_cod_aluno_ref_sequencia")
 * @@unique([sequencial, ref_ref_cod_aluno, ref_sequencial], map: "pmieducar_historico_disciplinas_sequencial_ref_ref_cod_aluno_re")
 * @@index([sequencial, ref_ref_cod_aluno, ref_sequencial], map: "idx_historico_disciplinas_id")
 * @@index([ref_ref_cod_aluno, ref_sequencial], map: "idx_historico_disciplinas_id1")
 * @@schema("pmieducar")
 * }
 * model historico_escolar {
 * id                       Int                     @id @default(autoincrement())
 * ref_cod_aluno            Int
 * sequencial               Int
 * ref_usuario_exc          Int?
 * ref_usuario_cad          Int
 * ano                      Int
 * carga_horaria            Float?
 * dias_letivos             Int?
 * escola                   String                  @db.VarChar(255)
 * escola_cidade            String                  @db.VarChar(255)
 * escola_uf                String?                 @db.VarChar(3)
 * observacao               String?
 * aprovado                 Int                     @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * data_cadastro            DateTime                @db.Timestamp(6)
 * data_exclusao            DateTime?               @db.Timestamp(6)
 * ativo                    Int                     @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * faltas_globalizadas      Int?
 * nm_serie                 String?                 @db.VarChar(255)
 * origem                   Int?                    @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * extra_curricular         Int?                    @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * ref_cod_matricula        Int?
 * ref_cod_instituicao      Int?
 * import                   Decimal?                @db.Decimal(1, 0)
 * frequencia               Decimal?                @default(0.000) @db.Decimal(5, 2)
 * registro                 String?                 @db.VarChar(50)
 * livro                    String?                 @db.VarChar(50)
 * folha                    String?                 @db.VarChar(50)
 * historico_grade_curso_id Int?
 * nm_curso                 String?                 @db.VarChar(255)
 * aceleracao               Int?
 * ref_cod_escola           Int?
 * dependencia              Boolean?
 * posicao                  Int?
 * historico_disciplinas    historico_disciplinas[]
 * historico_grade_curso    historico_grade_curso?  @relation(fields: [historico_grade_curso_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_historico_escolar_historico_grade_curso_id_foreign")
 * aluno                    aluno                   @relation(fields: [ref_cod_aluno], references: [cod_aluno], onDelete: Cascade, map: "pmieducar_historico_escolar_ref_cod_aluno_foreign")
 * escolaRef                escola?                 @relation(fields: [ref_cod_escola], references: [cod_escola], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_historico_escolar_ref_cod_escola_foreign")
 * @@unique([ref_cod_aluno, sequencial], map: "pmieducar_historico_escolar_ref_cod_aluno_sequencial_unique")
 * @@index([ano])
 * @@index([ativo])
 * @@index([nm_serie])
 * @@index([ref_cod_aluno, ativo], map: "idx_historico_escolar_aluno_ativo")
 * @@index([ref_cod_aluno, sequencial], map: "idx_historico_escolar_id1")
 * @@index([ref_cod_aluno, sequencial, ano], map: "idx_historico_escolar_id2")
 * @@index([ref_cod_aluno, ano], map: "idx_historico_escolar_id3")
 * @@schema("pmieducar")
 * }
 * model historico_grade_curso {
 * id                Int                 @id(map: "historico_grade_curso_pk") @default(autoincrement())
 * descricao_etapa   String              @db.VarChar(20)
 * created_at        DateTime            @db.Timestamp(6)
 * updated_at        DateTime?           @db.Timestamp(6)
 * quantidade_etapas Int?
 * ativo             Int                 @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * historico_escolar historico_escolar[]
 * @@schema("pmieducar")
 * }
 * model infra_comodo_funcao {
 * cod_infra_comodo_funcao Int                   @id @default(autoincrement())
 * ref_usuario_exc         Int?
 * ref_usuario_cad         Int
 * nm_funcao               String                @db.VarChar(255)
 * desc_funcao             String?
 * data_cadastro           DateTime              @db.Timestamp(6)
 * data_exclusao           DateTime?             @db.Timestamp(6)
 * ativo                   Int                   @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_escola          Int?
 * escola                  escola?               @relation(fields: [ref_cod_escola], references: [cod_escola], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_infra_comodo_funcao_ref_cod_escola_foreign")
 * infra_predio_comodo     infra_predio_comodo[]
 * @@schema("pmieducar")
 * }
 * model infra_predio {
 * cod_infra_predio    Int                   @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * ref_cod_escola      Int
 * nm_predio           String                @db.VarChar(255)
 * desc_predio         String?
 * endereco            String
 * data_cadastro       DateTime              @db.Timestamp(6)
 * data_exclusao       DateTime?             @db.Timestamp(6)
 * ativo               Int                   @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * escola              escola                @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_infra_predio_ref_cod_escola_foreign")
 * infra_predio_comodo infra_predio_comodo[]
 * @@schema("pmieducar")
 * }
 * model infra_predio_comodo {
 * cod_infra_predio_comodo     Int                 @id @default(autoincrement())
 * ref_usuario_exc             Int?
 * ref_usuario_cad             Int
 * ref_cod_infra_comodo_funcao Int
 * ref_cod_infra_predio        Int
 * nm_comodo                   String              @db.VarChar(255)
 * desc_comodo                 String?
 * area                        Float
 * data_cadastro               DateTime            @db.Timestamp(6)
 * data_exclusao               DateTime?           @db.Timestamp(6)
 * ativo                       Int                 @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * infra_comodo_funcao         infra_comodo_funcao @relation(fields: [ref_cod_infra_comodo_funcao], references: [cod_infra_comodo_funcao], onUpdate: Restrict, map: "pmieducar_infra_predio_comodo_ref_cod_infra_comodo_funcao_forei")
 * infra_predio                infra_predio        @relation(fields: [ref_cod_infra_predio], references: [cod_infra_predio], onUpdate: Restrict, map: "pmieducar_infra_predio_comodo_ref_cod_infra_predio_foreign")
 * turma                       turma[]
 * @@schema("pmieducar")
 * }
 * model instituicao {
 * cod_instituicao                                Int                           @id @default(autoincrement())
 * ref_usuario_exc                                Int?
 * ref_usuario_cad                                Int
 * ref_idtlog                                     String                        @db.VarChar(20)
 * ref_sigla_uf                                   String                        @db.Char(2)
 * cep                                            Decimal                       @db.Decimal(8, 0)
 * cidade                                         String                        @db.VarChar(60)
 * bairro                                         String                        @db.VarChar(40)
 * logradouro                                     String                        @db.VarChar(255)
 * numero                                         Decimal?                      @db.Decimal(6, 0)
 * complemento                                    String?                       @db.VarChar(50)
 * nm_responsavel                                 String                        @db.VarChar(255)
 * ddd_telefone                                   Decimal?                      @db.Decimal(2, 0)
 * telefone                                       Decimal?                      @db.Decimal(11, 0)
 * data_cadastro                                  DateTime                      @db.Timestamp(6)
 * data_exclusao                                  DateTime?                     @db.Timestamp(6)
 * ativo                                          Int                           @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * nm_instituicao                                 String                        @db.VarChar(255)
 * data_base_remanejamento                        DateTime?                     @db.Date
 * data_base_transferencia                        DateTime?                     @db.Date
 * controlar_espaco_utilizacao_aluno              Int?                          @db.SmallInt
 * percentagem_maxima_ocupacao_salas              Decimal?                      @db.Decimal(5, 2)
 * quantidade_alunos_metro_quadrado               Int?
 * exigir_vinculo_turma_professor                 Int?                          @db.SmallInt
 * gerar_historico_transferencia                  Boolean?
 * matricula_apenas_bairro_escola                 Boolean?
 * restringir_historico_escolar                   Boolean?
 * coordenador_transporte                         String?                       @db.VarChar
 * restringir_multiplas_enturmacoes               Boolean?
 * permissao_filtro_abandono_transferencia        Boolean?
 * data_base_matricula                            DateTime?                     @db.Date
 * multiplas_reserva_vaga                         Boolean                       @default(false)
 * reserva_integral_somente_com_renda             Boolean                       @default(false)
 * data_expiracao_reserva_vaga                    DateTime?                     @db.Date
 * data_fechamento                                DateTime?                     @db.Date
 * componente_curricular_turma                    Boolean?
 * reprova_dependencia_ano_concluinte             Boolean?
 * controlar_posicao_historicos                   Boolean?
 * data_educacenso                                DateTime?                     @db.Date
 * bloqueia_matricula_serie_nao_seguinte          Boolean?
 * permitir_carga_horaria                         Boolean?                      @default(false)
 * exigir_dados_socioeconomicos                   Boolean?                      @default(false)
 * altera_atestado_para_declaracao                Boolean?
 * orgao_regional                                 String?                       @db.VarChar(5)
 * obrigar_campos_censo                           Boolean?
 * obrigar_documento_pessoa                       Boolean?                      @default(false)
 * exigir_lancamentos_anteriores                  Boolean?                      @default(false)
 * exibir_apenas_professores_alocados             Boolean?                      @default(false)
 * bloquear_vinculo_professor_sem_alocacao_escola Boolean                       @default(false)
 * permitir_matricula_fora_periodo_letivo         Boolean                       @default(false)
 * ordenar_alunos_sequencial_enturmacao           Boolean                       @default(false)
 * obrigar_telefone_pessoa                        Boolean?
 * abandono_tipo                                  abandono_tipo[]
 * biblioteca                                     biblioteca[]
 * bloqueio_ano_letivo                            bloqueio_ano_letivo[]
 * curso                                          curso[]
 * escola                                         escola[]
 * escola_localizacao                             escola_localizacao[]
 * escola_rede_ensino                             escola_rede_ensino[]
 * funcao                                         funcao[]
 * habilitacao                                    habilitacao[]
 * instituicao_documentacao                       instituicao_documentacao[]
 * material_didatico                              material_didatico[]
 * material_tipo                                  material_tipo[]
 * modulo                                         modulo[]
 * motivo_afastamento                             motivo_afastamento[]
 * nivel_ensino                                   nivel_ensino[]
 * serie_vaga                                     serie_vaga[]
 * servidor                                       servidor[]
 * tipo_avaliacao                                 tipo_avaliacao[]
 * tipo_dispensa                                  tipo_dispensa[]
 * tipo_ensino                                    tipo_ensino[]
 * tipo_ocorrencia_disciplinar                    tipo_ocorrencia_disciplinar[]
 * tipo_regime                                    tipo_regime[]
 * transferencia_tipo                             transferencia_tipo[]
 * turma                                          turma[]
 * usuario                                        usuario[]
 * @@schema("pmieducar")
 * }
 * model instituicao_documentacao {
 * id               Int         @id @default(autoincrement())
 * instituicao_id   Int
 * titulo_documento String      @db.VarChar(100)
 * url_documento    String      @db.VarChar(255)
 * ref_usuario_cad  Int         @default(0)
 * ref_cod_escola   Int?
 * instituicao      instituicao @relation(fields: [instituicao_id], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_instituicao_documentacao_instituicao_id_foreign")
 * @@schema("pmieducar")
 * }
 * model material_didatico {
 * cod_material_didatico Int           @id @default(autoincrement())
 * ref_cod_instituicao   Int
 * ref_usuario_exc       Int?
 * ref_usuario_cad       Int
 * ref_cod_material_tipo Int
 * nm_material           String        @db.VarChar(255)
 * desc_material         String?
 * custo_unitario        Float
 * data_cadastro         DateTime      @db.Timestamp(6)
 * data_exclusao         DateTime?     @db.Timestamp(6)
 * ativo                 Int           @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * instituicao           instituicao   @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_material_didatico_ref_cod_instituicao_foreign")
 * material_tipo         material_tipo @relation(fields: [ref_cod_material_tipo], references: [cod_material_tipo], onUpdate: Restrict, map: "pmieducar_material_didatico_ref_cod_material_tipo_foreign")
 * @@schema("pmieducar")
 * }
 * model material_tipo {
 * cod_material_tipo   Int                 @id @default(autoincrement())
 * ref_usuario_cad     Int
 * ref_usuario_exc     Int?
 * nm_tipo             String              @db.VarChar(255)
 * desc_tipo           String?
 * data_cadastro       DateTime            @db.Timestamp(6)
 * data_exclusao       DateTime?           @db.Timestamp(6)
 * ativo               Int                 @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao Int
 * material_didatico   material_didatico[]
 * instituicao         instituicao         @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_material_tipo_ref_cod_instituicao_foreign")
 * @@schema("pmieducar")
 * }
 * model matricula {
 * cod_matricula                                                                            Int                                @id @default(autoincrement())
 * ref_cod_reserva_vaga                                                                     Int?
 * ref_ref_cod_escola                                                                       Int?
 * ref_ref_cod_serie                                                                        Int?
 * ref_usuario_exc                                                                          Int?
 * ref_usuario_cad                                                                          Int
 * ref_cod_aluno                                                                            Int
 * aprovado                                                                                 Int                                @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * data_cadastro                                                                            DateTime                           @db.Timestamp(6)
 * data_exclusao                                                                            DateTime?                          @db.Timestamp(6)
 * ativo                                                                                    Int                                @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ano                                                                                      Int
 * ultima_matricula                                                                         Int                                @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * modulo                                                                                   Int                                @default(1) @db.SmallInt
 * descricao_reclassificacao                                                                String?
 * formando                                                                                 Int                                @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * matricula_reclassificacao                                                                Int?                               @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * ref_cod_curso                                                                            Int?
 * matricula_transferencia                                                                  Boolean                            @default(false)
 * semestre                                                                                 Int?                               @db.SmallInt
 * observacao                                                                               String?                            @db.VarChar(300)
 * data_matricula                                                                           DateTime?                          @db.Timestamp(6)
 * data_cancel                                                                              DateTime?                          @db.Timestamp(6)
 * ref_cod_abandono_tipo                                                                    Int?
 * turno_pre_matricula                                                                      Int?                               @db.SmallInt
 * dependencia                                                                              Boolean?                           @default(false)
 * saida_escola                                                                             Boolean?                           @default(false)
 * data_saida_escola                                                                        DateTime?                          @db.Date
 * updated_at                                                                               DateTime?                          @default(now()) @db.Timestamp(6)
 * observacoes                                                                              String?
 * modalidade_ensino                                                                        Int                                @default(3) @db.SmallInt
 * bloquear_troca_de_situacao                                                               Boolean                            @default(false)
 * nota_exame                                                                               nota_exame[]                       @ignore
 * busca_ativa                                                                              busca_ativa[]
 * disciplina_dependencia                                                                   disciplina_dependencia[]
 * dispensa_disciplina                                                                      dispensa_disciplina[]
 * faltas                                                                                   faltas[]
 * abandono_tipo                                                                            abandono_tipo?                     @relation(fields: [ref_cod_abandono_tipo], references: [cod_abandono_tipo], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_matricula_ref_cod_abandono_tipo_foreign")
 * curso                                                                                    curso?                             @relation(fields: [ref_cod_curso], references: [cod_curso], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_matricula_ref_cod_curso_foreign")
 * reserva_vaga                                                                             reserva_vaga?                      @relation(fields: [ref_cod_reserva_vaga], references: [cod_reserva_vaga], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_matricula_ref_cod_reserva_vaga_foreign")
 * escola                                                                                   escola?                            @relation(fields: [ref_ref_cod_escola], references: [cod_escola], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_matricula_ref_ref_cod_escola_foreign")
 * serie                                                                                    serie?                             @relation(fields: [ref_ref_cod_serie], references: [cod_serie], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_matricula_ref_ref_cod_serie_foreign")
 * matricula_ocorrencia_disciplinar                                                         matricula_ocorrencia_disciplinar[]
 * matricula_turma                                                                          matricula_turma[]
 * nota_aluno                                                                               pmieducar_nota_aluno[]
 * transferencia_solicitacao_transferencia_solicitacao_ref_cod_matricula_entradaTomatricula transferencia_solicitacao[]        @relation("transferencia_solicitacao_ref_cod_matricula_entradaTomatricula")
 * transferencia_solicitacao_transferencia_solicitacao_ref_cod_matricula_saidaTomatricula   transferencia_solicitacao[]        @relation("transferencia_solicitacao_ref_cod_matricula_saidaTomatricula")
 * @@index([ref_ref_cod_escola, ref_cod_aluno], map: "idx_matricula_cod_escola_aluno")
 * @@index([cod_matricula], map: "idx_pmieducar_matricula_cod_matricula")
 * @@index([ref_cod_aluno], map: "idx_pmieducar_matricula_ref_cod_aluno")
 * @@index([ref_ref_cod_escola], map: "idx_pmieducar_matricula_ref_ref_cod_escola")
 * @@index([ano])
 * @@index([ativo])
 * @@schema("pmieducar")
 * }
 * model matricula_excessao {
 * cod_aluno_excessao      Int                     @id(map: "matricula_excessao_pk") @default(autoincrement())
 * ref_cod_matricula       Int
 * ref_cod_turma           Int
 * ref_sequencial          Int
 * ref_cod_serie           Int
 * ref_cod_escola          Int
 * ref_cod_disciplina      Int
 * reprovado_faltas        Boolean
 * precisa_exame           Boolean
 * permite_exame           Boolean?
 * escola_serie_disciplina escola_serie_disciplina @relation(fields: [ref_cod_serie, ref_cod_escola, ref_cod_disciplina], references: [ref_ref_cod_serie, ref_ref_cod_escola, ref_cod_disciplina], onUpdate: Restrict, map: "pmieducar_matricula_excessao_ref_cod_serie_ref_cod_escola_ref_c")
 * @@schema("pmieducar")
 * }
 * model matricula_ocorrencia_disciplinar {
 * ref_cod_matricula                   Int
 * ref_cod_tipo_ocorrencia_disciplinar Int
 * sequencial                          Int
 * ref_usuario_exc                     Int?
 * ref_usuario_cad                     Int
 * observacao                          String
 * data_cadastro                       DateTime                    @db.Timestamp(6)
 * data_exclusao                       DateTime?                   @db.Timestamp(6)
 * ativo                               Int                         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * visivel_pais                        Int?
 * cod_ocorrencia_disciplinar          Int                         @default(autoincrement())
 * updated_at                          DateTime?                   @default(now()) @db.Timestamp(6)
 * matricula                           matricula                   @relation(fields: [ref_cod_matricula], references: [cod_matricula], onUpdate: Restrict, map: "pmieducar_matricula_ocorrencia_disciplinar_ref_cod_matricula_fo")
 * tipo_ocorrencia_disciplinar         tipo_ocorrencia_disciplinar @relation(fields: [ref_cod_tipo_ocorrencia_disciplinar], references: [cod_tipo_ocorrencia_disciplinar], onUpdate: Restrict, map: "pmieducar_matricula_ocorrencia_disciplinar_ref_cod_tipo_ocorren")
 * @@id([ref_cod_matricula, ref_cod_tipo_ocorrencia_disciplinar, sequencial])
 * @@schema("pmieducar")
 * }
 * model matricula_turma {
 * ref_cod_matricula       Int
 * ref_cod_turma           Int
 * sequencial              Int
 * ref_usuario_exc         Int?
 * ref_usuario_cad         Int
 * data_cadastro           DateTime  @db.Timestamp(6)
 * data_exclusao           DateTime? @db.Timestamp(6)
 * ativo                   Int       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * data_enturmacao         DateTime  @db.Date
 * sequencial_fechamento   Int       @default(0)
 * transferido             Boolean?
 * remanejado              Boolean?
 * reclassificado          Boolean?
 * abandono                Boolean?
 * falecido                Boolean?
 * etapa_educacenso        Int?      @db.SmallInt
 * turma_unificada         Int?      @db.SmallInt
 * turno_id                Int?
 * id                      Int       @id @default(autoincrement())
 * tipo_atendimento        Int[]
 * updated_at              DateTime? @default(now()) @db.Timestamp(0)
 * remanejado_mesma_turma  Boolean   @default(false)
 * tipo_itinerario         Int[]     @db.SmallInt
 * composicao_itinerario   Int[]     @db.SmallInt
 * curso_itinerario        Int?
 * itinerario_concomitante Boolean?
 * matricula               matricula @relation(fields: [ref_cod_matricula], references: [cod_matricula], onUpdate: Restrict, map: "pmieducar_matricula_turma_ref_cod_matricula_foreign")
 * turma                   turma     @relation(fields: [ref_cod_turma], references: [cod_turma], onUpdate: Restrict, map: "pmieducar_matricula_turma_ref_cod_turma_foreign")
 * @@unique([ref_cod_matricula, ref_cod_turma, sequencial], map: "matricula_turma_uindex_matricula_turma_sequencial")
 * @@index([ref_cod_turma], map: "i_matricula_turma_ref_cod_turma")
 * @@schema("pmieducar")
 * }
 * model matricula_turma_excluidos {
 * id                    Int       @id @default(autoincrement())
 * ref_cod_matricula     Int
 * ref_cod_turma         Int
 * sequencial            Int
 * ref_usuario_exc       Int?
 * ref_usuario_cad       Int
 * data_cadastro         DateTime  @db.Timestamp(0)
 * data_exclusao         DateTime? @db.Timestamp(0)
 * ativo                 Int       @db.SmallInt
 * data_enturmacao       DateTime  @db.Date
 * sequencial_fechamento Int
 * transferido           Boolean?
 * remanejado            Boolean?
 * reclassificado        Boolean?
 * abandono              Boolean?
 * falecido              Boolean?
 * etapa_educacenso      Int?      @db.SmallInt
 * turma_unificada       Int?      @db.SmallInt
 * turno_id              Int?
 * updated_at            DateTime? @db.Timestamp(0)
 * deleted_at            DateTime? @db.Timestamp(0)
 * @@schema("pmieducar")
 * }
 * model menu_tipo_usuario {
 * ref_cod_tipo_usuario Int
 * menu_id              Int
 * cadastra             Int          @default(0) @db.SmallInt
 * visualiza            Int          @default(0) @db.SmallInt
 * exclui               Int          @default(0) @db.SmallInt
 * menus                menus        @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_menu_tipo_usuario_menu_id_foreign")
 * tipo_usuario         tipo_usuario @relation(fields: [ref_cod_tipo_usuario], references: [cod_tipo_usuario], onUpdate: Restrict, map: "pmieducar_menu_tipo_usuario_ref_cod_tipo_usuario_foreign")
 * @@id([ref_cod_tipo_usuario, menu_id])
 * @@schema("pmieducar")
 * }
 * model modulo {
 * cod_modulo          Int                 @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nm_tipo             String              @db.VarChar(255)
 * descricao           String?
 * num_meses           Decimal?            @db.Decimal(2, 0)
 * num_semanas         Int?
 * data_cadastro       DateTime            @db.Timestamp(6)
 * data_exclusao       DateTime?           @db.Timestamp(6)
 * ativo               Int                 @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao Int
 * num_etapas          Decimal             @default(0) @db.Decimal(2, 0)
 * ano_letivo_modulo   ano_letivo_modulo[]
 * instituicao         instituicao         @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_modulo_ref_cod_instituicao_foreign")
 * turma_modulo        turma_modulo[]
 * @@schema("pmieducar")
 * }
 * model motivo_afastamento {
 * cod_motivo_afastamento Int                    @id @default(autoincrement())
 * ref_usuario_exc        Int?
 * ref_usuario_cad        Int
 * nm_motivo              String                 @db.VarChar(255)
 * descricao              String?
 * data_cadastro          DateTime               @db.Timestamp(6)
 * data_exclusao          DateTime?              @db.Timestamp(6)
 * ativo                  Int                    @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao    Int
 * instituicao            instituicao            @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_motivo_afastamento_ref_cod_instituicao_foreign")
 * servidor_afastamento   servidor_afastamento[]
 * @@schema("pmieducar")
 * }
 * model motivo_baixa {
 * cod_motivo_baixa   Int         @id @default(autoincrement())
 * ref_usuario_exc    Int?
 * ref_usuario_cad    Int
 * nm_motivo_baixa    String      @db.VarChar(255)
 * descricao          String?
 * data_cadastro      DateTime    @db.Timestamp(6)
 * data_exclusao      DateTime?   @db.Timestamp(6)
 * ativo              Int         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca Int?
 * exemplar           exemplar[]
 * biblioteca         biblioteca? @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_motivo_baixa_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model motivo_suspensao {
 * cod_motivo_suspensao Int                 @id @default(autoincrement())
 * ref_usuario_exc      Int?
 * ref_usuario_cad      Int
 * nm_motivo            String              @db.VarChar(255)
 * descricao            String?
 * data_cadastro        DateTime            @db.Timestamp(6)
 * data_exclusao        DateTime?           @db.Timestamp(6)
 * ativo                Int                 @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca   Int?
 * cliente_suspensao    cliente_suspensao[]
 * biblioteca           biblioteca?         @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_motivo_suspensao_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model nivel {
 * cod_nivel               Int             @id @default(autoincrement())
 * ref_cod_categoria_nivel Int
 * ref_usuario_exc         Int?
 * ref_usuario_cad         Int
 * ref_cod_nivel_anterior  Int?
 * nm_nivel                String          @db.VarChar(100)
 * salario_base            Float?
 * data_cadastro           DateTime        @db.Timestamp(6)
 * data_exclusao           DateTime?       @db.Timestamp(6)
 * ativo                   Boolean         @default(true)
 * categoria_nivel         categoria_nivel @relation(fields: [ref_cod_categoria_nivel], references: [cod_categoria_nivel], onUpdate: Restrict, map: "pmieducar_nivel_ref_cod_categoria_nivel_foreign")
 * nivel                   nivel?          @relation("nivelTonivel", fields: [ref_cod_nivel_anterior], references: [cod_nivel], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_nivel_ref_cod_nivel_anterior_foreign")
 * other_nivel             nivel[]         @relation("nivelTonivel")
 * subnivel                subnivel[]
 * @@schema("pmieducar")
 * }
 * model nivel_ensino {
 * cod_nivel_ensino    Int         @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nm_nivel            String      @db.VarChar(255)
 * descricao           String?
 * data_cadastro       DateTime    @db.Timestamp(6)
 * data_exclusao       DateTime?   @db.Timestamp(6)
 * ativo               Int         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao Int
 * curso               curso[]
 * instituicao         instituicao @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_nivel_ensino_ref_cod_instituicao_foreign")
 * @@schema("pmieducar")
 * }
 * model pmieducar_nota_aluno {
 * cod_nota_aluno             Int                      @id @default(autoincrement())
 * ref_cod_disciplina         Int?
 * ref_cod_escola             Int?
 * ref_cod_serie              Int?
 * ref_cod_matricula          Int
 * ref_sequencial             Int?
 * ref_ref_cod_tipo_avaliacao Int?
 * ref_usuario_exc            Int?
 * ref_usuario_cad            Int
 * data_cadastro              DateTime                 @db.Timestamp(6)
 * data_exclusao              DateTime?                @db.Timestamp(6)
 * ativo                      Int                      @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * modulo                     Int                      @db.SmallInt
 * ref_cod_curso_disciplina   Int?
 * nota                       Float?
 * matricula                  matricula                @relation(fields: [ref_cod_matricula], references: [cod_matricula], onUpdate: Restrict, map: "pmieducar_nota_aluno_ref_cod_matricula_foreign")
 * escola_serie_disciplina    escola_serie_disciplina? @relation(fields: [ref_cod_serie, ref_cod_escola, ref_cod_disciplina], references: [ref_ref_cod_serie, ref_ref_cod_escola, ref_cod_disciplina], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_nota_aluno_ref_cod_serie_ref_cod_escola_ref_cod_disci")
 * tipo_avaliacao_valores     tipo_avaliacao_valores?  @relation(fields: [ref_ref_cod_tipo_avaliacao, ref_sequencial], references: [ref_cod_tipo_avaliacao, sequencial], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_nota_aluno_ref_ref_cod_tipo_avaliacao_ref_sequencial_")
 * @@index([ref_cod_matricula], map: "i_nota_aluno_ref_cod_matricula")
 * @@map("nota_aluno")
 * @@schema("pmieducar")
 * }
 * model operador {
 * cod_operador        Int                   @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nome                String                @db.VarChar(50)
 * valor               String
 * fim_sentenca        Int                   @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * data_cadastro       DateTime              @db.Timestamp(6)
 * data_exclusao       DateTime?             @db.Timestamp(6)
 * ativo               Int                   @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * serie_pre_requisito serie_pre_requisito[]
 * @@schema("pmieducar")
 * }
 * model pagamento_multa {
 * cod_pagamento_multa Int        @id @default(autoincrement())
 * ref_usuario_cad     Int
 * ref_cod_cliente     Int
 * valor_pago          Float
 * data_cadastro       DateTime   @db.Timestamp(6)
 * ref_cod_biblioteca  Int
 * biblioteca          biblioteca @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onUpdate: Restrict, map: "pmieducar_pagamento_multa_ref_cod_biblioteca_foreign")
 * cliente             cliente    @relation(fields: [ref_cod_cliente], references: [cod_cliente], onUpdate: Restrict, map: "pmieducar_pagamento_multa_ref_cod_cliente_foreign")
 * @@schema("pmieducar")
 * }
 * model pre_requisito {
 * cod_pre_requisito   Int                   @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * schema_             String                @db.VarChar(50)
 * tabela              String                @db.VarChar(50)
 * nome                String                @db.VarChar(50)
 * sql                 String?
 * data_cadastro       DateTime              @db.Timestamp(6)
 * data_exclusao       DateTime?             @db.Timestamp(6)
 * ativo               Int                   @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * serie_pre_requisito serie_pre_requisito[]
 * @@schema("pmieducar")
 * }
 * model projeto {
 * cod_projeto   Int             @id(map: "pmieducar_projeto_cod_projeto") @default(autoincrement())
 * nome          String?         @db.VarChar(50)
 * observacao    String?         @db.VarChar(255)
 * projeto_aluno projeto_aluno[]
 * @@schema("pmieducar")
 * }
 * model projeto_aluno {
 * ref_cod_projeto   Int
 * ref_cod_aluno     Int
 * data_inclusao     DateTime? @db.Date
 * data_desligamento DateTime? @db.Date
 * turno             Int?
 * aluno             aluno     @relation(fields: [ref_cod_aluno], references: [cod_aluno], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_projeto_aluno_ref_cod_aluno_foreign")
 * projeto           projeto   @relation(fields: [ref_cod_projeto], references: [cod_projeto], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_projeto_aluno_ref_cod_projeto_foreign")
 * @@id([ref_cod_projeto, ref_cod_aluno], map: "pmieducar_projeto_aluno_pk")
 * @@schema("pmieducar")
 * }
 * model quadro_horario {
 * cod_quadro_horario          Int                           @id @default(autoincrement())
 * ref_usuario_exc             Int?
 * ref_usuario_cad             Int
 * ref_cod_turma               Int
 * data_cadastro               DateTime                      @db.Timestamp(6)
 * data_exclusao               DateTime?                     @db.Timestamp(6)
 * ativo                       Int                           @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ano                         Int?
 * turma                       turma                         @relation(fields: [ref_cod_turma], references: [cod_turma], onUpdate: Restrict, map: "pmieducar_quadro_horario_ref_cod_turma_foreign")
 * quadro_horario_horarios     quadro_horario_horarios[]
 * quadro_horario_horarios_aux quadro_horario_horarios_aux[]
 * @@index([ref_cod_turma], map: "idx_pmieducar_quadro_horario_ref_cod_turma")
 * @@schema("pmieducar")
 * }
 * model quadro_horario_horarios {
 * ref_cod_quadro_horario                                                                            Int
 * sequencial                                                                                        Int
 * ref_cod_disciplina                                                                                Int
 * ref_cod_escola                                                                                    Int
 * ref_cod_serie                                                                                     Int
 * ref_cod_instituicao_substituto                                                                    Int?
 * ref_cod_instituicao_servidor                                                                      Int
 * ref_servidor_substituto                                                                           Int?
 * ref_servidor                                                                                      Int
 * dia_semana                                                                                        Int
 * hora_inicial                                                                                      DateTime       @db.Time(6)
 * hora_final                                                                                        DateTime       @db.Time(6)
 * data_cadastro                                                                                     DateTime       @db.Timestamp(6)
 * data_exclusao                                                                                     DateTime?      @db.Timestamp(6)
 * ativo                                                                                             Int            @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * quadro_horario                                                                                    quadro_horario @relation(fields: [ref_cod_quadro_horario], references: [cod_quadro_horario], onUpdate: Restrict, map: "pmieducar_quadro_horario_horarios_ref_cod_quadro_horario_foreig")
 * servidor_quadro_horario_horarios_ref_servidor_ref_cod_instituicao_servidorToservidor              servidor       @relation("quadro_horario_horarios_ref_servidor_ref_cod_instituicao_servidorToservidor", fields: [ref_servidor, ref_cod_instituicao_servidor], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_quadro_horario_horarios_ref_servidor_ref_cod_institui")
 * servidor_quadro_horario_horarios_ref_servidor_substituto_ref_cod_instituicao_substitutoToservidor servidor?      @relation("quadro_horario_horarios_ref_servidor_substituto_ref_cod_instituicao_substitutoToservidor", fields: [ref_servidor_substituto, ref_cod_instituicao_substituto], references: [cod_servidor, ref_cod_instituicao], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_quadro_horario_horarios_ref_servidor_substituto_ref_c")
 * @@id([ref_cod_quadro_horario, sequencial])
 * @@index([ref_cod_quadro_horario], map: "idx_pmieducar_quadro_horario_horarios_ref_cod_quadro_horario")
 * @@index([ref_servidor], map: "idx_pmieducar_quadro_horario_horarios_ref_servidor")
 * @@index([ref_servidor, ref_cod_instituicao_servidor, dia_semana, hora_inicial, hora_final, ativo], map: "quadro_horario_horarios_busca_horarios_idx")
 * @@schema("pmieducar")
 * }
 * model quadro_horario_horarios_aux {
 * ref_cod_quadro_horario       Int
 * sequencial                   Int
 * ref_cod_disciplina           Int
 * ref_cod_escola               Int
 * ref_cod_serie                Int
 * ref_cod_instituicao_servidor Int
 * ref_servidor                 Int
 * dia_semana                   Int
 * hora_inicial                 DateTime                @db.Time(6)
 * hora_final                   DateTime                @db.Time(6)
 * identificador                String?                 @db.VarChar(30)
 * data_cadastro                DateTime                @db.Timestamp(6)
 * quadro_horario               quadro_horario          @relation(fields: [ref_cod_quadro_horario], references: [cod_quadro_horario], onUpdate: Restrict, map: "pmieducar_quadro_horario_horarios_aux_ref_cod_quadro_horario_fo")
 * escola_serie_disciplina      escola_serie_disciplina @relation(fields: [ref_cod_serie, ref_cod_escola, ref_cod_disciplina], references: [ref_ref_cod_serie, ref_ref_cod_escola, ref_cod_disciplina], onUpdate: Restrict, map: "pmieducar_quadro_horario_horarios_aux_ref_cod_serie_ref_cod_esc")
 * servidor                     servidor                @relation(fields: [ref_servidor, ref_cod_instituicao_servidor], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_quadro_horario_horarios_aux_ref_servidor_ref_cod_inst")
 * @@id([ref_cod_quadro_horario, sequencial])
 * @@schema("pmieducar")
 * }
 * model quantidade_reserva_externa {
 * ref_cod_instituicao Int
 * ref_cod_escola      Int
 * ref_cod_curso       Int
 * ref_cod_serie       Int
 * ref_turma_turno_id  Int
 * ano                 Int
 * qtd_alunos          Int
 * @@id([ref_cod_instituicao, ref_cod_escola, ref_cod_curso, ref_cod_serie, ref_turma_turno_id, ano])
 * @@schema("pmieducar")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model relacao_categoria_acervo {
 * ref_cod_acervo Int
 * categoria_id   Int
 * categoria_obra categoria_obra @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_relacao_categoria_acervo_categoria_id_foreign")
 * acervo         acervo         @relation(fields: [ref_cod_acervo], references: [cod_acervo], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_relacao_categoria_acervo_ref_cod_acervo_foreign")
 * @@ignore
 * @@schema("pmieducar")
 * }
 * model pmieducar_religiao {
 * cod_religiao    Int       @id @default(autoincrement())
 * ref_usuario_exc Int?
 * ref_usuario_cad Int
 * nm_religiao     String    @db.VarChar(255)
 * data_cadastro   DateTime  @db.Timestamp(6)
 * data_exclusao   DateTime? @db.Timestamp(6)
 * ativo           Int       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * fisica          fisica[]
 * @@map("religiao")
 * @@schema("pmieducar")
 * }
 * model reserva_vaga {
 * cod_reserva_vaga   Int          @id @default(autoincrement())
 * ref_ref_cod_escola Int
 * ref_ref_cod_serie  Int
 * ref_usuario_exc    Int?
 * ref_usuario_cad    Int
 * ref_cod_aluno      Int?
 * data_cadastro      DateTime     @db.Timestamp(6)
 * data_exclusao      DateTime?    @db.Timestamp(6)
 * ativo              Int          @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * nm_aluno           String?      @db.VarChar(255)
 * cpf_responsavel    Decimal?     @db.Decimal(11, 0)
 * matricula          matricula[]
 * aluno              aluno?       @relation(fields: [ref_cod_aluno], references: [cod_aluno], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_reserva_vaga_ref_cod_aluno_foreign")
 * escola_serie       escola_serie @relation(fields: [ref_ref_cod_serie, ref_ref_cod_escola], references: [ref_cod_serie, ref_cod_escola], onUpdate: Restrict, map: "pmieducar_reserva_vaga_ref_ref_cod_serie_ref_ref_cod_escola_for")
 * @@schema("pmieducar")
 * }
 * model reservas {
 * cod_reserva              Int       @id @default(autoincrement())
 * ref_usuario_libera       Int?
 * ref_usuario_cad          Int
 * ref_cod_cliente          Int
 * data_reserva             DateTime? @db.Timestamp(6)
 * data_prevista_disponivel DateTime? @db.Timestamp(6)
 * data_retirada            DateTime? @db.Timestamp(6)
 * ref_cod_exemplar         Int
 * ativo                    Int       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * cliente                  cliente   @relation(fields: [ref_cod_cliente], references: [cod_cliente], onUpdate: Restrict, map: "pmieducar_reservas_ref_cod_cliente_foreign")
 * exemplar                 exemplar  @relation(fields: [ref_cod_exemplar], references: [cod_exemplar], onUpdate: Restrict, map: "pmieducar_reservas_ref_cod_exemplar_foreign")
 * @@schema("pmieducar")
 * }
 * model sequencia_serie {
 * ref_serie_origem                               Int
 * ref_serie_destino                              Int
 * ref_usuario_exc                                Int?
 * ref_usuario_cad                                Int
 * data_cadastro                                  DateTime  @db.Timestamp(6)
 * data_exclusao                                  DateTime? @db.Timestamp(6)
 * ativo                                          Int       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * serie_sequencia_serie_ref_serie_destinoToserie serie     @relation("sequencia_serie_ref_serie_destinoToserie", fields: [ref_serie_destino], references: [cod_serie], onUpdate: Restrict, map: "pmieducar_sequencia_serie_ref_serie_destino_foreign")
 * serie_sequencia_serie_ref_serie_origemToserie  serie     @relation("sequencia_serie_ref_serie_origemToserie", fields: [ref_serie_origem], references: [cod_serie], onUpdate: Restrict, map: "pmieducar_sequencia_serie_ref_serie_origem_foreign")
 * @@id([ref_serie_origem, ref_serie_destino])
 * @@schema("pmieducar")
 * }
 * model serie {
 * cod_serie                                                              Int                         @id @default(autoincrement())
 * ref_usuario_exc                                                        Int?
 * ref_usuario_cad                                                        Int
 * ref_cod_curso                                                          Int
 * nm_serie                                                               String                      @db.VarChar(255)
 * etapa_curso                                                            Int
 * concluinte                                                             Int                         @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * carga_horaria                                                          Float
 * data_cadastro                                                          DateTime                    @db.Timestamp(6)
 * data_exclusao                                                          DateTime?                   @db.Timestamp(6)
 * ativo                                                                  Int                         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * intervalo                                                              Int?
 * idade_inicial                                                          Decimal?                    @db.Decimal(3, 0)
 * idade_final                                                            Decimal?                    @db.Decimal(3, 0)
 * regra_avaliacao_id                                                     Int?
 * observacao_historico                                                   String?
 * dias_letivos                                                           Int?
 * regra_avaliacao_diferenciada_id                                        Int?
 * alerta_faixa_etaria                                                    Boolean?
 * bloquear_matricula_faixa_etaria                                        Boolean?
 * idade_ideal                                                            Int?
 * exigir_inep                                                            Boolean?
 * updated_at                                                             DateTime?                   @default(now()) @db.Timestamp(6)
 * importar_serie_pre_matricula                                           Boolean                     @default(false)
 * descricao                                                              String?                     @db.VarChar(50)
 * config_movimento_geral                                                 config_movimento_geral[]
 * regra_avaliacao_serie_ano                                              regra_avaliacao_serie_ano[]
 * candidato_reserva_vaga                                                 candidato_reserva_vaga[]
 * disciplina_serie                                                       disciplina_serie[]
 * escola_serie                                                           escola_serie[]
 * matricula                                                              matricula[]
 * sequencia_serie_sequencia_serie_ref_serie_destinoToserie               sequencia_serie[]           @relation("sequencia_serie_ref_serie_destinoToserie")
 * sequencia_serie_sequencia_serie_ref_serie_origemToserie                sequencia_serie[]           @relation("sequencia_serie_ref_serie_origemToserie")
 * curso                                                                  curso                       @relation(fields: [ref_cod_curso], references: [cod_curso], onUpdate: Restrict, map: "pmieducar_serie_ref_cod_curso_foreign")
 * regra_avaliacao_serie_regra_avaliacao_diferenciada_idToregra_avaliacao regra_avaliacao?            @relation("serie_regra_avaliacao_diferenciada_idToregra_avaliacao", fields: [regra_avaliacao_diferenciada_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "pmieducar_serie_regra_avaliacao_diferenciada_id_foreign")
 * regra_avaliacao_serie_regra_avaliacao_idToregra_avaliacao              regra_avaliacao?            @relation("serie_regra_avaliacao_idToregra_avaliacao", fields: [regra_avaliacao_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_serie_regra_avaliacao_id_foreign")
 * serie_pre_requisito                                                    serie_pre_requisito[]
 * serie_vaga                                                             serie_vaga[]
 * @@index([cod_serie], map: "idx_pmieducar_serie_cod_serie")
 * @@index([cod_serie, regra_avaliacao_id], map: "idx_serie_cod_regra_avaliacao_id")
 * @@index([regra_avaliacao_id], map: "idx_serie_regra_avaliacao_id")
 * @@schema("pmieducar")
 * }
 * model serie_pre_requisito {
 * ref_cod_pre_requisito Int
 * ref_cod_operador      Int
 * ref_cod_serie         Int
 * valor                 String?       @db.VarChar
 * operador              operador      @relation(fields: [ref_cod_operador], references: [cod_operador], onUpdate: Restrict, map: "pmieducar_serie_pre_requisito_ref_cod_operador_foreign")
 * pre_requisito         pre_requisito @relation(fields: [ref_cod_pre_requisito], references: [cod_pre_requisito], onUpdate: Restrict, map: "pmieducar_serie_pre_requisito_ref_cod_pre_requisito_foreign")
 * serie                 serie         @relation(fields: [ref_cod_serie], references: [cod_serie], onUpdate: Restrict, map: "pmieducar_serie_pre_requisito_ref_cod_serie_foreign")
 * @@id([ref_cod_pre_requisito, ref_cod_operador, ref_cod_serie])
 * @@schema("pmieducar")
 * }
 * model serie_vaga {
 * ano                 Int
 * cod_serie_vaga      Int         @id(map: "cod_serie_vaga_pkey")
 * ref_cod_instituicao Int
 * ref_cod_escola      Int
 * ref_cod_curso       Int
 * ref_cod_serie       Int
 * vagas               Int         @db.SmallInt
 * turno               Int         @default(1) @db.SmallInt
 * curso               curso       @relation(fields: [ref_cod_curso], references: [cod_curso], onUpdate: Restrict, map: "pmieducar_serie_vaga_ref_cod_curso_foreign")
 * escola              escola      @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_serie_vaga_ref_cod_escola_foreign")
 * instituicao         instituicao @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_serie_vaga_ref_cod_instituicao_foreign")
 * serie               serie       @relation(fields: [ref_cod_serie], references: [cod_serie], onUpdate: Restrict, map: "pmieducar_serie_vaga_ref_cod_serie_foreign")
 * @@unique([ano, ref_cod_instituicao, ref_cod_escola, ref_cod_curso, ref_cod_serie, turno], map: "cod_serie_vaga_unique")
 * @@schema("pmieducar")
 * }
 * model servidor {
 * cod_servidor                                                                                                     Int
 * ref_cod_instituicao                                                                                              Int
 * ref_idesco                                                                                                       Decimal?                      @db.Decimal(2, 0)
 * carga_horaria                                                                                                    Float
 * data_cadastro                                                                                                    DateTime                      @db.Timestamp(6)
 * data_exclusao                                                                                                    DateTime?                     @db.Timestamp(6)
 * ativo                                                                                                            Int                           @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_subnivel                                                                                                 Int?
 * situacao_curso_superior_1                                                                                        Int?                          @db.SmallInt
 * formacao_complementacao_pedagogica_1                                                                             Int?                          @db.SmallInt
 * codigo_curso_superior_1                                                                                          Int?
 * ano_inicio_curso_superior_1                                                                                      Decimal?                      @db.Decimal(4, 0)
 * ano_conclusao_curso_superior_1                                                                                   Decimal?                      @db.Decimal(4, 0)
 * instituicao_curso_superior_1                                                                                     Int?                          @db.SmallInt
 * situacao_curso_superior_2                                                                                        Int?                          @db.SmallInt
 * formacao_complementacao_pedagogica_2                                                                             Int?                          @db.SmallInt
 * codigo_curso_superior_2                                                                                          Int?
 * ano_inicio_curso_superior_2                                                                                      Decimal?                      @db.Decimal(4, 0)
 * ano_conclusao_curso_superior_2                                                                                   Decimal?                      @db.Decimal(4, 0)
 * instituicao_curso_superior_2                                                                                     Int?                          @db.SmallInt
 * situacao_curso_superior_3                                                                                        Int?                          @db.SmallInt
 * formacao_complementacao_pedagogica_3                                                                             Int?                          @db.SmallInt
 * codigo_curso_superior_3                                                                                          Int?
 * ano_inicio_curso_superior_3                                                                                      Decimal?                      @db.Decimal(4, 0)
 * ano_conclusao_curso_superior_3                                                                                   Decimal?                      @db.Decimal(4, 0)
 * instituicao_curso_superior_3                                                                                     Int?                          @db.SmallInt
 * multi_seriado                                                                                                    Boolean?
 * pos_graduacao                                                                                                    Int[]
 * curso_formacao_continuada                                                                                        Int[]
 * tipo_ensino_medio_cursado                                                                                        Int?
 * updated_at                                                                                                       DateTime?                     @default(now()) @db.Timestamp(6)
 * professor_turma                                                                                                  professor_turma[]
 * avaliacao_desempenho                                                                                             avaliacao_desempenho[]
 * falta_atraso                                                                                                     falta_atraso[]
 * falta_atraso_compensado                                                                                          falta_atraso_compensado[]
 * quadro_horario_horarios_quadro_horario_horarios_ref_servidor_ref_cod_instituicao_servidorToservidor              quadro_horario_horarios[]     @relation("quadro_horario_horarios_ref_servidor_ref_cod_instituicao_servidorToservidor")
 * quadro_horario_horarios_quadro_horario_horarios_ref_servidor_substituto_ref_cod_instituicao_substitutoToservidor quadro_horario_horarios[]     @relation("quadro_horario_horarios_ref_servidor_substituto_ref_cod_instituicao_substitutoToservidor")
 * quadro_horario_horarios_aux                                                                                      quadro_horario_horarios_aux[]
 * pessoa                                                                                                           pessoa                        @relation(fields: [cod_servidor], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_servidor_cod_servidor_foreign")
 * educacenso_curso_superior_servidor_codigo_curso_superior_1Toeducacenso_curso_superior                            educacenso_curso_superior?    @relation("servidor_codigo_curso_superior_1Toeducacenso_curso_superior", fields: [codigo_curso_superior_1], references: [id], onUpdate: NoAction, map: "pmieducar_servidor_codigo_curso_superior_1_foreign")
 * educacenso_curso_superior_servidor_codigo_curso_superior_2Toeducacenso_curso_superior                            educacenso_curso_superior?    @relation("servidor_codigo_curso_superior_2Toeducacenso_curso_superior", fields: [codigo_curso_superior_2], references: [id], onUpdate: NoAction, map: "pmieducar_servidor_codigo_curso_superior_2_foreign")
 * educacenso_curso_superior_servidor_codigo_curso_superior_3Toeducacenso_curso_superior                            educacenso_curso_superior?    @relation("servidor_codigo_curso_superior_3Toeducacenso_curso_superior", fields: [codigo_curso_superior_3], references: [id], onUpdate: NoAction, map: "pmieducar_servidor_codigo_curso_superior_3_foreign")
 * educacenso_ies_servidor_instituicao_curso_superior_1Toeducacenso_ies                                             educacenso_ies?               @relation("servidor_instituicao_curso_superior_1Toeducacenso_ies", fields: [instituicao_curso_superior_1], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_servidor_instituicao_curso_superior_1_foreign")
 * educacenso_ies_servidor_instituicao_curso_superior_2Toeducacenso_ies                                             educacenso_ies?               @relation("servidor_instituicao_curso_superior_2Toeducacenso_ies", fields: [instituicao_curso_superior_2], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_servidor_instituicao_curso_superior_2_foreign")
 * educacenso_ies_servidor_instituicao_curso_superior_3Toeducacenso_ies                                             educacenso_ies?               @relation("servidor_instituicao_curso_superior_3Toeducacenso_ies", fields: [instituicao_curso_superior_3], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_servidor_instituicao_curso_superior_3_foreign")
 * instituicao                                                                                                      instituicao                   @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_servidor_ref_cod_instituicao_foreign")
 * subnivel                                                                                                         subnivel?                     @relation(fields: [ref_cod_subnivel], references: [cod_subnivel], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_servidor_ref_cod_subnivel_foreign")
 * escolaridade                                                                                                     escolaridade?                 @relation(fields: [ref_idesco], references: [idesco], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_servidor_ref_idesco_foreign")
 * servidor_afastamento                                                                                             servidor_afastamento[]
 * servidor_alocacao                                                                                                servidor_alocacao[]
 * servidor_curso_ministra                                                                                          servidor_curso_ministra[]
 * servidor_disciplina                                                                                              servidor_disciplina[]
 * servidor_formacao                                                                                                servidor_formacao[]
 * servidor_funcao                                                                                                  servidor_funcao[]
 * turma                                                                                                            turma[]
 * employee_posgraduate                                                                                             employee_posgraduate[]
 * @@id([cod_servidor, ref_cod_instituicao])
 * @@index([ref_cod_subnivel], map: "fki_servidor_ref_cod_subnivel")
 * @@index([ref_cod_subnivel], map: "fki_servidor_ref_cod_subnivel_")
 * @@index([cod_servidor, ref_cod_instituicao, ativo], map: "servidor_idx")
 * @@schema("pmieducar")
 * }
 * model servidor_afastamento {
 * ref_cod_servidor           Int
 * sequencial                 Int
 * ref_ref_cod_instituicao    Int
 * ref_cod_motivo_afastamento Int
 * ref_usuario_exc            Int?
 * ref_usuario_cad            Int
 * data_cadastro              DateTime           @db.Timestamp(6)
 * data_exclusao              DateTime?          @db.Timestamp(6)
 * data_retorno               DateTime?          @db.Timestamp(6)
 * data_saida                 DateTime           @db.Timestamp(6)
 * ativo                      Int                @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * id                         BigInt             @id @default(autoincrement())
 * motivo_afastamento         motivo_afastamento @relation(fields: [ref_cod_motivo_afastamento], references: [cod_motivo_afastamento], onUpdate: Restrict, map: "pmieducar_servidor_afastamento_ref_cod_motivo_afastamento_forei")
 * servidor                   servidor           @relation(fields: [ref_cod_servidor, ref_ref_cod_instituicao], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_servidor_afastamento_ref_cod_servidor_ref_ref_cod_ins")
 * @@unique([ref_cod_servidor, sequencial, ref_ref_cod_instituicao], map: "servidor_afastamento_ref_cod_servidor_sequencial_ref_ref_cod_in")
 * @@schema("pmieducar")
 * }
 * model servidor_alocacao {
 * cod_servidor_alocacao       Int                      @id @default(autoincrement())
 * ref_ref_cod_instituicao     Int
 * ref_usuario_exc             Int?
 * ref_usuario_cad             Int
 * ref_cod_escola              Int
 * ref_cod_servidor            Int
 * data_cadastro               DateTime                 @db.Timestamp(6)
 * data_exclusao               DateTime?                @db.Timestamp(6)
 * ativo                       Int                      @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * carga_horaria               Unsupported("interval")?
 * periodo                     Int?                     @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * hora_final                  DateTime?                @db.Time(6)
 * hora_inicial                DateTime?                @db.Time(6)
 * dia_semana                  Int?
 * ref_cod_servidor_funcao     Int?
 * ref_cod_funcionario_vinculo Int?
 * ano                         Int?
 * data_admissao               DateTime?                @db.Date
 * hora_atividade              DateTime?                @db.Time(6)
 * horas_excedentes            DateTime?                @db.Time(6)
 * data_saida                  DateTime?                @db.Date
 * escola                      escola                   @relation(fields: [ref_cod_escola], references: [cod_escola], onUpdate: Restrict, map: "pmieducar_servidor_alocacao_ref_cod_escola_foreign")
 * servidor                    servidor                 @relation(fields: [ref_cod_servidor, ref_ref_cod_instituicao], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_servidor_alocacao_ref_cod_servidor_ref_ref_cod_instit")
 * @@index([ref_ref_cod_instituicao, ref_cod_escola, ativo, periodo, carga_horaria], map: "servidor_alocacao_busca_horarios_idx")
 * @@schema("pmieducar")
 * }
 * model servidor_curso {
 * cod_servidor_curso Int               @id @default(autoincrement())
 * ref_cod_formacao   Int
 * data_conclusao     DateTime          @db.Timestamp(6)
 * data_registro      DateTime?         @db.Timestamp(6)
 * diplomas_registros String?
 * servidor_formacao  servidor_formacao @relation(fields: [ref_cod_formacao], references: [cod_formacao], onUpdate: Restrict, map: "pmieducar_servidor_curso_ref_cod_formacao_foreign")
 * @@schema("pmieducar")
 * }
 * model servidor_curso_ministra {
 * ref_cod_curso           Int
 * ref_ref_cod_instituicao Int
 * ref_cod_servidor        Int
 * curso                   curso    @relation(fields: [ref_cod_curso], references: [cod_curso], onUpdate: Restrict, map: "pmieducar_servidor_curso_ministra_ref_cod_curso_foreign")
 * servidor                servidor @relation(fields: [ref_cod_servidor, ref_ref_cod_instituicao], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_servidor_curso_ministra_ref_cod_servidor_ref_ref_cod_")
 * @@id([ref_cod_curso, ref_ref_cod_instituicao, ref_cod_servidor], map: "servidor_cuso_ministra_pkey")
 * @@schema("pmieducar")
 * }
 * model servidor_disciplina {
 * ref_cod_disciplina      Int
 * ref_ref_cod_instituicao Int
 * ref_cod_servidor        Int
 * ref_cod_curso           Int
 * ref_cod_funcao          Int
 * componente_curricular   componente_curricular @relation(fields: [ref_cod_disciplina], references: [id], onUpdate: Restrict, map: "pmieducar_servidor_disciplina_ref_cod_disciplina_foreign")
 * servidor_funcao         servidor_funcao       @relation(fields: [ref_cod_funcao], references: [cod_servidor_funcao], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_servidor_disciplina_ref_cod_funcao_foreign")
 * servidor                servidor              @relation(fields: [ref_cod_servidor, ref_ref_cod_instituicao], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_servidor_disciplina_ref_cod_servidor_ref_ref_cod_inst")
 * @@id([ref_cod_disciplina, ref_ref_cod_instituicao, ref_cod_servidor, ref_cod_curso, ref_cod_funcao])
 * @@schema("pmieducar")
 * }
 * model servidor_formacao {
 * cod_formacao             Int                        @id @default(autoincrement())
 * ref_ref_cod_instituicao  Int
 * ref_usuario_exc          Int?
 * ref_usuario_cad          Int
 * ref_cod_servidor         Int
 * nm_formacao              String                     @db.VarChar(255)
 * tipo                     String                     @db.Char(1)
 * descricao                String?
 * data_cadastro            DateTime                   @db.Timestamp(6)
 * data_exclusao            DateTime?                  @db.Timestamp(6)
 * ativo                    Int                        @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * servidor_curso           servidor_curso[]
 * servidor                 servidor                   @relation(fields: [ref_cod_servidor, ref_ref_cod_instituicao], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_servidor_formacao_ref_cod_servidor_ref_ref_cod_instit")
 * servidor_titulo_concurso servidor_titulo_concurso[]
 * @@schema("pmieducar")
 * }
 * model servidor_funcao {
 * ref_ref_cod_instituicao Int
 * ref_cod_servidor        Int
 * ref_cod_funcao          Int
 * matricula               String?               @db.VarChar
 * cod_servidor_funcao     Int                   @id(map: "cod_servidor_funcao_pkey") @default(autoincrement())
 * falta_atraso            falta_atraso[]
 * servidor_disciplina     servidor_disciplina[]
 * funcao                  funcao                @relation(fields: [ref_cod_funcao], references: [cod_funcao], onUpdate: Restrict, map: "pmieducar_servidor_funcao_ref_cod_funcao_foreign")
 * servidor                servidor              @relation(fields: [ref_cod_servidor, ref_ref_cod_instituicao], references: [cod_servidor, ref_cod_instituicao], onUpdate: Restrict, map: "pmieducar_servidor_funcao_ref_cod_servidor_ref_ref_cod_institui")
 * @@schema("pmieducar")
 * }
 * model servidor_titulo_concurso {
 * cod_servidor_titulo   Int               @id @default(autoincrement())
 * ref_cod_formacao      Int
 * data_vigencia_homolog DateTime          @db.Timestamp(6)
 * data_publicacao       DateTime          @db.Timestamp(6)
 * servidor_formacao     servidor_formacao @relation(fields: [ref_cod_formacao], references: [cod_formacao], onUpdate: Restrict, map: "pmieducar_servidor_titulo_concurso_ref_cod_formacao_foreign")
 * @@schema("pmieducar")
 * }
 * model situacao {
 * cod_situacao        Int        @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nm_situacao         String     @db.VarChar(255)
 * permite_emprestimo  Int        @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * descricao           String?
 * situacao_padrao     Int        @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * situacao_emprestada Int        @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * data_cadastro       DateTime   @db.Timestamp(6)
 * data_exclusao       DateTime?  @db.Timestamp(6)
 * ativo               Int        @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_biblioteca  Int
 * exemplar            exemplar[]
 * biblioteca          biblioteca @relation(fields: [ref_cod_biblioteca], references: [cod_biblioteca], onUpdate: Restrict, map: "pmieducar_situacao_ref_cod_biblioteca_foreign")
 * @@schema("pmieducar")
 * }
 * model subnivel {
 * cod_subnivel              Int        @id @default(autoincrement())
 * ref_usuario_exc           Int?
 * ref_usuario_cad           Int
 * ref_cod_subnivel_anterior Int?
 * ref_cod_nivel             Int
 * nm_subnivel               String?    @db.VarChar(100)
 * data_cadastro             DateTime   @db.Timestamp(6)
 * data_exclusao             DateTime?  @db.Timestamp(6)
 * ativo                     Boolean    @default(true)
 * salario                   Float
 * servidor                  servidor[]
 * nivel                     nivel      @relation(fields: [ref_cod_nivel], references: [cod_nivel], onUpdate: Restrict, map: "pmieducar_subnivel_ref_cod_nivel_foreign")
 * subnivel                  subnivel?  @relation("subnivelTosubnivel", fields: [ref_cod_subnivel_anterior], references: [cod_subnivel], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_subnivel_ref_cod_subnivel_anterior_foreign")
 * other_subnivel            subnivel[] @relation("subnivelTosubnivel")
 * @@schema("pmieducar")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model tipo_autor {
 * codigo     Int?
 * tipo_autor String? @db.VarChar(255)
 * @@ignore
 * @@schema("pmieducar")
 * }
 * model tipo_avaliacao {
 * cod_tipo_avaliacao     Int                      @id @default(autoincrement())
 * ref_usuario_exc        Int?
 * ref_usuario_cad        Int
 * nm_tipo                String                   @db.VarChar(255)
 * data_cadastro          DateTime                 @db.Timestamp(6)
 * data_exclusao          DateTime?                @db.Timestamp(6)
 * ativo                  Int                      @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * conceitual             Int?                     @default(1) @db.SmallInt
 * ref_cod_instituicao    Int
 * instituicao            instituicao              @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_tipo_avaliacao_ref_cod_instituicao_foreign")
 * tipo_avaliacao_valores tipo_avaliacao_valores[]
 * @@schema("pmieducar")
 * }
 * model tipo_avaliacao_valores {
 * ref_cod_tipo_avaliacao Int
 * sequencial             Int
 * nome                   String                 @db.VarChar(255)
 * valor                  Float
 * valor_min              Float
 * valor_max              Float
 * ativo                  Boolean?               @default(true)
 * nota_aluno             pmieducar_nota_aluno[]
 * tipo_avaliacao         tipo_avaliacao         @relation(fields: [ref_cod_tipo_avaliacao], references: [cod_tipo_avaliacao], onUpdate: Restrict, map: "pmieducar_tipo_avaliacao_valores_ref_cod_tipo_avaliacao_foreign")
 * @@id([ref_cod_tipo_avaliacao, sequencial])
 * @@schema("pmieducar")
 * }
 * model tipo_dispensa {
 * cod_tipo_dispensa   Int                   @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nm_tipo             String                @db.VarChar(255)
 * descricao           String?
 * data_cadastro       DateTime              @db.Timestamp(6)
 * data_exclusao       DateTime?             @db.Timestamp(6)
 * ativo               Int                   @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao Int
 * dispensa_disciplina dispensa_disciplina[]
 * instituicao         instituicao           @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_tipo_dispensa_ref_cod_instituicao_foreign")
 * @@schema("pmieducar")
 * }
 * model tipo_ensino {
 * cod_tipo_ensino        Int         @id @default(autoincrement())
 * ref_usuario_exc        Int?
 * ref_usuario_cad        Int
 * nm_tipo                String      @db.VarChar(255)
 * data_cadastro          DateTime    @db.Timestamp(6)
 * data_exclusao          DateTime?   @db.Timestamp(6)
 * ativo                  Int         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao    Int
 * atividade_complementar Boolean?    @default(false)
 * curso                  curso[]
 * instituicao            instituicao @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_tipo_ensino_ref_cod_instituicao_foreign")
 * @@schema("pmieducar")
 * }
 * model tipo_ocorrencia_disciplinar {
 * cod_tipo_ocorrencia_disciplinar  Int                                @id @default(autoincrement())
 * ref_usuario_exc                  Int?
 * ref_usuario_cad                  Int
 * nm_tipo                          String                             @db.VarChar(255)
 * descricao                        String?
 * max_ocorrencias                  Int?
 * data_cadastro                    DateTime                           @db.Timestamp(6)
 * data_exclusao                    DateTime?                          @db.Timestamp(6)
 * ativo                            Int                                @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao              Int
 * matricula_ocorrencia_disciplinar matricula_ocorrencia_disciplinar[]
 * instituicao                      instituicao                        @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_tipo_ocorrencia_disciplinar_ref_cod_instituicao_forei")
 * @@schema("pmieducar")
 * }
 * model tipo_regime {
 * cod_tipo_regime     Int         @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nm_tipo             String      @db.VarChar(255)
 * data_cadastro       DateTime    @db.Timestamp(6)
 * data_exclusao       DateTime?   @db.Timestamp(6)
 * ativo               Int         @db.SmallInt
 * ref_cod_instituicao Int
 * curso               curso[]
 * instituicao         instituicao @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onUpdate: Restrict, map: "pmieducar_tipo_regime_ref_cod_instituicao_foreign")
 * @@schema("pmieducar")
 * }
 * model tipo_usuario {
 * cod_tipo_usuario                                          Int                 @id @default(autoincrement())
 * ref_funcionario_cad                                       Int
 * ref_funcionario_exc                                       Int?
 * nm_tipo                                                   String              @db.VarChar(255)
 * descricao                                                 String?
 * nivel                                                     Int
 * data_cadastro                                             DateTime            @db.Timestamp(6)
 * data_exclusao                                             DateTime?           @db.Timestamp(6)
 * ativo                                                     Int                 @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * created_at                                                DateTime?           @db.Timestamp(0)
 * updated_at                                                DateTime?           @db.Timestamp(0)
 * menu_tipo_usuario                                         menu_tipo_usuario[]
 * funcionario_tipo_usuario_ref_funcionario_cadTofuncionario funcionario         @relation("tipo_usuario_ref_funcionario_cadTofuncionario", fields: [ref_funcionario_cad], references: [ref_cod_pessoa_fj], onUpdate: Restrict, map: "pmieducar_tipo_usuario_ref_funcionario_cad_foreign")
 * funcionario_tipo_usuario_ref_funcionario_excTofuncionario funcionario?        @relation("tipo_usuario_ref_funcionario_excTofuncionario", fields: [ref_funcionario_exc], references: [ref_cod_pessoa_fj], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_tipo_usuario_ref_funcionario_exc_foreign")
 * usuario                                                   usuario[]
 * @@schema("pmieducar")
 * }
 * model transferencia_solicitacao {
 * cod_transferencia_solicitacao                                            Int                @id @default(autoincrement())
 * ref_cod_transferencia_tipo                                               Int
 * ref_usuario_exc                                                          Int?
 * ref_usuario_cad                                                          Int
 * ref_cod_matricula_entrada                                                Int?
 * ref_cod_matricula_saida                                                  Int
 * observacao                                                               String?
 * data_cadastro                                                            DateTime           @db.Timestamp(6)
 * data_exclusao                                                            DateTime?          @db.Timestamp(6)
 * ativo                                                                    Int                @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * data_transferencia                                                       DateTime?          @db.Timestamp(6)
 * ref_cod_escola_destino                                                   Int?
 * escola_destino_externa                                                   String?            @db.VarChar
 * estado_escola_destino_externa                                            String?            @db.VarChar(60)
 * municipio_escola_destino_externa                                         String?            @db.VarChar(60)
 * matricula_transferencia_solicitacao_ref_cod_matricula_entradaTomatricula matricula?         @relation("transferencia_solicitacao_ref_cod_matricula_entradaTomatricula", fields: [ref_cod_matricula_entrada], references: [cod_matricula], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_transferencia_solicitacao_ref_cod_matricula_entrada_f")
 * matricula_transferencia_solicitacao_ref_cod_matricula_saidaTomatricula   matricula          @relation("transferencia_solicitacao_ref_cod_matricula_saidaTomatricula", fields: [ref_cod_matricula_saida], references: [cod_matricula], onUpdate: Restrict, map: "pmieducar_transferencia_solicitacao_ref_cod_matricula_saida_for")
 * transferencia_tipo                                                       transferencia_tipo @relation(fields: [ref_cod_transferencia_tipo], references: [cod_transferencia_tipo], onUpdate: Restrict, map: "pmieducar_transferencia_solicitacao_ref_cod_transferencia_tipo_")
 * @@schema("pmieducar")
 * }
 * model transferencia_tipo {
 * cod_transferencia_tipo    Int                         @id @default(autoincrement())
 * ref_usuario_exc           Int?
 * ref_usuario_cad           Int
 * nm_tipo                   String                      @db.VarChar(255)
 * desc_tipo                 String?
 * data_cadastro             DateTime                    @db.Timestamp(6)
 * data_exclusao             DateTime?                   @db.Timestamp(6)
 * ativo                     Int                         @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao       Int?
 * transferencia_solicitacao transferencia_solicitacao[]
 * instituicao               instituicao?                @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_transferencia_tipo_ref_cod_instituicao_foreign")
 * @@schema("pmieducar")
 * }
 * model turma {
 * cod_turma                                                                       Int                           @id @default(autoincrement())
 * ref_usuario_exc                                                                 Int?
 * ref_usuario_cad                                                                 Int
 * ref_ref_cod_serie                                                               Int?
 * ref_ref_cod_escola                                                              Int?
 * ref_cod_infra_predio_comodo                                                     Int?
 * nm_turma                                                                        String                        @db.VarChar(255)
 * sgl_turma                                                                       String?                       @db.VarChar(15)
 * max_aluno                                                                       Int
 * multiseriada                                                                    Int                           @default(dbgenerated("(0)::smallint")) @db.SmallInt
 * data_cadastro                                                                   DateTime                      @db.Timestamp(6)
 * data_exclusao                                                                   DateTime?                     @db.Timestamp(6)
 * ativo                                                                           Int                           @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_turma_tipo                                                              Int
 * hora_inicial                                                                    DateTime?                     @db.Time(6)
 * hora_final                                                                      DateTime?                     @db.Time(6)
 * hora_inicio_intervalo                                                           DateTime?                     @db.Time(6)
 * hora_fim_intervalo                                                              DateTime?                     @db.Time(6)
 * ref_cod_regente                                                                 Int?
 * ref_cod_instituicao_regente                                                     Int?
 * ref_cod_instituicao                                                             Int?
 * ref_cod_curso                                                                   Int?
 * ref_ref_cod_serie_mult                                                          Int?
 * ref_ref_cod_escola_mult                                                         Int?
 * visivel                                                                         Boolean?
 * tipo_boletim                                                                    Int?
 * turma_turno_id                                                                  Int?
 * ano                                                                             Int?
 * tipo_atendimento                                                                Int?                          @db.SmallInt
 * turma_mais_educacao                                                             Int?                          @db.SmallInt
 * atividade_complementar_1                                                        Int?
 * atividade_complementar_2                                                        Int?
 * atividade_complementar_3                                                        Int?
 * atividade_complementar_4                                                        Int?
 * atividade_complementar_5                                                        Int?
 * atividade_complementar_6                                                        Int?
 * aee_braille                                                                     Int?                          @db.SmallInt
 * aee_recurso_optico                                                              Int?                          @db.SmallInt
 * aee_estrategia_desenvolvimento                                                  Int?                          @db.SmallInt
 * aee_tecnica_mobilidade                                                          Int?                          @db.SmallInt
 * aee_libras                                                                      Int?                          @db.SmallInt
 * aee_caa                                                                         Int?                          @db.SmallInt
 * aee_curricular                                                                  Int?                          @db.SmallInt
 * aee_soroban                                                                     Int?                          @db.SmallInt
 * aee_informatica                                                                 Int?                          @db.SmallInt
 * aee_lingua_escrita                                                              Int?                          @db.SmallInt
 * aee_autonomia                                                                   Int?                          @db.SmallInt
 * cod_curso_profissional                                                          Int?
 * etapa_educacenso                                                                Int?                          @db.SmallInt
 * ref_cod_disciplina_dispensada                                                   Int?
 * parecer_1_etapa                                                                 String?
 * parecer_2_etapa                                                                 String?
 * parecer_3_etapa                                                                 String?
 * parecer_4_etapa                                                                 String?
 * nao_informar_educacenso                                                         Int?                          @db.SmallInt
 * tipo_mediacao_didatico_pedagogico                                               Int?
 * dias_semana                                                                     Int[]
 * atividades_complementares                                                       Int[]
 * atividades_aee                                                                  Int[]
 * tipo_boletim_diferenciado                                                       Int?                          @db.SmallInt
 * local_funcionamento_diferenciado                                                Int?                          @db.SmallInt
 * updated_at                                                                      DateTime?                     @default(now()) @db.Timestamp(6)
 * estrutura_curricular                                                            Int[]
 * formas_organizacao_turma                                                        Int?                          @db.SmallInt
 * unidade_curricular                                                              Int[]                         @db.SmallInt
 * componente_curricular_turma                                                     componente_curricular_turma[]
 * educacenso_cod_turma                                                            educacenso_cod_turma[]
 * professor_turma                                                                 professor_turma[]
 * matricula_turma                                                                 matricula_turma[]
 * quadro_horario                                                                  quadro_horario[]
 * curso                                                                           curso?                        @relation(fields: [ref_cod_curso], references: [cod_curso], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_turma_ref_cod_curso_foreign")
 * componente_curricular                                                           componente_curricular?        @relation(fields: [ref_cod_disciplina_dispensada], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_turma_ref_cod_disciplina_dispensada_foreign")
 * infra_predio_comodo                                                             infra_predio_comodo?          @relation(fields: [ref_cod_infra_predio_comodo], references: [cod_infra_predio_comodo], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_turma_ref_cod_infra_predio_comodo_foreign")
 * instituicao                                                                     instituicao?                  @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_turma_ref_cod_instituicao_foreign")
 * servidor                                                                        servidor?                     @relation(fields: [ref_cod_regente, ref_cod_instituicao_regente], references: [cod_servidor, ref_cod_instituicao], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_turma_ref_cod_regente_ref_cod_instituicao_regente_for")
 * turma_tipo                                                                      turma_tipo                    @relation(fields: [ref_cod_turma_tipo], references: [cod_turma_tipo], onUpdate: Restrict, map: "pmieducar_turma_ref_cod_turma_tipo_foreign")
 * escola_serie_turma_ref_ref_cod_escola_ref_ref_cod_serieToescola_serie           escola_serie?                 @relation("turma_ref_ref_cod_escola_ref_ref_cod_serieToescola_serie", fields: [ref_ref_cod_escola, ref_ref_cod_serie], references: [ref_cod_escola, ref_cod_serie], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_turma_ref_ref_cod_escola_ref_ref_cod_serie_foreign")
 * escola_serie_turma_ref_ref_cod_serie_mult_ref_ref_cod_escola_multToescola_serie escola_serie?                 @relation("turma_ref_ref_cod_serie_mult_ref_ref_cod_escola_multToescola_serie", fields: [ref_ref_cod_serie_mult, ref_ref_cod_escola_mult], references: [ref_cod_serie, ref_cod_escola], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_turma_ref_ref_cod_serie_mult_ref_ref_cod_escola_mult_")
 * turma_turno                                                                     turma_turno?                  @relation(fields: [turma_turno_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_turma_turma_turno_id_foreign")
 * turma_modulo                                                                    turma_modulo[]
 * turma_serie                                                                     turma_serie[]
 * @@index([nm_turma], map: "i_turma_nm_turma")
 * @@index([cod_turma], map: "idx_pmieducar_matricula_cod_turma")
 * @@index([cod_turma], map: "idx_pmieducar_turma_cod_turma")
 * @@schema("pmieducar")
 * }
 * model turma_modulo {
 * ref_cod_turma  Int
 * ref_cod_modulo Int
 * sequencial     Int
 * data_inicio    DateTime @db.Date
 * data_fim       DateTime @db.Date
 * dias_letivos   Int?
 * modulo         modulo   @relation(fields: [ref_cod_modulo], references: [cod_modulo], onUpdate: Restrict, map: "pmieducar_turma_modulo_ref_cod_modulo_foreign")
 * turma          turma    @relation(fields: [ref_cod_turma], references: [cod_turma], onUpdate: Restrict, map: "pmieducar_turma_modulo_ref_cod_turma_foreign")
 * @@id([ref_cod_turma, ref_cod_modulo, sequencial])
 * @@schema("pmieducar")
 * }
 * model turma_serie {
 * id                      BigInt       @id @default(autoincrement())
 * escola_id               Int
 * serie_id                Int
 * turma_id                Int
 * boletim_id              Int
 * boletim_diferenciado_id Int?
 * created_at              DateTime?    @db.Timestamp(0)
 * updated_at              DateTime?    @db.Timestamp(0)
 * escola_serie            escola_serie @relation(fields: [escola_id, serie_id], references: [ref_cod_escola, ref_cod_serie], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_turma_serie_escola_id_serie_id_foreign")
 * turma                   turma        @relation(fields: [turma_id], references: [cod_turma], onDelete: NoAction, onUpdate: NoAction, map: "pmieducar_turma_serie_turma_id_foreign")
 * @@schema("pmieducar")
 * }
 * model turma_tipo {
 * cod_turma_tipo      Int       @id @default(autoincrement())
 * ref_usuario_exc     Int?
 * ref_usuario_cad     Int
 * nm_tipo             String    @db.VarChar(255)
 * sgl_tipo            String    @db.VarChar(15)
 * data_cadastro       DateTime  @db.Timestamp(6)
 * data_exclusao       DateTime? @db.Timestamp(6)
 * ativo               Int       @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * ref_cod_instituicao Int?
 * turma               turma[]
 * @@schema("pmieducar")
 * }
 * model turma_turno {
 * id                     Int                      @id @default(autoincrement())
 * nome                   String                   @db.VarChar(15)
 * ativo                  Int                      @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * professor_turma        professor_turma[]
 * candidato_reserva_vaga candidato_reserva_vaga[]
 * turma                  turma[]
 * @@schema("pmieducar")
 * }
 * model usuario {
 * cod_usuario                                          Int              @id
 * ref_cod_instituicao                                  Int?
 * ref_funcionario_cad                                  Int
 * ref_funcionario_exc                                  Int?
 * ref_cod_tipo_usuario                                 Int?
 * data_cadastro                                        DateTime         @db.Timestamp(6)
 * data_exclusao                                        DateTime?        @db.Timestamp(6)
 * ativo                                                Int              @default(dbgenerated("(1)::smallint")) @db.SmallInt
 * escola_usuario                                       escola_usuario[]
 * funcionario_usuario_cod_usuarioTofuncionario         funcionario      @relation("usuario_cod_usuarioTofuncionario", fields: [cod_usuario], references: [ref_cod_pessoa_fj], onUpdate: Restrict, map: "pmieducar_usuario_cod_usuario_foreign")
 * instituicao                                          instituicao?     @relation(fields: [ref_cod_instituicao], references: [cod_instituicao], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_usuario_ref_cod_instituicao_foreign")
 * tipo_usuario                                         tipo_usuario?    @relation(fields: [ref_cod_tipo_usuario], references: [cod_tipo_usuario], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_usuario_ref_cod_tipo_usuario_foreign")
 * funcionario_usuario_ref_funcionario_cadTofuncionario funcionario      @relation("usuario_ref_funcionario_cadTofuncionario", fields: [ref_funcionario_cad], references: [ref_cod_pessoa_fj], onUpdate: Restrict, map: "pmieducar_usuario_ref_funcionario_cad_foreign")
 * funcionario_usuario_ref_funcionario_excTofuncionario funcionario?     @relation("usuario_ref_funcionario_excTofuncionario", fields: [ref_funcionario_exc], references: [ref_cod_pessoa_fj], onDelete: Restrict, onUpdate: Restrict, map: "pmieducar_usuario_ref_funcionario_exc_foreign")
 * @@schema("pmieducar")
 * }
 * model acesso {
 * cod_acesso Int      @id(map: "acesso_pk") @default(autoincrement())
 * data_hora  DateTime @db.Timestamp(6)
 * ip_externo String   @default("") @db.VarChar(50)
 * ip_interno String   @default("") @db.VarChar(255)
 * cod_pessoa Int      @default(0)
 * obs        String?
 * sucesso    Boolean  @default(true)
 * @@schema("portal")
 * }
 * model agenda {
 * cod_agenda                                             Int                  @id @default(autoincrement())
 * ref_ref_cod_pessoa_exc                                 Int?
 * ref_ref_cod_pessoa_cad                                 Int
 * nm_agenda                                              String               @db.VarChar
 * publica                                                Int                  @default(0) @db.SmallInt
 * envia_alerta                                           Int                  @default(0) @db.SmallInt
 * data_cad                                               DateTime             @db.Timestamp(6)
 * data_edicao                                            DateTime?            @db.Timestamp(6)
 * ref_ref_cod_pessoa_own                                 Int?
 * funcionario_agenda_ref_ref_cod_pessoa_cadTofuncionario funcionario          @relation("agenda_ref_ref_cod_pessoa_cadTofuncionario", fields: [ref_ref_cod_pessoa_cad], references: [ref_cod_pessoa_fj], onUpdate: Restrict, map: "portal_agenda_ref_ref_cod_pessoa_cad_foreign")
 * funcionario_agenda_ref_ref_cod_pessoa_excTofuncionario funcionario?         @relation("agenda_ref_ref_cod_pessoa_excTofuncionario", fields: [ref_ref_cod_pessoa_exc], references: [ref_cod_pessoa_fj], onDelete: Restrict, onUpdate: Restrict, map: "portal_agenda_ref_ref_cod_pessoa_exc_foreign")
 * funcionario_agenda_ref_ref_cod_pessoa_ownTofuncionario funcionario?         @relation("agenda_ref_ref_cod_pessoa_ownTofuncionario", fields: [ref_ref_cod_pessoa_own], references: [ref_cod_pessoa_fj], onDelete: Restrict, onUpdate: Restrict, map: "portal_agenda_ref_ref_cod_pessoa_own_foreign")
 * agenda_compromisso                                     agenda_compromisso[]
 * agenda_responsavel                                     agenda_responsavel[]
 * @@schema("portal")
 * }
 * model agenda_compromisso {
 * cod_agenda_compromisso Int
 * versao                 Int
 * ref_cod_agenda         Int
 * ref_ref_cod_pessoa_cad Int
 * ativo                  Int?        @default(1) @db.SmallInt
 * data_inicio            DateTime?   @db.Timestamp(6)
 * titulo                 String?     @db.VarChar
 * descricao              String?
 * importante             Int         @default(0) @db.SmallInt
 * publico                Int         @default(0) @db.SmallInt
 * data_cadastro          DateTime    @db.Timestamp(6)
 * data_fim               DateTime?   @db.Timestamp(6)
 * agenda                 agenda      @relation(fields: [ref_cod_agenda], references: [cod_agenda], onUpdate: Restrict, map: "portal_agenda_compromisso_ref_cod_agenda_foreign")
 * funcionario            funcionario @relation(fields: [ref_ref_cod_pessoa_cad], references: [ref_cod_pessoa_fj], onUpdate: Restrict, map: "portal_agenda_compromisso_ref_ref_cod_pessoa_cad_foreign")
 * @@id([cod_agenda_compromisso, versao, ref_cod_agenda])
 * @@schema("portal")
 * }
 * model agenda_responsavel {
 * ref_cod_agenda        Int
 * ref_ref_cod_pessoa_fj Int
 * principal             Int?        @db.SmallInt
 * agenda                agenda      @relation(fields: [ref_cod_agenda], references: [cod_agenda], onUpdate: Restrict, map: "portal_agenda_responsavel_ref_cod_agenda_foreign")
 * funcionario           funcionario @relation(fields: [ref_ref_cod_pessoa_fj], references: [ref_cod_pessoa_fj], onUpdate: Restrict, map: "portal_agenda_responsavel_ref_ref_cod_pessoa_fj_foreign")
 * @@id([ref_cod_agenda, ref_ref_cod_pessoa_fj])
 * @@schema("portal")
 * }
 * model funcionario {
 * ref_cod_pessoa_fj                                          Int                  @id(map: "funcionario_pk") @default(0)
 * matricula                                                  String?              @db.VarChar(12)
 * senha                                                      String?              @db.VarChar(191)
 * ativo                                                      Int?                 @db.SmallInt
 * ref_sec                                                    Int?
 * ramal                                                      String?              @db.VarChar(10)
 * sequencial                                                 String?              @db.Char(3)
 * opcao_menu                                                 String?
 * ref_cod_setor                                              Int?
 * ref_cod_funcionario_vinculo                                Int?
 * tempo_expira_senha                                         Int?
 * tempo_expira_conta                                         Int?
 * data_troca_senha                                           DateTime?            @db.Date
 * data_reativa_conta                                         DateTime?            @db.Date
 * ref_ref_cod_pessoa_fj                                      Int?
 * proibido                                                   Int                  @default(0)
 * ref_cod_setor_new                                          Int?
 * matricula_new                                              BigInt?
 * matricula_permanente                                       Int?                 @default(0) @db.SmallInt
 * tipo_menu                                                  Int                  @default(0) @db.SmallInt
 * ip_logado                                                  String?              @db.VarChar(50)
 * data_login                                                 DateTime?            @db.Timestamp(6)
 * email                                                      String?              @db.VarChar(50)
 * status_token                                               String?              @db.VarChar(191)
 * matricula_interna                                          String?              @db.VarChar(30)
 * receber_novidades                                          Int?                 @db.SmallInt
 * atualizou_cadastro                                         Int?                 @db.SmallInt
 * data_expiracao                                             DateTime?            @db.Date
 * force_reset_password                                       Boolean              @default(false)
 * tipo_usuario_tipo_usuario_ref_funcionario_cadTofuncionario tipo_usuario[]       @relation("tipo_usuario_ref_funcionario_cadTofuncionario")
 * tipo_usuario_tipo_usuario_ref_funcionario_excTofuncionario tipo_usuario[]       @relation("tipo_usuario_ref_funcionario_excTofuncionario")
 * usuario_usuario_cod_usuarioTofuncionario                   usuario?             @relation("usuario_cod_usuarioTofuncionario")
 * usuario_usuario_ref_funcionario_cadTofuncionario           usuario[]            @relation("usuario_ref_funcionario_cadTofuncionario")
 * usuario_usuario_ref_funcionario_excTofuncionario           usuario[]            @relation("usuario_ref_funcionario_excTofuncionario")
 * agenda_agenda_ref_ref_cod_pessoa_cadTofuncionario          agenda[]             @relation("agenda_ref_ref_cod_pessoa_cadTofuncionario")
 * agenda_agenda_ref_ref_cod_pessoa_excTofuncionario          agenda[]             @relation("agenda_ref_ref_cod_pessoa_excTofuncionario")
 * agenda_agenda_ref_ref_cod_pessoa_ownTofuncionario          agenda[]             @relation("agenda_ref_ref_cod_pessoa_ownTofuncionario")
 * agenda_compromisso                                         agenda_compromisso[]
 * agenda_responsavel                                         agenda_responsavel[]
 * fisica                                                     fisica               @relation(fields: [ref_cod_pessoa_fj], references: [idpes], onUpdate: Restrict, map: "portal_funcionario_ref_cod_pessoa_fj_foreign")
 * funcionario                                                funcionario?         @relation("funcionarioTofuncionario", fields: [ref_ref_cod_pessoa_fj], references: [ref_cod_pessoa_fj], onDelete: Restrict, onUpdate: Restrict, map: "portal_funcionario_ref_ref_cod_pessoa_fj_foreign")
 * other_funcionario                                          funcionario[]        @relation("funcionarioTofuncionario")
 * @@schema("portal")
 * }
 * model funcionario_vinculo {
 * cod_funcionario_vinculo Int     @id(map: "funcionario_vinculo_pk") @default(autoincrement())
 * nm_vinculo              String  @default("") @db.VarChar(255)
 * abreviatura             String? @db.VarChar(16)
 * @@schema("portal")
 * }
 * model cities {
 * id         Int         @id @default(autoincrement())
 * state_id   Int
 * name       String      @db.VarChar(191)
 * ibge_code  Int?
 * created_at DateTime?   @db.Timestamp(0)
 * updated_at DateTime?   @db.Timestamp(0)
 * deleted_at DateTime?   @db.Timestamp(0)
 * states     states      @relation(fields: [state_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_cities_state_id_foreign")
 * districts  districts[]
 * places     places[]
 * @@schema("oldpublic")
 * }
 * model countries {
 * id         Int       @id @default(autoincrement())
 * name       String    @db.VarChar(191)
 * ibge_code  Int?
 * created_at DateTime? @db.Timestamp(0)
 * updated_at DateTime? @db.Timestamp(0)
 * deleted_at DateTime? @db.Timestamp(0)
 * states     states[]
 * @@schema("oldpublic")
 * }
 * model districts {
 * id         Int       @id @default(autoincrement())
 * city_id    Int
 * name       String    @db.VarChar(191)
 * ibge_code  Int?
 * created_at DateTime? @db.Timestamp(0)
 * updated_at DateTime? @db.Timestamp(0)
 * deleted_at DateTime? @db.Timestamp(0)
 * cities     cities    @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_districts_city_id_foreign")
 * @@schema("oldpublic")
 * }
 * model educacenso_imports {
 * id                BigInt    @id @default(autoincrement())
 * year              Int
 * school            String    @db.VarChar(191)
 * user_id           Int
 * finished          Boolean
 * error             Boolean   @default(false)
 * created_at        DateTime? @db.Timestamp(0)
 * updated_at        DateTime? @db.Timestamp(0)
 * registration_date DateTime? @db.Date
 * @@schema("oldpublic")
 * }
 * model employee_graduation_disciplines {
 * id                   Int                    @id @default(autoincrement())
 * name                 String                 @db.VarChar(191)
 * employee_graduations employee_graduations[]
 * @@schema("oldpublic")
 * }
 * model employee_graduations {
 * id                              Int                              @id @default(autoincrement())
 * employee_id                     Int
 * course_id                       Int
 * completion_year                 Int
 * college_id                      Int
 * discipline_id                   Int?
 * created_at                      DateTime?                        @db.Timestamp(0)
 * updated_at                      DateTime?                        @db.Timestamp(0)
 * educacenso_ies                  educacenso_ies                   @relation(fields: [college_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "employee_graduations_college_id_foreign")
 * educacenso_curso_superior       educacenso_curso_superior        @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "employee_graduations_course_id_foreign")
 * employee_graduation_disciplines employee_graduation_disciplines? @relation(fields: [discipline_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "employee_graduations_discipline_id_foreign")
 * @@schema("oldpublic")
 * }
 * model employee_posgraduate {
 * id              BigInt    @id @default(autoincrement())
 * employee_id     Int
 * entity_id       Int
 * type_id         Int?
 * area_id         Int?
 * completion_year Int?
 * created_at      DateTime? @db.Timestamp(0)
 * updated_at      DateTime? @db.Timestamp(0)
 * servidor        servidor  @relation(fields: [employee_id, entity_id], references: [cod_servidor, ref_cod_instituicao], onDelete: NoAction, onUpdate: NoAction, map: "employee_posgraduate_employee_id_entity_id_foreign")
 * @@schema("oldpublic")
 * }
 * /// This model has been renamed to 'Renamedexport' during introspection, because the original name 'export' is reserved.
 * model Renamedexport {
 * id         BigInt    @id @default(autoincrement())
 * user_id    BigInt
 * model      String    @db.VarChar(191)
 * fields     Json      @db.Json
 * hash       String?   @db.VarChar(191)
 * filename   String?   @db.VarChar(191)
 * url        String?   @db.VarChar(191)
 * created_at DateTime? @db.Timestamp(0)
 * updated_at DateTime? @db.Timestamp(0)
 * filters    Json?     @db.Json
 * @@map("export")
 * @@schema("oldpublic")
 * }
 * model failed_jobs {
 * id         BigInt   @id @default(autoincrement())
 * uuid       String   @unique(map: "failed_jobs_uuid_unique") @db.VarChar(191)
 * connection String
 * queue      String
 * payload    String
 * exception  String
 * failed_at  DateTime @default(now()) @db.Timestamp(0)
 * @@schema("oldpublic")
 * }
 * model files {
 * id              BigInt            @id @default(autoincrement())
 * url             String            @db.VarChar(191)
 * size            Int
 * original_name   String            @db.VarChar(191)
 * extension       String            @db.VarChar(191)
 * created_at      DateTime?         @db.Timestamp(0)
 * updated_at      DateTime?         @db.Timestamp(0)
 * files_relations files_relations[]
 * @@schema("oldpublic")
 * }
 * model files_relations {
 * id          BigInt    @id @default(autoincrement())
 * type        String    @db.VarChar(191)
 * relation_id Int
 * file_id     BigInt
 * created_at  DateTime? @db.Timestamp(0)
 * updated_at  DateTime? @db.Timestamp(0)
 * files       files     @relation(fields: [file_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "files_relations_file_id_foreign")
 * @@schema("oldpublic")
 * }
 * model ieducar_audit {
 * id      BigInt   @id @default(autoincrement())
 * context Json?    @db.Json
 * before  Json?    @db.Json
 * after   Json?    @db.Json
 * schema  String   @db.VarChar(191)
 * table   String   @db.VarChar(191)
 * date    DateTime @db.Timestamp(0)
 * @@schema("oldpublic")
 * }
 * model log_unification_old_data {
 * id               Int              @id @default(autoincrement())
 * unification_id   Int
 * table            String           @db.VarChar(191)
 * keys             Json             @db.Json
 * old_data         Json             @db.Json
 * log_unifications log_unifications @relation(fields: [unification_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "log_unification_old_data_unification_id_foreign")
 * @@schema("oldpublic")
 * }
 * model log_unifications {
 * id                       Int                        @id @default(autoincrement())
 * type                     String                     @db.VarChar(191)
 * main_id                  Int
 * duplicates_id            Json                       @db.Json
 * created_by               Int
 * updated_by               Int
 * active                   Boolean                    @default(true)
 * created_at               DateTime?                  @db.Timestamp(0)
 * updated_at               DateTime?                  @db.Timestamp(0)
 * duplicates_name          Json?                      @db.Json
 * log_unification_old_data log_unification_old_data[]
 * @@schema("oldpublic")
 * }
 * model manager_access_criterias {
 * id              Int               @id @default(autoincrement())
 * name            String            @db.VarChar(191)
 * school_managers school_managers[]
 * @@schema("oldpublic")
 * }
 * model manager_link_types {
 * id              Int               @id @default(autoincrement())
 * name            String            @db.VarChar(191)
 * school_managers school_managers[]
 * @@schema("oldpublic")
 * }
 * model manager_roles {
 * id              Int               @id @default(autoincrement())
 * name            String            @db.VarChar(191)
 * school_managers school_managers[]
 * @@schema("oldpublic")
 * }
 * model menus {
 * id                Int                 @id @default(autoincrement())
 * parent_id         Int?
 * title             String              @db.VarChar(191)
 * description       String?             @db.VarChar(191)
 * link              String?             @db.VarChar(191)
 * icon              String?             @db.VarChar(191)
 * order             Int                 @default(99)
 * type              Int                 @default(1)
 * process           Int?
 * old               Int?
 * parent_old        Int?
 * active            Boolean             @default(true)
 * created_at        DateTime?           @db.Timestamp(0)
 * updated_at        DateTime?           @db.Timestamp(0)
 * menu_tipo_usuario menu_tipo_usuario[]
 * @@schema("oldpublic")
 * }
 * model migrated_disciplines {
 * id                                                                                  BigInt                @id @default(autoincrement())
 * old_discipline_id                                                                   Int
 * new_discipline_id                                                                   Int
 * grade_id                                                                            Int?
 * year                                                                                Int
 * created_by                                                                          Int?
 * created_at                                                                          DateTime?             @db.Timestamp(0)
 * updated_at                                                                          DateTime?             @db.Timestamp(0)
 * componente_curricular_migrated_disciplines_new_discipline_idTocomponente_curricular componente_curricular @relation("migrated_disciplines_new_discipline_idTocomponente_curricular", fields: [new_discipline_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_migrated_disciplines_new_discipline_id_foreign")
 * componente_curricular_migrated_disciplines_old_discipline_idTocomponente_curricular componente_curricular @relation("migrated_disciplines_old_discipline_idTocomponente_curricular", fields: [old_discipline_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_migrated_disciplines_old_discipline_id_foreign")
 * @@schema("oldpublic")
 * }
 * model migrations {
 * id        Int    @id @default(autoincrement())
 * migration String @db.VarChar(191)
 * batch     Int
 * @@schema("oldpublic")
 * }
 * model notification_type {
 * id   BigInt @id @default(autoincrement())
 * name String @db.VarChar(191)
 * @@schema("oldpublic")
 * }
 * model notifications {
 * id         BigInt    @id @default(autoincrement())
 * text       String
 * link       String?   @db.VarChar(191)
 * read_at    DateTime? @db.Timestamp(0)
 * user_id    Int
 * type_id    Int
 * created_at DateTime? @db.Timestamp(0)
 * updated_at DateTime? @db.Timestamp(0)
 * @@schema("oldpublic")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model password_resets {
 * email      String    @db.VarChar(191)
 * token      String    @db.VarChar(191)
 * created_at DateTime? @db.Timestamp(0)
 * @@index([email], map: "password_resets_email_index")
 * @@ignore
 * @@schema("oldpublic")
 * }
 * model person_has_place {
 * id         Int       @id @default(autoincrement())
 * person_id  Int
 * place_id   Int
 * type       Int
 * created_at DateTime? @db.Timestamp(0)
 * updated_at DateTime? @db.Timestamp(0)
 * deleted_at DateTime? @db.Timestamp(0)
 * pessoa     pessoa    @relation(fields: [person_id], references: [idpes], onDelete: NoAction, onUpdate: NoAction, map: "public_person_has_place_person_id_foreign")
 * places     places    @relation(fields: [place_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_person_has_place_place_id_foreign")
 * @@unique([person_id, type], map: "public_person_has_place_person_id_type_unique")
 * @@schema("oldpublic")
 * }
 * model personal_access_tokens {
 * id             BigInt    @id @default(autoincrement())
 * tokenable_type String    @db.VarChar(191)
 * tokenable_id   BigInt
 * name           String    @db.VarChar(191)
 * token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
 * abilities      String?
 * last_used_at   DateTime? @db.Timestamp(0)
 * created_at     DateTime? @db.Timestamp(0)
 * updated_at     DateTime? @db.Timestamp(0)
 * @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
 * @@schema("oldpublic")
 * }
 * model places {
 * id               Int                @id @default(autoincrement())
 * city_id          Int
 * address          String             @db.VarChar(191)
 * number           String?            @db.VarChar(191)
 * complement       String?            @db.VarChar(191)
 * neighborhood     String             @db.VarChar(191)
 * postal_code      String             @db.VarChar(191)
 * latitude         Float?
 * longitude        Float?
 * created_at       DateTime?          @db.Timestamp(0)
 * updated_at       DateTime?          @db.Timestamp(0)
 * deleted_at       DateTime?          @db.Timestamp(0)
 * person_has_place person_has_place[]
 * cities           cities             @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_places_city_id_foreign")
 * @@schema("oldpublic")
 * }
 * model release_period_dates {
 * id                BigInt          @id @default(autoincrement())
 * start_date        DateTime        @db.Date
 * end_date          DateTime        @db.Date
 * release_period_id BigInt
 * release_periods   release_periods @relation(fields: [release_period_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "release_period_dates_release_period_id_foreign")
 * @@schema("oldpublic")
 * }
 * model release_period_schools {
 * id                BigInt          @id @default(autoincrement())
 * school_id         Int
 * release_period_id BigInt
 * release_periods   release_periods @relation(fields: [release_period_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "release_period_schools_release_period_id_foreign")
 * @@schema("oldpublic")
 * }
 * model release_periods {
 * id                     BigInt                   @id @default(autoincrement())
 * year                   Int
 * stage_type_id          Int
 * stage                  Int
 * created_at             DateTime?                @db.Timestamp(0)
 * updated_at             DateTime?                @db.Timestamp(0)
 * release_period_dates   release_period_dates[]
 * release_period_schools release_period_schools[]
 * @@schema("oldpublic")
 * }
 * model school_managers {
 * id                          Int                       @id @default(autoincrement())
 * employee_id                 Int
 * school_id                   Int
 * role_id                     Int?
 * access_criteria_id          Int?
 * access_criteria_description String?                   @db.VarChar(191)
 * link_type_id                Int?
 * chief                       Boolean                   @default(false)
 * created_at                  DateTime?                 @db.Timestamp(0)
 * updated_at                  DateTime?                 @db.Timestamp(0)
 * manager_access_criterias    manager_access_criterias? @relation(fields: [access_criteria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "school_managers_access_criteria_id_foreign")
 * manager_link_types          manager_link_types?       @relation(fields: [link_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "school_managers_link_type_id_foreign")
 * manager_roles               manager_roles?            @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "school_managers_role_id_foreign")
 * escola                      escola                    @relation(fields: [school_id], references: [cod_escola], onDelete: NoAction, onUpdate: NoAction, map: "school_managers_school_id_foreign")
 * @@schema("oldpublic")
 * }
 * model setor_bai {
 * idsetorbai Decimal @id(map: "pk_setorbai") @default(dbgenerated("nextval(('public.seq_setor_bai'::text)::regclass)")) @db.Decimal(6, 0)
 * nome       String  @db.VarChar(80)
 * @@schema("oldpublic")
 * }
 * model settings {
 * id                  Int                 @id @default(autoincrement())
 * key                 String              @unique(map: "settings_key_unique") @db.VarChar(191)
 * value               String?
 * type                String              @default("string") @db.VarChar(191)
 * description         String?             @db.VarChar(191)
 * created_at          DateTime?           @db.Timestamp(0)
 * updated_at          DateTime?           @db.Timestamp(0)
 * setting_category_id BigInt              @default(1)
 * hint                String?             @db.VarChar(191)
 * settings_categories settings_categories @relation(fields: [setting_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "settings_setting_category_id_foreign")
 * @@schema("oldpublic")
 * }
 * model settings_categories {
 * id         BigInt     @id @default(autoincrement())
 * name       String     @db.VarChar(191)
 * enabled    Boolean    @default(true)
 * created_at DateTime?  @db.Timestamp(0)
 * updated_at DateTime?  @db.Timestamp(0)
 * settings   settings[]
 * @@schema("oldpublic")
 * }
 * model states {
 * id           Int       @id @default(autoincrement())
 * country_id   Int
 * name         String    @db.VarChar(191)
 * abbreviation String    @db.VarChar(191)
 * ibge_code    Int?
 * created_at   DateTime? @db.Timestamp(0)
 * updated_at   DateTime? @db.Timestamp(0)
 * deleted_at   DateTime? @db.Timestamp(0)
 * cities       cities[]
 * countries    countries @relation(fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_states_country_id_foreign")
 * @@schema("oldpublic")
 * }
 * model users {
 * id                BigInt    @id @default(autoincrement())
 * name              String    @db.VarChar(191)
 * email             String    @unique(map: "users_email_unique") @db.VarChar(191)
 * email_verified_at DateTime? @db.Timestamp(0)
 * password          String    @db.VarChar(191)
 * remember_token    String?   @db.VarChar(100)
 * created_at        DateTime? @db.Timestamp(0)
 * updated_at        DateTime? @db.Timestamp(0)
 * @@schema("oldpublic")
 * }
 * model situacao_matricula {
 * cod_situacao Int    @id
 * descricao    String @db.VarChar(50)
 * @@schema("relatorio")
 * }
 * /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 * model view_columns {
 * view_name   String?
 * column_name String?
 * data_type   String?
 * @@ignore
 * @@schema("softagon")
 * }
 */
