---
description: 
globs: 
alwaysApply: true
---
# EduPrime Project Guidelines

This rule summarizes the main guidelines and best practices for the EduPrime project, as described in [GUIDELINES.md](mdc:GUIDELINES.md).

## Project Structure
- Modular ERP: Each module is in `src/modules/[module-name]` with its own components, services, and views.
- Shared assets are in `assets/` or `public/`.

## Technology Stack
- **Frontend:** Ionic Framework 8, Vue 3, TypeScript
- **State Management:** Pinia 3
- **Routing:** Vue Router 4
- **Bundler:** Vite
- **ORM:** Prisma
- **Mobile:** Capacitor
- **Lint/Format:** ESLint, Prettier, Husky

## Best Practices
- Use Ionic components (e.g., `ion-list`, `ion-item`) for a consistent mobile experience.
- Use Vue 3's Composition API and composables for shared logic.
- Manage global state with Pinia, creating stores per module or data domain.
- Centralize API calls in services or composables.
- Use TypeScript for strong typing.
- Use slots for reusable and flexible components.
- Name components with the module prefix (e.g., `class-registration-StudentList`).
- For large lists, use Vue Virtual Scroller.
- Follow code conventions for Vue, Ionic, and TypeScript.
- Keep modules independent; use shared composables/utilities if needed.

## Additional Notes
- Use `package.json` scripts for build, lint, seed, etc.
- Use Husky for pre-commit hooks.
- Keep Prisma migrations and seeds organized in `prisma/`.

